<?php

/**
 * TrdLotteryPrizeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdLotteryPrizeTable extends Doctrine_Table
{

    //奖品缓存key
    public static $PRIZE_CACHE_KEY = 'shihuo.lottery.virtual_';

    public static $VIRTUAL_STATUS = 1;
    public static $NO_VIRTUAL_STATUS = 2;

    /**
     * Returns an instance of this class.
     *
     * @return object TrdLotteryPrizeTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdLotteryPrize');
    }


    /**
     * 获取全部的数据
     */
    public static function  getAll($bind = array()) {
        $data = self::getInstance()->createQuery();
        //select
        if (!empty($bind['select'])){
            $data->select($bind['select']);
        } else {
            $data->select("*");
        }
        //where 简单判断  如果复杂 建议新写函数
        if(!empty($bind['where']) && count($bind['where']) > 0) {
            foreach($bind['where'] as $k=>$v) {
                $data->addWhere($v);
            }
        }
        //order
        if (!empty($bind['order'])){
            $data->orderBy($bind['order']);
        } else {
            $data->orderBy('id desc');
        }

        //limit
        if (!empty($bind['limit'])){
            $data->limit($bind['limit']);
        }

        if(!empty($bind['offset'])) {
            $data->offset($bind['offset']);
        }
        $data =  $data->fetchArray();
        if(!empty($bind['is_count'])) {
            $data = $data[0]['num'];
        }
        return $data;
    }


    /**
     * 删除数据
     */
    public static function del_one($id) {
        $data = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('id = ?',$id)
            ->fetchOne();
        if(empty($data)) return false;
        if($data->getIsVirtual() == 1) {
            //如果是虚拟奖品 同时删除 redis 内容
            $redisMod = sfContext::getInstance()->getDatabaseConnection('kaluliRedis');
            $_key = self::$PRIZE_CACHE_KEY.$id;
            $redisMod->del($_key);
        }
        return  $data->delete();
    }


}