<?php

/**
 * TrdAppActivityReceivedTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdAppActivityReceivedTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TrdAppActivityReceivedTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdAppActivityReceived');
    }

    # 查看已领取的总数
    public static function getReceivedCount($activity_id = null)
    {
        if (empty($activity_id)) {
            return false;
        }

        $query = self::getInstance()->createQuery()
            ->where('activity_id = ?', $activity_id);
        return $query->count();
    }

    # 查看已领取的列表
    public static function getReceivedList($activity_id = null, $offset=0, $limit=30)
    {
        if (empty($activity_id)) {
            return false;
        }
        $query = self::getInstance()->createQuery()
            ->where('activity_id = ?',$activity_id);
        return $query->offset($offset)
            ->limit($limit)
            ->fetchArray();
    }

    // 获取用户领取某张优惠券的次数
    public function getRecivedCount($activityId, $uid)
    {
        if (empty($activityId) || empty($uid)) {
            return false;
        }
        $query = self::getInstance()->createQuery()
            ->where('activity_id = ?', $activityId)
            ->addWhere('hupu_uid = ?', $uid);
        return $query->count();
    }

    // 获取领取过的专享券
    public static function getMyActivityList($hupuUid, $page = 1, $limit = 20)
    {
        $offset = ($page - 1) * $limit;

        $sql = 'SELECT a.activity_id,a.account,a.start_time,a.received_time,b.img_path,b.title,b.is_delete,b.go_url
            FROM trd_app_activity_received as a LEFT JOIN trd_app_activity b ON a.activity_id=b.id
            WHERE a.hupu_uid=' . $hupuUid . ' ORDER BY a.start_time DESC,a.received_time DESC LIMIT ' . $offset . ',' . $limit;

        $connection = Doctrine_Manager::getInstance()->getConnection('trade');
        $searchDataList = $connection->execute($sql);
        $results = $searchDataList->fetchAll(PDO::FETCH_ASSOC);
        $connection->close();
        return $results;
    }
}