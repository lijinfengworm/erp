<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KllSendMsg', 'kaluli');

/**
 * BaseKllSendMsg
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $mobile
 * @property integer $opt_uid
 * @property integer $nums
 * @property integer $stime
 * 
 * @method integer    getId()      Returns the current record's "id" value
 * @method string     getMobile()  Returns the current record's "mobile" value
 * @method integer    getOptUid()  Returns the current record's "opt_uid" value
 * @method integer    getNums()    Returns the current record's "nums" value
 * @method integer    getStime()   Returns the current record's "stime" value
 * @method KllSendMsg setId()      Sets the current record's "id" value
 * @method KllSendMsg setMobile()  Sets the current record's "mobile" value
 * @method KllSendMsg setOptUid()  Sets the current record's "opt_uid" value
 * @method KllSendMsg setNums()    Sets the current record's "nums" value
 * @method KllSendMsg setStime()   Sets the current record's "stime" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKllSendMsg extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_send_msg');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('mobile', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('opt_uid', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nums', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('stime', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}