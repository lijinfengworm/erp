<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdGrouponCategory', 'trade');

/**
 * BaseTrdGrouponCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $sort
 * @property boolean $is_delete
 * 
 * @method integer            getId()        Returns the current record's "id" value
 * @method string             getName()      Returns the current record's "name" value
 * @method integer            getSort()      Returns the current record's "sort" value
 * @method boolean            getIsDelete()  Returns the current record's "is_delete" value
 * @method TrdGrouponCategory setId()        Sets the current record's "id" value
 * @method TrdGrouponCategory setName()      Sets the current record's "name" value
 * @method TrdGrouponCategory setSort()      Sets the current record's "sort" value
 * @method TrdGrouponCategory setIsDelete()  Sets the current record's "is_delete" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdGrouponCategory extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_groupon_category');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('sort', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('is_delete', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}