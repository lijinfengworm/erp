<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdDesire', 'trade');

/**
 * BaseTrdDesire
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $item_id
 * @property integer $item_all_id
 * @property integer $hupu_uid
 * @property string $username
 * @property TrdItem $TrdItem
 * @property TrdItemAll $TrdItemAll
 * 
 * @method integer    getId()          Returns the current record's "id" value
 * @method integer    getItemId()      Returns the current record's "item_id" value
 * @method integer    getItemAllId()   Returns the current record's "item_all_id" value
 * @method integer    getHupuUid()     Returns the current record's "hupu_uid" value
 * @method string     getUsername()    Returns the current record's "username" value
 * @method TrdItem    getTrdItem()     Returns the current record's "TrdItem" value
 * @method TrdItemAll getTrdItemAll()  Returns the current record's "TrdItemAll" value
 * @method TrdDesire  setId()          Sets the current record's "id" value
 * @method TrdDesire  setItemId()      Sets the current record's "item_id" value
 * @method TrdDesire  setItemAllId()   Sets the current record's "item_all_id" value
 * @method TrdDesire  setHupuUid()     Sets the current record's "hupu_uid" value
 * @method TrdDesire  setUsername()    Sets the current record's "username" value
 * @method TrdDesire  setTrdItem()     Sets the current record's "TrdItem" value
 * @method TrdDesire  setTrdItemAll()  Sets the current record's "TrdItemAll" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdDesire extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_desire');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('item_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => false,
             ));
        $this->hasColumn('item_all_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => false,
             ));
        $this->hasColumn('hupu_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             ));
        $this->hasColumn('username', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 45,
             ));


        $this->index('user_item_desire', array(
             'fields' => 
             array(
              0 => 'item_id',
              1 => 'hupu_uid',
             ),
             'type' => 'unique',
             ));
        $this->index('user_item_all_desire', array(
             'fields' => 
             array(
              0 => 'item_all_id',
              1 => 'hupu_uid',
             ),
             'type' => 'unique',
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TrdItem', array(
             'local' => 'item_id',
             'foreign' => 'id'));

        $this->hasOne('TrdItemAll', array(
             'local' => 'item_all_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}