<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdLotteryUser', 'trade');

/**
 * BaseTrdLotteryUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $lottery_id
 * @property string $phone
 * @property int $verify
 * @property integer $lottery_num
 * @property integer $attr_num
 * @property string $source
 * 
 * @method integer        getId()          Returns the current record's "id" value
 * @method integer        getLotteryId()   Returns the current record's "lottery_id" value
 * @method string         getPhone()       Returns the current record's "phone" value
 * @method int            getVerify()      Returns the current record's "verify" value
 * @method integer        getLotteryNum()  Returns the current record's "lottery_num" value
 * @method integer        getAttrNum()     Returns the current record's "attr_num" value
 * @method string         getSource()      Returns the current record's "source" value
 * @method TrdLotteryUser setId()          Sets the current record's "id" value
 * @method TrdLotteryUser setLotteryId()   Sets the current record's "lottery_id" value
 * @method TrdLotteryUser setPhone()       Sets the current record's "phone" value
 * @method TrdLotteryUser setVerify()      Sets the current record's "verify" value
 * @method TrdLotteryUser setLotteryNum()  Sets the current record's "lottery_num" value
 * @method TrdLotteryUser setAttrNum()     Sets the current record's "attr_num" value
 * @method TrdLotteryUser setSource()      Sets the current record's "source" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdLotteryUser extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_lottery_user');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('lottery_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('phone', 'string', 15, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 15,
             ));
        $this->hasColumn('verify', 'int', 8, array(
             'type' => 'int',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('lottery_num', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('attr_num', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('source', 'string', 12, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 12,
             ));


        $this->index('lottery_id', array(
             'fields' => 
             array(
              0 => 'lottery_id',
             ),
             ));
        $this->index('phone', array(
             'fields' => 
             array(
              0 => 'phone',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}