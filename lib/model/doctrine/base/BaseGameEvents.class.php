<?php

/**
 * BaseGameEvents
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property timestamp $start_date
 * @property timestamp $end_date
 * @property string $contents
 * @property string $rules
 * @property string $rewards
 * @property integer $status
 * 
 * @method integer    getId()         Returns the current record's "id" value
 * @method string     getName()       Returns the current record's "name" value
 * @method timestamp  getStartDate()  Returns the current record's "start_date" value
 * @method timestamp  getEndDate()    Returns the current record's "end_date" value
 * @method string     getContents()   Returns the current record's "contents" value
 * @method string     getRules()      Returns the current record's "rules" value
 * @method string     getRewards()    Returns the current record's "rewards" value
 * @method integer    getStatus()     Returns the current record's "status" value
 * @method GameEvents setId()         Sets the current record's "id" value
 * @method GameEvents setName()       Sets the current record's "name" value
 * @method GameEvents setStartDate()  Sets the current record's "start_date" value
 * @method GameEvents setEndDate()    Sets the current record's "end_date" value
 * @method GameEvents setContents()   Sets the current record's "contents" value
 * @method GameEvents setRules()      Sets the current record's "rules" value
 * @method GameEvents setRewards()    Sets the current record's "rewards" value
 * @method GameEvents setStatus()     Sets the current record's "status" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGameEvents extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('game_events');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 2000, array(
             'type' => 'string',
             'length' => 2000,
             ));
        $this->hasColumn('start_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('end_date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('contents', 'string', 2000, array(
             'type' => 'string',
             'length' => 2000,
             ));
        $this->hasColumn('rules', 'string', 2000, array(
             'type' => 'string',
             'length' => 2000,
             ));
        $this->hasColumn('rewards', 'string', 2000, array(
             'type' => 'string',
             'length' => 2000,
             ));
        $this->hasColumn('status', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}