<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdGroupon', 'trade');

/**
 * BaseTrdGroupon
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $brand_id
 * @property integer $shop_id
 * @property integer $item_id
 * @property integer $hupu_uid
 * @property string $hupu_username
 * @property string $ibilling_number
 * @property integer $pay_status
 * @property string $intro
 * @property string $memo
 * @property string $title
 * @property string $url
 * @property integer $attend_count
 * @property float $price
 * @property float $original_price
 * @property float $discount
 * @property integer $praise
 * @property integer $category_id
 * @property datetime $start_time
 * @property datetime $end_time
 * @property string $attr
 * @property string $goods_num
 * @property string $color_num
 * @property string $pic_attr
 * @property integer $rank
 * @property integer $alliance
 * @property integer $is_sold
 * @property integer $collect_count
 * @property integer $status
 * @property integer $usp_logo
 * @property integer $type
 * @property integer $is_ad
 * @property integer $pay_type
 * @property integer $pay_date
 * @property string $commodity
 * @property TrdBrand $Brand
 * 
 * @method integer    getId()              Returns the current record's "id" value
 * @method integer    getBrandId()         Returns the current record's "brand_id" value
 * @method integer    getShopId()          Returns the current record's "shop_id" value
 * @method integer    getItemId()          Returns the current record's "item_id" value
 * @method integer    getHupuUid()         Returns the current record's "hupu_uid" value
 * @method string     getHupuUsername()    Returns the current record's "hupu_username" value
 * @method string     getIbillingNumber()  Returns the current record's "ibilling_number" value
 * @method integer    getPayStatus()       Returns the current record's "pay_status" value
 * @method string     getIntro()           Returns the current record's "intro" value
 * @method string     getMemo()            Returns the current record's "memo" value
 * @method string     getTitle()           Returns the current record's "title" value
 * @method string     getUrl()             Returns the current record's "url" value
 * @method integer    getAttendCount()     Returns the current record's "attend_count" value
 * @method float      getPrice()           Returns the current record's "price" value
 * @method float      getOriginalPrice()   Returns the current record's "original_price" value
 * @method float      getDiscount()        Returns the current record's "discount" value
 * @method integer    getPraise()          Returns the current record's "praise" value
 * @method integer    getCategoryId()      Returns the current record's "category_id" value
 * @method datetime   getStartTime()       Returns the current record's "start_time" value
 * @method datetime   getEndTime()         Returns the current record's "end_time" value
 * @method string     getAttr()            Returns the current record's "attr" value
 * @method string     getGoodsNum()        Returns the current record's "goods_num" value
 * @method string     getColorNum()        Returns the current record's "color_num" value
 * @method string     getPicAttr()         Returns the current record's "pic_attr" value
 * @method integer    getRank()            Returns the current record's "rank" value
 * @method integer    getAlliance()        Returns the current record's "alliance" value
 * @method integer    getIsSold()          Returns the current record's "is_sold" value
 * @method integer    getCollectCount()    Returns the current record's "collect_count" value
 * @method integer    getStatus()          Returns the current record's "status" value
 * @method integer    getUspLogo()         Returns the current record's "usp_logo" value
 * @method integer    getType()            Returns the current record's "type" value
 * @method integer    getIsAd()            Returns the current record's "is_ad" value
 * @method integer    getPayType()         Returns the current record's "pay_type" value
 * @method integer    getPayDate()         Returns the current record's "pay_date" value
 * @method string     getCommodity()       Returns the current record's "commodity" value
 * @method TrdBrand   getBrand()           Returns the current record's "Brand" value
 * @method TrdGroupon setId()              Sets the current record's "id" value
 * @method TrdGroupon setBrandId()         Sets the current record's "brand_id" value
 * @method TrdGroupon setShopId()          Sets the current record's "shop_id" value
 * @method TrdGroupon setItemId()          Sets the current record's "item_id" value
 * @method TrdGroupon setHupuUid()         Sets the current record's "hupu_uid" value
 * @method TrdGroupon setHupuUsername()    Sets the current record's "hupu_username" value
 * @method TrdGroupon setIbillingNumber()  Sets the current record's "ibilling_number" value
 * @method TrdGroupon setPayStatus()       Sets the current record's "pay_status" value
 * @method TrdGroupon setIntro()           Sets the current record's "intro" value
 * @method TrdGroupon setMemo()            Sets the current record's "memo" value
 * @method TrdGroupon setTitle()           Sets the current record's "title" value
 * @method TrdGroupon setUrl()             Sets the current record's "url" value
 * @method TrdGroupon setAttendCount()     Sets the current record's "attend_count" value
 * @method TrdGroupon setPrice()           Sets the current record's "price" value
 * @method TrdGroupon setOriginalPrice()   Sets the current record's "original_price" value
 * @method TrdGroupon setDiscount()        Sets the current record's "discount" value
 * @method TrdGroupon setPraise()          Sets the current record's "praise" value
 * @method TrdGroupon setCategoryId()      Sets the current record's "category_id" value
 * @method TrdGroupon setStartTime()       Sets the current record's "start_time" value
 * @method TrdGroupon setEndTime()         Sets the current record's "end_time" value
 * @method TrdGroupon setAttr()            Sets the current record's "attr" value
 * @method TrdGroupon setGoodsNum()        Sets the current record's "goods_num" value
 * @method TrdGroupon setColorNum()        Sets the current record's "color_num" value
 * @method TrdGroupon setPicAttr()         Sets the current record's "pic_attr" value
 * @method TrdGroupon setRank()            Sets the current record's "rank" value
 * @method TrdGroupon setAlliance()        Sets the current record's "alliance" value
 * @method TrdGroupon setIsSold()          Sets the current record's "is_sold" value
 * @method TrdGroupon setCollectCount()    Sets the current record's "collect_count" value
 * @method TrdGroupon setStatus()          Sets the current record's "status" value
 * @method TrdGroupon setUspLogo()         Sets the current record's "usp_logo" value
 * @method TrdGroupon setType()            Sets the current record's "type" value
 * @method TrdGroupon setIsAd()            Sets the current record's "is_ad" value
 * @method TrdGroupon setPayType()         Sets the current record's "pay_type" value
 * @method TrdGroupon setPayDate()         Sets the current record's "pay_date" value
 * @method TrdGroupon setCommodity()       Sets the current record's "commodity" value
 * @method TrdGroupon setBrand()           Sets the current record's "Brand" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdGroupon extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_groupon');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('brand_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('shop_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('item_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('hupu_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('hupu_username', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('ibilling_number', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('pay_status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('intro', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
        $this->hasColumn('memo', 'string', 10000, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 10000,
             ));
        $this->hasColumn('title', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 200,
             ));
        $this->hasColumn('url', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
        $this->hasColumn('attend_count', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('original_price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('discount', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('praise', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 2,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('start_time', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('end_time', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('attr', 'string', 5000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 5000,
             ));
        $this->hasColumn('goods_num', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 200,
             ));
        $this->hasColumn('color_num', 'string', 200, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 200,
             ));
        $this->hasColumn('pic_attr', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 1000,
             ));
        $this->hasColumn('rank', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('alliance', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));
        $this->hasColumn('is_sold', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('collect_count', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('usp_logo', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('is_ad', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('pay_type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('pay_date', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('commodity', 'string', 511, array(
             'type' => 'string',
             'default' => '',
             'length' => 511,
             ));


        $this->index('brand_id', array(
             'fields' => 
             array(
              0 => 'brand_id',
             ),
             ));
        $this->index('end_time', array(
             'fields' => 
             array(
              0 => 'end_time',
             ),
             ));
        $this->index('start_time', array(
             'fields' => 
             array(
              0 => 'start_time',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TrdBrand as Brand', array(
             'local' => 'brand_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}