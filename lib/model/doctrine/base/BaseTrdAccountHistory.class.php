<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdAccountHistory', 'trade');

/**
 * BaseTrdAccountHistory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $hupu_uid
 * @property string $hupu_username
 * @property integer $type
 * @property integer $category
 * @property string $source
 * @property string $explanation
 * @property integer $actionid
 * @property integer $integral
 * @property integer $gold
 * @property integer $before_integral
 * @property integer $before_gold
 * @property integer $after_integral
 * @property integer $after_gold
 * @property integer $grant_uid
 * @property string $grant_username
 * 
 * @method integer           getId()              Returns the current record's "id" value
 * @method integer           getHupuUid()         Returns the current record's "hupu_uid" value
 * @method string            getHupuUsername()    Returns the current record's "hupu_username" value
 * @method integer           getType()            Returns the current record's "type" value
 * @method integer           getCategory()        Returns the current record's "category" value
 * @method string            getSource()          Returns the current record's "source" value
 * @method string            getExplanation()     Returns the current record's "explanation" value
 * @method integer           getActionid()        Returns the current record's "actionid" value
 * @method integer           getIntegral()        Returns the current record's "integral" value
 * @method integer           getGold()            Returns the current record's "gold" value
 * @method integer           getBeforeIntegral()  Returns the current record's "before_integral" value
 * @method integer           getBeforeGold()      Returns the current record's "before_gold" value
 * @method integer           getAfterIntegral()   Returns the current record's "after_integral" value
 * @method integer           getAfterGold()       Returns the current record's "after_gold" value
 * @method integer           getGrantUid()        Returns the current record's "grant_uid" value
 * @method string            getGrantUsername()   Returns the current record's "grant_username" value
 * @method TrdAccountHistory setId()              Sets the current record's "id" value
 * @method TrdAccountHistory setHupuUid()         Sets the current record's "hupu_uid" value
 * @method TrdAccountHistory setHupuUsername()    Sets the current record's "hupu_username" value
 * @method TrdAccountHistory setType()            Sets the current record's "type" value
 * @method TrdAccountHistory setCategory()        Sets the current record's "category" value
 * @method TrdAccountHistory setSource()          Sets the current record's "source" value
 * @method TrdAccountHistory setExplanation()     Sets the current record's "explanation" value
 * @method TrdAccountHistory setActionid()        Sets the current record's "actionid" value
 * @method TrdAccountHistory setIntegral()        Sets the current record's "integral" value
 * @method TrdAccountHistory setGold()            Sets the current record's "gold" value
 * @method TrdAccountHistory setBeforeIntegral()  Sets the current record's "before_integral" value
 * @method TrdAccountHistory setBeforeGold()      Sets the current record's "before_gold" value
 * @method TrdAccountHistory setAfterIntegral()   Sets the current record's "after_integral" value
 * @method TrdAccountHistory setAfterGold()       Sets the current record's "after_gold" value
 * @method TrdAccountHistory setGrantUid()        Sets the current record's "grant_uid" value
 * @method TrdAccountHistory setGrantUsername()   Sets the current record's "grant_username" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdAccountHistory extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_account_history');
        $this->hasColumn('id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('hupu_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('hupu_username', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('category', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('source', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('explanation', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('actionid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));
        $this->hasColumn('integral', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));
        $this->hasColumn('gold', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));
        $this->hasColumn('before_integral', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));
        $this->hasColumn('before_gold', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));
        $this->hasColumn('after_integral', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));
        $this->hasColumn('after_gold', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));
        $this->hasColumn('grant_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('grant_username', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}