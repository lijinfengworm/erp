<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdGoods', 'trade');

/**
 * BaseTrdGoods
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $code
 * @property integer $root_brand_id
 * @property integer $child_brand_id
 * @property integer $root_category_id
 * @property integer $child_category_id
 * @property string $type
 * @property integer $from_type
 * @property integer $from_id
 * @property string $pic
 * @property integer $supplier_count
 * @property integer $status
 * @property integer $comment
 * @property integer $admin_id
 * @property integer $is_delete
 * 
 * @method integer  getId()                Returns the current record's "id" value
 * @method string   getName()              Returns the current record's "name" value
 * @method string   getCode()              Returns the current record's "code" value
 * @method integer  getRootBrandId()       Returns the current record's "root_brand_id" value
 * @method integer  getChildBrandId()      Returns the current record's "child_brand_id" value
 * @method integer  getRootCategoryId()    Returns the current record's "root_category_id" value
 * @method integer  getChildCategoryId()   Returns the current record's "child_category_id" value
 * @method string   getType()              Returns the current record's "type" value
 * @method integer  getFromType()          Returns the current record's "from_type" value
 * @method integer  getFromId()            Returns the current record's "from_id" value
 * @method string   getPic()               Returns the current record's "pic" value
 * @method integer  getSupplierCount()     Returns the current record's "supplier_count" value
 * @method integer  getStatus()            Returns the current record's "status" value
 * @method integer  getComment()           Returns the current record's "comment" value
 * @method integer  getAdminId()           Returns the current record's "admin_id" value
 * @method integer  getIsDelete()          Returns the current record's "is_delete" value
 * @method TrdGoods setId()                Sets the current record's "id" value
 * @method TrdGoods setName()              Sets the current record's "name" value
 * @method TrdGoods setCode()              Sets the current record's "code" value
 * @method TrdGoods setRootBrandId()       Sets the current record's "root_brand_id" value
 * @method TrdGoods setChildBrandId()      Sets the current record's "child_brand_id" value
 * @method TrdGoods setRootCategoryId()    Sets the current record's "root_category_id" value
 * @method TrdGoods setChildCategoryId()   Sets the current record's "child_category_id" value
 * @method TrdGoods setType()              Sets the current record's "type" value
 * @method TrdGoods setFromType()          Sets the current record's "from_type" value
 * @method TrdGoods setFromId()            Sets the current record's "from_id" value
 * @method TrdGoods setPic()               Sets the current record's "pic" value
 * @method TrdGoods setSupplierCount()     Sets the current record's "supplier_count" value
 * @method TrdGoods setStatus()            Sets the current record's "status" value
 * @method TrdGoods setComment()           Sets the current record's "comment" value
 * @method TrdGoods setAdminId()           Sets the current record's "admin_id" value
 * @method TrdGoods setIsDelete()          Sets the current record's "is_delete" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdGoods extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_goods');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('code', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('root_brand_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('child_brand_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('root_category_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('child_category_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('type', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('from_type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('from_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('pic', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('supplier_count', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('comment', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('admin_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('is_delete', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}