<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('trdRedisPersistence', 'trade');

/**
 * BasetrdRedisPersistence
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $key
 * @property string $res
 * 
 * @method integer             getId()  Returns the current record's "id" value
 * @method string              getKey() Returns the current record's "key" value
 * @method string              getRes() Returns the current record's "res" value
 * @method trdRedisPersistence setId()  Sets the current record's "id" value
 * @method trdRedisPersistence setKey() Sets the current record's "key" value
 * @method trdRedisPersistence setRes() Sets the current record's "res" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasetrdRedisPersistence extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_redis_persistence');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('key', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('res', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));


        $this->index('key_idx', array(
             'fields' => 
             array(
              0 => 'key',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}