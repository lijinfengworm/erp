<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KllActivity', 'kaluli');

/**
 * BaseKllActivity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $root_type
 * @property string $title
 * @property integer $total
 * @property integer $list_id
 * @property integer $limits
 * @property integer $recevied
 * @property datetime $start_date
 * @property datetime $expiry_date
 * @property string $img_path
 * @property string $content
 * @property integer $grant_uid
 * @property string $grant_username
 * @property string $mart
 * @property string $receive_url
 * @property boolean $is_delete
 * 
 * @method integer     getId()             Returns the current record's "id" value
 * @method integer     getRootType()       Returns the current record's "root_type" value
 * @method string      getTitle()          Returns the current record's "title" value
 * @method integer     getTotal()          Returns the current record's "total" value
 * @method integer     getListId()         Returns the current record's "list_id" value
 * @method integer     getLimits()         Returns the current record's "limits" value
 * @method integer     getRecevied()       Returns the current record's "recevied" value
 * @method datetime    getStartDate()      Returns the current record's "start_date" value
 * @method datetime    getExpiryDate()     Returns the current record's "expiry_date" value
 * @method string      getImgPath()        Returns the current record's "img_path" value
 * @method string      getContent()        Returns the current record's "content" value
 * @method integer     getGrantUid()       Returns the current record's "grant_uid" value
 * @method string      getGrantUsername()  Returns the current record's "grant_username" value
 * @method string      getMart()           Returns the current record's "mart" value
 * @method string      getReceiveUrl()     Returns the current record's "receive_url" value
 * @method boolean     getIsDelete()       Returns the current record's "is_delete" value
 * @method KllActivity setId()             Sets the current record's "id" value
 * @method KllActivity setRootType()       Sets the current record's "root_type" value
 * @method KllActivity setTitle()          Sets the current record's "title" value
 * @method KllActivity setTotal()          Sets the current record's "total" value
 * @method KllActivity setListId()         Sets the current record's "list_id" value
 * @method KllActivity setLimits()         Sets the current record's "limits" value
 * @method KllActivity setRecevied()       Sets the current record's "recevied" value
 * @method KllActivity setStartDate()      Sets the current record's "start_date" value
 * @method KllActivity setExpiryDate()     Sets the current record's "expiry_date" value
 * @method KllActivity setImgPath()        Sets the current record's "img_path" value
 * @method KllActivity setContent()        Sets the current record's "content" value
 * @method KllActivity setGrantUid()       Sets the current record's "grant_uid" value
 * @method KllActivity setGrantUsername()  Sets the current record's "grant_username" value
 * @method KllActivity setMart()           Sets the current record's "mart" value
 * @method KllActivity setReceiveUrl()     Sets the current record's "receive_url" value
 * @method KllActivity setIsDelete()       Sets the current record's "is_delete" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKllActivity extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_activity');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('root_type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('title', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('total', 'integer', 10, array(
             'type' => 'integer',
             'length' => 10,
             ));
        $this->hasColumn('list_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('limits', 'integer', 2, array(
             'type' => 'integer',
             'length' => 2,
             ));
        $this->hasColumn('recevied', 'integer', 10, array(
             'type' => 'integer',
             'length' => 10,
             ));
        $this->hasColumn('start_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('expiry_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('img_path', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('content', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
        $this->hasColumn('grant_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('grant_username', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('mart', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('receive_url', 'string', 250, array(
             'type' => 'string',
             'length' => 250,
             ));
        $this->hasColumn('is_delete', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}