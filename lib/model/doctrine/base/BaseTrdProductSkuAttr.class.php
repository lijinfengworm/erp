<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdProductSkuAttr', 'trade');

/**
 * BaseTrdProductSkuAttr
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $product_id
 * @property string $attr
 * 
 * @method integer           getId()         Returns the current record's "id" value
 * @method integer           getProductId()  Returns the current record's "product_id" value
 * @method string            getAttr()       Returns the current record's "attr" value
 * @method TrdProductSkuAttr setId()         Sets the current record's "id" value
 * @method TrdProductSkuAttr setProductId()  Sets the current record's "product_id" value
 * @method TrdProductSkuAttr setAttr()       Sets the current record's "attr" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdProductSkuAttr extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_product_sku_attr');
        $this->hasColumn('id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('product_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('attr', 'string', 20000, array(
             'type' => 'string',
             'length' => 20000,
             ));


        $this->index('product_id', array(
             'fields' => 
             array(
              0 => 'product_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}