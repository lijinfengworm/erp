<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KaluliItemSku', 'kaluli');

/**
 * BaseKaluliItemSku
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $item_id
 * @property string $code
 * @property string $goods_no
 * @property string $attr
 * @property string $ware_sku
 * @property float $price
 * @property float $discount_price
 * @property string $weight
 * @property string $pic
 * @property integer $total_num
 * @property integer $lock_num
 * @property integer $storehouse_id
 * @property integer $status
 * @property integer $wupdate_time
 * @property integer $sort
 * 
 * @method integer       getId()             Returns the current record's "id" value
 * @method integer       getItemId()         Returns the current record's "item_id" value
 * @method string        getCode()           Returns the current record's "code" value
 * @method string        getGoodsNo()        Returns the current record's "goods_no" value
 * @method string        getAttr()           Returns the current record's "attr" value
 * @method string        getWareSku()        Returns the current record's "ware_sku" value
 * @method float         getPrice()          Returns the current record's "price" value
 * @method float         getDiscountPrice()  Returns the current record's "discount_price" value
 * @method string        getWeight()         Returns the current record's "weight" value
 * @method string        getPic()            Returns the current record's "pic" value
 * @method integer       getTotalNum()       Returns the current record's "total_num" value
 * @method integer       getLockNum()        Returns the current record's "lock_num" value
 * @method integer       getStorehouseId()   Returns the current record's "storehouse_id" value
 * @method integer       getStatus()         Returns the current record's "status" value
 * @method integer       getWupdateTime()    Returns the current record's "wupdate_time" value
 * @method integer       getSort()           Returns the current record's "sort" value
 * @method KaluliItemSku setId()             Sets the current record's "id" value
 * @method KaluliItemSku setItemId()         Sets the current record's "item_id" value
 * @method KaluliItemSku setCode()           Sets the current record's "code" value
 * @method KaluliItemSku setGoodsNo()        Sets the current record's "goods_no" value
 * @method KaluliItemSku setAttr()           Sets the current record's "attr" value
 * @method KaluliItemSku setWareSku()        Sets the current record's "ware_sku" value
 * @method KaluliItemSku setPrice()          Sets the current record's "price" value
 * @method KaluliItemSku setDiscountPrice()  Sets the current record's "discount_price" value
 * @method KaluliItemSku setWeight()         Sets the current record's "weight" value
 * @method KaluliItemSku setPic()            Sets the current record's "pic" value
 * @method KaluliItemSku setTotalNum()       Sets the current record's "total_num" value
 * @method KaluliItemSku setLockNum()        Sets the current record's "lock_num" value
 * @method KaluliItemSku setStorehouseId()   Sets the current record's "storehouse_id" value
 * @method KaluliItemSku setStatus()         Sets the current record's "status" value
 * @method KaluliItemSku setWupdateTime()    Sets the current record's "wupdate_time" value
 * @method KaluliItemSku setSort()           Sets the current record's "sort" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKaluliItemSku extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_item_sku');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('item_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('code', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('goods_no', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('attr', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
        $this->hasColumn('ware_sku', 'string', 64, array(
             'type' => 'string',
             'length' => 64,
             ));
        $this->hasColumn('price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('discount_price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('weight', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('pic', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));
        $this->hasColumn('total_num', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('lock_num', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('storehouse_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('wupdate_time', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 11,
             ));
        $this->hasColumn('sort', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}