<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdCabbage', 'trade');

/**
 * BaseTrdCabbage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property float $price
 * @property string $intro
 * @property string $link_url
 * @property string $img_path
 * @property integer $is_delete
 * 
 * @method integer    getId()        Returns the current record's "id" value
 * @method string     getTitle()     Returns the current record's "title" value
 * @method float      getPrice()     Returns the current record's "price" value
 * @method string     getIntro()     Returns the current record's "intro" value
 * @method string     getLinkUrl()   Returns the current record's "link_url" value
 * @method string     getImgPath()   Returns the current record's "img_path" value
 * @method integer    getIsDelete()  Returns the current record's "is_delete" value
 * @method TrdCabbage setId()        Sets the current record's "id" value
 * @method TrdCabbage setTitle()     Sets the current record's "title" value
 * @method TrdCabbage setPrice()     Sets the current record's "price" value
 * @method TrdCabbage setIntro()     Sets the current record's "intro" value
 * @method TrdCabbage setLinkUrl()   Sets the current record's "link_url" value
 * @method TrdCabbage setImgPath()   Sets the current record's "img_path" value
 * @method TrdCabbage setIsDelete()  Sets the current record's "is_delete" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdCabbage extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_cabbage');
        $this->hasColumn('id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('title', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('intro', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('link_url', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('img_path', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('is_delete', 'integer', 1, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 1,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}