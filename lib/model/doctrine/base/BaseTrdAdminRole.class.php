<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdAdminRole', 'kaluli');

/**
 * BaseTrdAdminRole
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $is_super
 * @property integer $role_status
 * 
 * @method integer      getId()          Returns the current record's "id" value
 * @method string       getName()        Returns the current record's "name" value
 * @method integer      getIsSuper()     Returns the current record's "is_super" value
 * @method integer      getRoleStatus()  Returns the current record's "role_status" value
 * @method TrdAdminRole setId()          Sets the current record's "id" value
 * @method TrdAdminRole setName()        Sets the current record's "name" value
 * @method TrdAdminRole setIsSuper()     Sets the current record's "is_super" value
 * @method TrdAdminRole setRoleStatus()  Sets the current record's "role_status" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdAdminRole extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_admin_role');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('name', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('is_super', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('role_status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 1,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}