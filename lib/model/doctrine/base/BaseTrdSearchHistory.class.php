<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdSearchHistory', 'trade');

/**
 * BaseTrdSearchHistory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $word
 * @property integer $count
 * @property integer $type
 * @property integer $source
 * @property integer $time
 * @property datetime $create_time
 * 
 * @method integer          getId()          Returns the current record's "id" value
 * @method string           getWord()        Returns the current record's "word" value
 * @method integer          getCount()       Returns the current record's "count" value
 * @method integer          getType()        Returns the current record's "type" value
 * @method integer          getSource()      Returns the current record's "source" value
 * @method integer          getTime()        Returns the current record's "time" value
 * @method datetime         getCreateTime()  Returns the current record's "create_time" value
 * @method TrdSearchHistory setId()          Sets the current record's "id" value
 * @method TrdSearchHistory setWord()        Sets the current record's "word" value
 * @method TrdSearchHistory setCount()       Sets the current record's "count" value
 * @method TrdSearchHistory setType()        Sets the current record's "type" value
 * @method TrdSearchHistory setSource()      Sets the current record's "source" value
 * @method TrdSearchHistory setTime()        Sets the current record's "time" value
 * @method TrdSearchHistory setCreateTime()  Sets the current record's "create_time" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdSearchHistory extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_search_history');
        $this->hasColumn('id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('word', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('count', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 10,
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('source', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('time', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 11,
             ));
        $this->hasColumn('create_time', 'datetime', null, array(
             'type' => 'datetime',
             ));


        $this->index('word', array(
             'fields' => 
             array(
              0 => 'word',
             ),
             ));
        $this->index('time', array(
             'fields' => 
             array(
              0 => 'time',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}