<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KllMainOrderAttr', 'kaluliBB');

/**
 * BaseKllMainOrderAttr
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int $id
 * @property varchar $order_number
 * @property varchar $province
 * @property varchar $city
 * @property varchar $area
 * @property varchar $address
 * @property varchar $real_name
 * @property varchar $account
 * @property varchar $receiver
 * @property bigint $mobile
 * @property int $logistic_number
 * @property int $postal_code
 * @property varchar $card_type
 * @property varchar $card_code
 * @property int $creat_time
 * @property int $update_time
 * 
 * @method int              getId()              Returns the current record's "id" value
 * @method varchar          getOrderNumber()     Returns the current record's "order_number" value
 * @method varchar          getProvince()        Returns the current record's "province" value
 * @method varchar          getCity()            Returns the current record's "city" value
 * @method varchar          getArea()            Returns the current record's "area" value
 * @method varchar          getAddress()         Returns the current record's "address" value
 * @method varchar          getRealName()        Returns the current record's "real_name" value
 * @method varchar          getAccount()         Returns the current record's "account" value
 * @method varchar          getReceiver()        Returns the current record's "receiver" value
 * @method bigint           getMobile()          Returns the current record's "mobile" value
 * @method int              getLogisticNumber()  Returns the current record's "logistic_number" value
 * @method int              getPostalCode()      Returns the current record's "postal_code" value
 * @method varchar          getCardType()        Returns the current record's "card_type" value
 * @method varchar          getCardCode()        Returns the current record's "card_code" value
 * @method int              getCreatTime()       Returns the current record's "creat_time" value
 * @method int              getUpdateTime()      Returns the current record's "update_time" value
 * @method KllMainOrderAttr setId()              Sets the current record's "id" value
 * @method KllMainOrderAttr setOrderNumber()     Sets the current record's "order_number" value
 * @method KllMainOrderAttr setProvince()        Sets the current record's "province" value
 * @method KllMainOrderAttr setCity()            Sets the current record's "city" value
 * @method KllMainOrderAttr setArea()            Sets the current record's "area" value
 * @method KllMainOrderAttr setAddress()         Sets the current record's "address" value
 * @method KllMainOrderAttr setRealName()        Sets the current record's "real_name" value
 * @method KllMainOrderAttr setAccount()         Sets the current record's "account" value
 * @method KllMainOrderAttr setReceiver()        Sets the current record's "receiver" value
 * @method KllMainOrderAttr setMobile()          Sets the current record's "mobile" value
 * @method KllMainOrderAttr setLogisticNumber()  Sets the current record's "logistic_number" value
 * @method KllMainOrderAttr setPostalCode()      Sets the current record's "postal_code" value
 * @method KllMainOrderAttr setCardType()        Sets the current record's "card_type" value
 * @method KllMainOrderAttr setCardCode()        Sets the current record's "card_code" value
 * @method KllMainOrderAttr setCreatTime()       Sets the current record's "creat_time" value
 * @method KllMainOrderAttr setUpdateTime()      Sets the current record's "update_time" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKllMainOrderAttr extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_main_order_attr');
        $this->hasColumn('id', 'int', 10, array(
             'type' => 'int',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('order_number', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('province', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('city', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('area', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('address', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('real_name', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('account', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('receiver', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('mobile', 'bigint', 20, array(
             'type' => 'bigint',
             'length' => 20,
             ));
        $this->hasColumn('logistic_number', 'int', 10, array(
             'type' => 'int',
             'length' => 10,
             ));
        $this->hasColumn('postal_code', 'int', 5, array(
             'type' => 'int',
             'length' => 5,
             ));
        $this->hasColumn('card_type', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('card_code', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('creat_time', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('update_time', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}