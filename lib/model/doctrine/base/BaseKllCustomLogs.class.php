<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KllCustomLogs', 'kaluli');

/**
 * BaseKllCustomLogs
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $contents
 * @property integer $opt_uid
 * @property integer $order_number
 * @property datetime $stime
 * 
 * @method integer       getId()           Returns the current record's "id" value
 * @method string        getContents()     Returns the current record's "contents" value
 * @method integer       getOptUid()       Returns the current record's "opt_uid" value
 * @method integer       getOrderNumber()  Returns the current record's "order_number" value
 * @method datetime      getStime()        Returns the current record's "stime" value
 * @method KllCustomLogs setId()           Sets the current record's "id" value
 * @method KllCustomLogs setContents()     Sets the current record's "contents" value
 * @method KllCustomLogs setOptUid()       Sets the current record's "opt_uid" value
 * @method KllCustomLogs setOrderNumber()  Sets the current record's "order_number" value
 * @method KllCustomLogs setStime()        Sets the current record's "stime" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKllCustomLogs extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_custom_logs');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('contents', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('opt_uid', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('order_number', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('stime', 'datetime', null, array(
             'type' => 'datetime',
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}