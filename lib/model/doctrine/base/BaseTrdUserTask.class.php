<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdUserTask', 'trade');

/**
 * BaseTrdUserTask
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $hupu_uid
 * @property string $task_attr
 * @property string $one_time_attr
 * @property timestamp $finished_at
 * 
 * @method integer     getId()            Returns the current record's "id" value
 * @method integer     getHupuUid()       Returns the current record's "hupu_uid" value
 * @method string      getTaskAttr()      Returns the current record's "task_attr" value
 * @method string      getOneTimeAttr()   Returns the current record's "one_time_attr" value
 * @method timestamp   getFinishedAt()    Returns the current record's "finished_at" value
 * @method TrdUserTask setId()            Sets the current record's "id" value
 * @method TrdUserTask setHupuUid()       Sets the current record's "hupu_uid" value
 * @method TrdUserTask setTaskAttr()      Sets the current record's "task_attr" value
 * @method TrdUserTask setOneTimeAttr()   Sets the current record's "one_time_attr" value
 * @method TrdUserTask setFinishedAt()    Sets the current record's "finished_at" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdUserTask extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_user_task');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('hupu_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('task_attr', 'string', 256, array(
             'type' => 'string',
             'length' => 256,
             ));
        $this->hasColumn('one_time_attr', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));
        $this->hasColumn('finished_at', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}