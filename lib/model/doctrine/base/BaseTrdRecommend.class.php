<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdRecommend', 'trade');

/**
 * BaseTrdRecommend
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_all_id
 * @property string $name
 * @property TrdCategoryAll $Category
 * 
 * @method integer        getId()              Returns the current record's "id" value
 * @method integer        getCategoryAllId()   Returns the current record's "category_all_id" value
 * @method string         getName()            Returns the current record's "name" value
 * @method TrdCategoryAll getCategory()        Returns the current record's "Category" value
 * @method TrdRecommend   setId()              Sets the current record's "id" value
 * @method TrdRecommend   setCategoryAllId()   Sets the current record's "category_all_id" value
 * @method TrdRecommend   setName()            Sets the current record's "name" value
 * @method TrdRecommend   setCategory()        Sets the current record's "Category" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdRecommend extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_recommends');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('category_all_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 50,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TrdCategoryAll as Category', array(
             'local' => 'category_all_id',
             'foreign' => 'id'));
    }
}