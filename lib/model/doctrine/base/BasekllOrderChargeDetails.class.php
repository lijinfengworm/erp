<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('kllOrderChargeDetails', 'kaluli');

/**
 * BasekllOrderChargeDetails
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $logisticsId
 * @property integer $order_number
 * @property float $logistics_cost
 * @property float $package_cost
 * @property float $operating_cost
 * @property float $insurance_cost
 * @property float $verification_cost
 * @property float $other_cost
 * @property int $cost_unit
 * @property string $remark
 * @property timestamp $create_time
 * 
 * @method integer               getId()                Returns the current record's "id" value
 * @method string                getLogisticsId()       Returns the current record's "logisticsId" value
 * @method integer               getOrderNumber()       Returns the current record's "order_number" value
 * @method float                 getLogisticsCost()     Returns the current record's "logistics_cost" value
 * @method float                 getPackageCost()       Returns the current record's "package_cost" value
 * @method float                 getOperatingCost()     Returns the current record's "operating_cost" value
 * @method float                 getInsuranceCost()     Returns the current record's "insurance_cost" value
 * @method float                 getVerificationCost()  Returns the current record's "verification_cost" value
 * @method float                 getOtherCost()         Returns the current record's "other_cost" value
 * @method int                   getCostUnit()          Returns the current record's "cost_unit" value
 * @method string                getRemark()            Returns the current record's "remark" value
 * @method timestamp             getCreateTime()        Returns the current record's "create_time" value
 * @method kllOrderChargeDetails setId()                Sets the current record's "id" value
 * @method kllOrderChargeDetails setLogisticsId()       Sets the current record's "logisticsId" value
 * @method kllOrderChargeDetails setOrderNumber()       Sets the current record's "order_number" value
 * @method kllOrderChargeDetails setLogisticsCost()     Sets the current record's "logistics_cost" value
 * @method kllOrderChargeDetails setPackageCost()       Sets the current record's "package_cost" value
 * @method kllOrderChargeDetails setOperatingCost()     Sets the current record's "operating_cost" value
 * @method kllOrderChargeDetails setInsuranceCost()     Sets the current record's "insurance_cost" value
 * @method kllOrderChargeDetails setVerificationCost()  Sets the current record's "verification_cost" value
 * @method kllOrderChargeDetails setOtherCost()         Sets the current record's "other_cost" value
 * @method kllOrderChargeDetails setCostUnit()          Sets the current record's "cost_unit" value
 * @method kllOrderChargeDetails setRemark()            Sets the current record's "remark" value
 * @method kllOrderChargeDetails setCreateTime()        Sets the current record's "create_time" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasekllOrderChargeDetails extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_order_charge_details');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('logisticsId', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('order_number', 'integer', 10, array(
             'type' => 'integer',
             'length' => 10,
             ));
        $this->hasColumn('logistics_cost', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('package_cost', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('operating_cost', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('insurance_cost', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('verification_cost', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('other_cost', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('cost_unit', 'int', 4, array(
             'type' => 'int',
             'length' => 4,
             ));
        $this->hasColumn('remark', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));
        $this->hasColumn('create_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}