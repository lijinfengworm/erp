<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdOrderLogistics', 'trade');

/**
 * BaseTrdOrderLogistics
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $express_number
 * @property integer $type
 * @property integer $foreign_status
 * @property string $domestic_status
 * @property string $excompany
 * @property string $content
 * @property integer $transit_time
 * 
 * @method integer           getId()              Returns the current record's "id" value
 * @method string            getExpressNumber()   Returns the current record's "express_number" value
 * @method integer           getType()            Returns the current record's "type" value
 * @method integer           getForeignStatus()   Returns the current record's "foreign_status" value
 * @method string            getDomesticStatus()  Returns the current record's "domestic_status" value
 * @method string            getExcompany()       Returns the current record's "excompany" value
 * @method string            getContent()         Returns the current record's "content" value
 * @method integer           getTransitTime()     Returns the current record's "transit_time" value
 * @method TrdOrderLogistics setId()              Sets the current record's "id" value
 * @method TrdOrderLogistics setExpressNumber()   Sets the current record's "express_number" value
 * @method TrdOrderLogistics setType()            Sets the current record's "type" value
 * @method TrdOrderLogistics setForeignStatus()   Sets the current record's "foreign_status" value
 * @method TrdOrderLogistics setDomesticStatus()  Sets the current record's "domestic_status" value
 * @method TrdOrderLogistics setExcompany()       Sets the current record's "excompany" value
 * @method TrdOrderLogistics setContent()         Sets the current record's "content" value
 * @method TrdOrderLogistics setTransitTime()     Sets the current record's "transit_time" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdOrderLogistics extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_order_logistics');
        $this->hasColumn('id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('express_number', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('foreign_status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('domestic_status', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('excompany', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('content', 'string', 5000, array(
             'type' => 'string',
             'length' => 5000,
             ));
        $this->hasColumn('transit_time', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));


        $this->index('express_number', array(
             'fields' => 
             array(
              0 => 'express_number',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}