<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KaluliLipinkaLarge', 'kaluli');

/**
 * BaseKaluliLipinkaLarge
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $lipinka_id
 * @property integer $record_id
 * @property string $card
 * @property integer $num
 * @property integer $no_receive
 * @property integer $postpone_type
 * @property integer $postpone_day
 * @property integer $overdue_time
 * @property integer $stime
 * @property integer $etime
 * @property integer $status
 * 
 * @method integer            getId()            Returns the current record's "id" value
 * @method integer            getLipinkaId()     Returns the current record's "lipinka_id" value
 * @method integer            getRecordId()      Returns the current record's "record_id" value
 * @method string             getCard()          Returns the current record's "card" value
 * @method integer            getNum()           Returns the current record's "num" value
 * @method integer            getNoReceive()     Returns the current record's "no_receive" value
 * @method integer            getPostponeType()  Returns the current record's "postpone_type" value
 * @method integer            getPostponeDay()   Returns the current record's "postpone_day" value
 * @method integer            getOverdueTime()   Returns the current record's "overdue_time" value
 * @method integer            getStime()         Returns the current record's "stime" value
 * @method integer            getEtime()         Returns the current record's "etime" value
 * @method integer            getStatus()        Returns the current record's "status" value
 * @method KaluliLipinkaLarge setId()            Sets the current record's "id" value
 * @method KaluliLipinkaLarge setLipinkaId()     Sets the current record's "lipinka_id" value
 * @method KaluliLipinkaLarge setRecordId()      Sets the current record's "record_id" value
 * @method KaluliLipinkaLarge setCard()          Sets the current record's "card" value
 * @method KaluliLipinkaLarge setNum()           Sets the current record's "num" value
 * @method KaluliLipinkaLarge setNoReceive()     Sets the current record's "no_receive" value
 * @method KaluliLipinkaLarge setPostponeType()  Sets the current record's "postpone_type" value
 * @method KaluliLipinkaLarge setPostponeDay()   Sets the current record's "postpone_day" value
 * @method KaluliLipinkaLarge setOverdueTime()   Sets the current record's "overdue_time" value
 * @method KaluliLipinkaLarge setStime()         Sets the current record's "stime" value
 * @method KaluliLipinkaLarge setEtime()         Sets the current record's "etime" value
 * @method KaluliLipinkaLarge setStatus()        Sets the current record's "status" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKaluliLipinkaLarge extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_lipinka_large');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('lipinka_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('record_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('card', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 10,
             ));
        $this->hasColumn('num', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('no_receive', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('postpone_type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('postpone_day', 'integer', 6, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 6,
             ));
        $this->hasColumn('overdue_time', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('stime', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('etime', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));


        $this->index('lipinka_id', array(
             'fields' => 
             array(
              0 => 'lipinka_id',
             ),
             ));
        $this->index('record_id', array(
             'fields' => 
             array(
              0 => 'record_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}