<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KaluliLipinka', 'kaluli');

/**
 * BaseKaluliLipinka
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property integer $apply_user_id
 * @property integer $type
 * @property integer $activity_type
 * @property string $for_what
 * @property integer $verify_user_id
 * @property integer $stime
 * @property integer $etime
 * @property integer $amount
 * @property integer $status
 * @property integer $is_delete
 * 
 * @method integer       getId()             Returns the current record's "id" value
 * @method string        getTitle()          Returns the current record's "title" value
 * @method integer       getApplyUserId()    Returns the current record's "apply_user_id" value
 * @method integer       getType()           Returns the current record's "type" value
 * @method integer       getActivityType()   Returns the current record's "activity_type" value
 * @method string        getForWhat()        Returns the current record's "for_what" value
 * @method integer       getVerifyUserId()   Returns the current record's "verify_user_id" value
 * @method integer       getStime()          Returns the current record's "stime" value
 * @method integer       getEtime()          Returns the current record's "etime" value
 * @method integer       getAmount()         Returns the current record's "amount" value
 * @method integer       getStatus()         Returns the current record's "status" value
 * @method integer       getIsDelete()       Returns the current record's "is_delete" value
 * @method KaluliLipinka setId()             Sets the current record's "id" value
 * @method KaluliLipinka setTitle()          Sets the current record's "title" value
 * @method KaluliLipinka setApplyUserId()    Sets the current record's "apply_user_id" value
 * @method KaluliLipinka setType()           Sets the current record's "type" value
 * @method KaluliLipinka setActivityType()   Sets the current record's "activity_type" value
 * @method KaluliLipinka setForWhat()        Sets the current record's "for_what" value
 * @method KaluliLipinka setVerifyUserId()   Sets the current record's "verify_user_id" value
 * @method KaluliLipinka setStime()          Sets the current record's "stime" value
 * @method KaluliLipinka setEtime()          Sets the current record's "etime" value
 * @method KaluliLipinka setAmount()         Sets the current record's "amount" value
 * @method KaluliLipinka setStatus()         Sets the current record's "status" value
 * @method KaluliLipinka setIsDelete()       Sets the current record's "is_delete" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKaluliLipinka extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_lipinka');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('apply_user_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('activity_type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('for_what', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('verify_user_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('stime', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('etime', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('amount', 'integer', 6, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 6,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('is_delete', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}