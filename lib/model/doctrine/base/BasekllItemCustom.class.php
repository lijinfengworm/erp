<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('kllItemCustom', 'kaluli');

/**
 * BasekllItemCustom
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $warranty_days
 * @property string $goods_number
 * @property string $reg_custom
 * @property string $reg_inspection
 * @property datetime $reg_app_date
 * @property string $custom_code
 * @property string $inspection_code
 * @property string $hs_code
 * @property string $tax_code
 * @property string $stock_number
 * @property double $unit_price
 * @property string $unit
 * @property string $original
 * @property string $code
 * @property string $goods_id
 * @property string $product_id
 * 
 * @method integer       getId()              Returns the current record's "id" value
 * @method integer       getWarrantyDays()    Returns the current record's "warranty_days" value
 * @method string        getGoodsNumber()     Returns the current record's "goods_number" value
 * @method string        getRegCustom()       Returns the current record's "reg_custom" value
 * @method string        getRegInspection()   Returns the current record's "reg_inspection" value
 * @method datetime      getRegAppDate()      Returns the current record's "reg_app_date" value
 * @method string        getCustomCode()      Returns the current record's "custom_code" value
 * @method string        getInspectionCode()  Returns the current record's "inspection_code" value
 * @method string        getHsCode()          Returns the current record's "hs_code" value
 * @method string        getTaxCode()         Returns the current record's "tax_code" value
 * @method string        getStockNumber()     Returns the current record's "stock_number" value
 * @method double        getUnitPrice()       Returns the current record's "unit_price" value
 * @method string        getUnit()            Returns the current record's "unit" value
 * @method string        getOriginal()        Returns the current record's "original" value
 * @method string        getCode()            Returns the current record's "code" value
 * @method string        getGoodsId()         Returns the current record's "goods_id" value
 * @method string        getProductId()       Returns the current record's "product_id" value
 * @method kllItemCustom setId()              Sets the current record's "id" value
 * @method kllItemCustom setWarrantyDays()    Sets the current record's "warranty_days" value
 * @method kllItemCustom setGoodsNumber()     Sets the current record's "goods_number" value
 * @method kllItemCustom setRegCustom()       Sets the current record's "reg_custom" value
 * @method kllItemCustom setRegInspection()   Sets the current record's "reg_inspection" value
 * @method kllItemCustom setRegAppDate()      Sets the current record's "reg_app_date" value
 * @method kllItemCustom setCustomCode()      Sets the current record's "custom_code" value
 * @method kllItemCustom setInspectionCode()  Sets the current record's "inspection_code" value
 * @method kllItemCustom setHsCode()          Sets the current record's "hs_code" value
 * @method kllItemCustom setTaxCode()         Sets the current record's "tax_code" value
 * @method kllItemCustom setStockNumber()     Sets the current record's "stock_number" value
 * @method kllItemCustom setUnitPrice()       Sets the current record's "unit_price" value
 * @method kllItemCustom setUnit()            Sets the current record's "unit" value
 * @method kllItemCustom setOriginal()        Sets the current record's "original" value
 * @method kllItemCustom setCode()            Sets the current record's "code" value
 * @method kllItemCustom setGoodsId()         Sets the current record's "goods_id" value
 * @method kllItemCustom setProductId()       Sets the current record's "product_id" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasekllItemCustom extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_item_custom');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('warranty_days', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('goods_number', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('reg_custom', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('reg_inspection', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('reg_app_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('custom_code', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('inspection_code', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('hs_code', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('tax_code', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('stock_number', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('unit_price', 'double', null, array(
             'type' => 'double',
             ));
        $this->hasColumn('unit', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('original', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('code', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('goods_id', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('product_id', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}