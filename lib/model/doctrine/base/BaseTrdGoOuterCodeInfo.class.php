<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdGoOuterCodeInfo', 'trade');

/**
 * BaseTrdGoOuterCodeInfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $click_id
 * @property integer $uid
 * @property string $username
 * @property string $cooick_id
 * @property string $referer
 * @property string $referer_host
 * @property integer $referer_id
 * @property string $destination
 * @property string $destination_host
 * @property timestamp $click_time
 * @property string $item_name
 * @property integer $item_id
 * @property float $item_price
 * @property integer $item_num
 * @property string $item_type
 * @property string $shop_nick
 * @property timestamp $trade_time
 * @property float $trade_commission
 * 
 * @method integer            getId()               Returns the current record's "id" value
 * @method integer            getClickId()          Returns the current record's "click_id" value
 * @method integer            getUid()              Returns the current record's "uid" value
 * @method string             getUsername()         Returns the current record's "username" value
 * @method string             getCooickId()         Returns the current record's "cooick_id" value
 * @method string             getReferer()          Returns the current record's "referer" value
 * @method string             getRefererHost()      Returns the current record's "referer_host" value
 * @method integer            getRefererId()        Returns the current record's "referer_id" value
 * @method string             getDestination()      Returns the current record's "destination" value
 * @method string             getDestinationHost()  Returns the current record's "destination_host" value
 * @method timestamp          getClickTime()        Returns the current record's "click_time" value
 * @method string             getItemName()         Returns the current record's "item_name" value
 * @method integer            getItemId()           Returns the current record's "item_id" value
 * @method float              getItemPrice()        Returns the current record's "item_price" value
 * @method integer            getItemNum()          Returns the current record's "item_num" value
 * @method string             getItemType()         Returns the current record's "item_type" value
 * @method string             getShopNick()         Returns the current record's "shop_nick" value
 * @method timestamp          getTradeTime()        Returns the current record's "trade_time" value
 * @method float              getTradeCommission()  Returns the current record's "trade_commission" value
 * @method TrdGoOuterCodeInfo setId()               Sets the current record's "id" value
 * @method TrdGoOuterCodeInfo setClickId()          Sets the current record's "click_id" value
 * @method TrdGoOuterCodeInfo setUid()              Sets the current record's "uid" value
 * @method TrdGoOuterCodeInfo setUsername()         Sets the current record's "username" value
 * @method TrdGoOuterCodeInfo setCooickId()         Sets the current record's "cooick_id" value
 * @method TrdGoOuterCodeInfo setReferer()          Sets the current record's "referer" value
 * @method TrdGoOuterCodeInfo setRefererHost()      Sets the current record's "referer_host" value
 * @method TrdGoOuterCodeInfo setRefererId()        Sets the current record's "referer_id" value
 * @method TrdGoOuterCodeInfo setDestination()      Sets the current record's "destination" value
 * @method TrdGoOuterCodeInfo setDestinationHost()  Sets the current record's "destination_host" value
 * @method TrdGoOuterCodeInfo setClickTime()        Sets the current record's "click_time" value
 * @method TrdGoOuterCodeInfo setItemName()         Sets the current record's "item_name" value
 * @method TrdGoOuterCodeInfo setItemId()           Sets the current record's "item_id" value
 * @method TrdGoOuterCodeInfo setItemPrice()        Sets the current record's "item_price" value
 * @method TrdGoOuterCodeInfo setItemNum()          Sets the current record's "item_num" value
 * @method TrdGoOuterCodeInfo setItemType()         Sets the current record's "item_type" value
 * @method TrdGoOuterCodeInfo setShopNick()         Sets the current record's "shop_nick" value
 * @method TrdGoOuterCodeInfo setTradeTime()        Sets the current record's "trade_time" value
 * @method TrdGoOuterCodeInfo setTradeCommission()  Sets the current record's "trade_commission" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdGoOuterCodeInfo extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_go_outher_code_info');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('click_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => false,
             ));
        $this->hasColumn('uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('username', 'string', 45, array(
             'type' => 'string',
             'default' => '',
             'length' => 45,
             ));
        $this->hasColumn('cooick_id', 'string', 40, array(
             'type' => 'string',
             'default' => '',
             'length' => 40,
             ));
        $this->hasColumn('referer', 'string', 255, array(
             'type' => 'string',
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('referer_host', 'string', 20, array(
             'type' => 'string',
             'default' => '',
             'length' => 20,
             ));
        $this->hasColumn('referer_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('destination', 'string', 255, array(
             'type' => 'string',
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('destination_host', 'string', 20, array(
             'type' => 'string',
             'default' => '',
             'length' => 20,
             ));
        $this->hasColumn('click_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('item_name', 'string', 65, array(
             'type' => 'string',
             'default' => '',
             'length' => 65,
             ));
        $this->hasColumn('item_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('item_price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('item_num', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('item_type', 'string', 20, array(
             'type' => 'string',
             'default' => '',
             'length' => 20,
             ));
        $this->hasColumn('shop_nick', 'string', 40, array(
             'type' => 'string',
             'default' => '',
             'length' => 40,
             ));
        $this->hasColumn('trade_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('trade_commission', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));


        $this->index('click_id_index', array(
             'fields' => 
             array(
              0 => 'uid',
             ),
             'type' => 'unique',
             ));
        $this->index('uid_index', array(
             'fields' => 
             array(
              0 => 'uid',
             ),
             'type' => 'unique',
             ));
        $this->index('username_index', array(
             'fields' => 
             array(
              0 => 'username',
             ),
             'type' => 'unique',
             ));
        $this->index('cooick_id_index', array(
             'fields' => 
             array(
              0 => 'cooick_id',
             ),
             'type' => 'unique',
             ));
        $this->index('referer_host_index', array(
             'fields' => 
             array(
              0 => 'referer_host',
             ),
             'type' => 'unique',
             ));
        $this->index('referer_host_referer_id_index', array(
             'fields' => 
             array(
              0 => 'referer_host',
              1 => 'referer_id',
             ),
             'type' => 'unique',
             ));
        $this->index('destination_host_index', array(
             'fields' => 
             array(
              0 => 'destination_host',
             ),
             'type' => 'unique',
             ));
        $this->index('click_time_index', array(
             'fields' => 
             array(
              0 => 'click_time',
             ),
             'type' => 'unique',
             ));
        $this->index('item_id_index', array(
             'fields' => 
             array(
              0 => 'item_id',
             ),
             'type' => 'unique',
             ));
        $this->index('shop_nick_index', array(
             'fields' => 
             array(
              0 => 'shop_nick',
             ),
             'type' => 'unique',
             ));
        $this->index('trade_time_index', array(
             'fields' => 
             array(
              0 => 'trade_time',
             ),
             'type' => 'unique',
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}