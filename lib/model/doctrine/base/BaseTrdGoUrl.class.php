<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdGoUrl', 'trade');

/**
 * BaseTrdGoUrl
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $trd_news_id
 * @property string $url
 * @property string $encrypt_url
 * @property string $title
 * @property string $type
 * @property string $shop
 * @property datetime $addtime
 * 
 * @method integer  getId()          Returns the current record's "id" value
 * @method integer  getTrdNewsId()   Returns the current record's "trd_news_id" value
 * @method string   getUrl()         Returns the current record's "url" value
 * @method string   getEncryptUrl()  Returns the current record's "encrypt_url" value
 * @method string   getTitle()       Returns the current record's "title" value
 * @method string   getType()        Returns the current record's "type" value
 * @method string   getShop()        Returns the current record's "shop" value
 * @method datetime getAddtime()     Returns the current record's "addtime" value
 * @method TrdGoUrl setId()          Sets the current record's "id" value
 * @method TrdGoUrl setTrdNewsId()   Sets the current record's "trd_news_id" value
 * @method TrdGoUrl setUrl()         Sets the current record's "url" value
 * @method TrdGoUrl setEncryptUrl()  Sets the current record's "encrypt_url" value
 * @method TrdGoUrl setTitle()       Sets the current record's "title" value
 * @method TrdGoUrl setType()        Sets the current record's "type" value
 * @method TrdGoUrl setShop()        Sets the current record's "shop" value
 * @method TrdGoUrl setAddtime()     Sets the current record's "addtime" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdGoUrl extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_go_url');
        $this->hasColumn('id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('trd_news_id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 10,
             ));
        $this->hasColumn('url', 'string', 1000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 1000,
             ));
        $this->hasColumn('encrypt_url', 'string', 8, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('title', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('type', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('shop', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('addtime', 'datetime', null, array(
             'type' => 'datetime',
             ));


        $this->index('encrypt_url', array(
             'fields' => 
             array(
              0 => 'encrypt_url',
             ),
             ));
        $this->index('type', array(
             'fields' => 
             array(
              0 => 'type',
             ),
             ));
        $this->index('trd_news_id', array(
             'fields' => 
             array(
              0 => 'trd_news_id',
             ),
             ));
        $this->index('shop', array(
             'fields' => 
             array(
              0 => 'shop',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}