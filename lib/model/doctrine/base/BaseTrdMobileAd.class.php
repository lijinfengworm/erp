<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdMobileAd', 'trade');

/**
 * BaseTrdMobileAd
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $description
 * @property string $banner_img_path
 * @property string $r_content
 * @property string $r_content_color
 * @property string $r_url
 * @property string $r_color
 * @property string $c_content
 * @property string $c_content_color
 * @property string $c_color
 * @property boolean $is_cancel
 * @property integer $grant_uid
 * @property string $grant_username
 * @property datetime $start_time
 * @property datetime $end_time
 * 
 * @method integer     getId()              Returns the current record's "id" value
 * @method string      getDescription()     Returns the current record's "description" value
 * @method string      getBannerImgPath()   Returns the current record's "banner_img_path" value
 * @method string      getRContent()        Returns the current record's "r_content" value
 * @method string      getRContentColor()   Returns the current record's "r_content_color" value
 * @method string      getRUrl()            Returns the current record's "r_url" value
 * @method string      getRColor()          Returns the current record's "r_color" value
 * @method string      getCContent()        Returns the current record's "c_content" value
 * @method string      getCContentColor()   Returns the current record's "c_content_color" value
 * @method string      getCColor()          Returns the current record's "c_color" value
 * @method boolean     getIsCancel()        Returns the current record's "is_cancel" value
 * @method integer     getGrantUid()        Returns the current record's "grant_uid" value
 * @method string      getGrantUsername()   Returns the current record's "grant_username" value
 * @method datetime    getStartTime()       Returns the current record's "start_time" value
 * @method datetime    getEndTime()         Returns the current record's "end_time" value
 * @method TrdMobileAd setId()              Sets the current record's "id" value
 * @method TrdMobileAd setDescription()     Sets the current record's "description" value
 * @method TrdMobileAd setBannerImgPath()   Sets the current record's "banner_img_path" value
 * @method TrdMobileAd setRContent()        Sets the current record's "r_content" value
 * @method TrdMobileAd setRContentColor()   Sets the current record's "r_content_color" value
 * @method TrdMobileAd setRUrl()            Sets the current record's "r_url" value
 * @method TrdMobileAd setRColor()          Sets the current record's "r_color" value
 * @method TrdMobileAd setCContent()        Sets the current record's "c_content" value
 * @method TrdMobileAd setCContentColor()   Sets the current record's "c_content_color" value
 * @method TrdMobileAd setCColor()          Sets the current record's "c_color" value
 * @method TrdMobileAd setIsCancel()        Sets the current record's "is_cancel" value
 * @method TrdMobileAd setGrantUid()        Sets the current record's "grant_uid" value
 * @method TrdMobileAd setGrantUsername()   Sets the current record's "grant_username" value
 * @method TrdMobileAd setStartTime()       Sets the current record's "start_time" value
 * @method TrdMobileAd setEndTime()         Sets the current record's "end_time" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdMobileAd extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_mobile_ad');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('description', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('banner_img_path', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 200,
             ));
        $this->hasColumn('r_content', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('r_content_color', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('r_url', 'string', 250, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 250,
             ));
        $this->hasColumn('r_color', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('c_content', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('c_content_color', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('c_color', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('is_cancel', 'boolean', null, array(
             'type' => 'boolean',
             'default' => '0',
             ));
        $this->hasColumn('grant_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             ));
        $this->hasColumn('grant_username', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('start_time', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => true,
             ));
        $this->hasColumn('end_time', 'datetime', null, array(
             'type' => 'datetime',
             'notnull' => true,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}