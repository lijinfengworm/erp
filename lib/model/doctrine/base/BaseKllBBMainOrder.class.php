<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KllBBMainOrder', 'kaluliBB');

/**
 * BaseKllBBMainOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property varchar $order_number
 * @property varchar $origin_order_number
 * @property float $total_price
 * @property float $push_price
 * @property float $real_price
 * @property float $express_fee
 * @property float $duty_fee
 * @property float $coupon_fee
 * @property tinyint $pay_status
 * @property tinyint $pay_type
 * @property integer $pay_time
 * @property integer $uid
 * @property tinyint $status
 * @property tinyint $logistic_type
 * @property varchar $logistic_number
 * @property varchar $flow_number
 * @property varchar $payer
 * @property varchar $source
 * @property varchar $batch
 * @property tinyint $syn_api
 * @property integer $count
 * @property integer $audit_time
 * @property integer $creat_time
 * @property integer $update_time
 * 
 * @method integer        getId()                  Returns the current record's "id" value
 * @method varchar        getOrderNumber()         Returns the current record's "order_number" value
 * @method varchar        getOriginOrderNumber()   Returns the current record's "origin_order_number" value
 * @method float          getTotalPrice()          Returns the current record's "total_price" value
 * @method float          getPushPrice()           Returns the current record's "push_price" value
 * @method float          getRealPrice()           Returns the current record's "real_price" value
 * @method float          getExpressFee()          Returns the current record's "express_fee" value
 * @method float          getDutyFee()             Returns the current record's "duty_fee" value
 * @method float          getCouponFee()           Returns the current record's "coupon_fee" value
 * @method tinyint        getPayStatus()           Returns the current record's "pay_status" value
 * @method tinyint        getPayType()             Returns the current record's "pay_type" value
 * @method integer        getPayTime()             Returns the current record's "pay_time" value
 * @method integer        getUid()                 Returns the current record's "uid" value
 * @method tinyint        getStatus()              Returns the current record's "status" value
 * @method tinyint        getLogisticType()        Returns the current record's "logistic_type" value
 * @method varchar        getLogisticNumber()      Returns the current record's "logistic_number" value
 * @method varchar        getFlowNumber()          Returns the current record's "flow_number" value
 * @method varchar        getPayer()               Returns the current record's "payer" value
 * @method varchar        getSource()              Returns the current record's "source" value
 * @method varchar        getBatch()               Returns the current record's "batch" value
 * @method tinyint        getSynApi()              Returns the current record's "syn_api" value
 * @method integer        getCount()               Returns the current record's "count" value
 * @method integer        getAuditTime()           Returns the current record's "audit_time" value
 * @method integer        getCreatTime()           Returns the current record's "creat_time" value
 * @method integer        getUpdateTime()          Returns the current record's "update_time" value
 * @method KllBBMainOrder setId()                  Sets the current record's "id" value
 * @method KllBBMainOrder setOrderNumber()         Sets the current record's "order_number" value
 * @method KllBBMainOrder setOriginOrderNumber()   Sets the current record's "origin_order_number" value
 * @method KllBBMainOrder setTotalPrice()          Sets the current record's "total_price" value
 * @method KllBBMainOrder setPushPrice()           Sets the current record's "push_price" value
 * @method KllBBMainOrder setRealPrice()           Sets the current record's "real_price" value
 * @method KllBBMainOrder setExpressFee()          Sets the current record's "express_fee" value
 * @method KllBBMainOrder setDutyFee()             Sets the current record's "duty_fee" value
 * @method KllBBMainOrder setCouponFee()           Sets the current record's "coupon_fee" value
 * @method KllBBMainOrder setPayStatus()           Sets the current record's "pay_status" value
 * @method KllBBMainOrder setPayType()             Sets the current record's "pay_type" value
 * @method KllBBMainOrder setPayTime()             Sets the current record's "pay_time" value
 * @method KllBBMainOrder setUid()                 Sets the current record's "uid" value
 * @method KllBBMainOrder setStatus()              Sets the current record's "status" value
 * @method KllBBMainOrder setLogisticType()        Sets the current record's "logistic_type" value
 * @method KllBBMainOrder setLogisticNumber()      Sets the current record's "logistic_number" value
 * @method KllBBMainOrder setFlowNumber()          Sets the current record's "flow_number" value
 * @method KllBBMainOrder setPayer()               Sets the current record's "payer" value
 * @method KllBBMainOrder setSource()              Sets the current record's "source" value
 * @method KllBBMainOrder setBatch()               Sets the current record's "batch" value
 * @method KllBBMainOrder setSynApi()              Sets the current record's "syn_api" value
 * @method KllBBMainOrder setCount()               Sets the current record's "count" value
 * @method KllBBMainOrder setAuditTime()           Sets the current record's "audit_time" value
 * @method KllBBMainOrder setCreatTime()           Sets the current record's "creat_time" value
 * @method KllBBMainOrder setUpdateTime()          Sets the current record's "update_time" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKllBBMainOrder extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_main_order');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('order_number', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('origin_order_number', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('total_price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('push_price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('real_price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('express_fee', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('duty_fee', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('coupon_fee', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('pay_status', 'tinyint', 2, array(
             'type' => 'tinyint',
             'length' => 2,
             ));
        $this->hasColumn('pay_type', 'tinyint', 2, array(
             'type' => 'tinyint',
             'length' => 2,
             ));
        $this->hasColumn('pay_time', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 11,
             ));
        $this->hasColumn('uid', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 10,
             ));
        $this->hasColumn('status', 'tinyint', 2, array(
             'type' => 'tinyint',
             'unsigned' => true,
             'length' => 2,
             ));
        $this->hasColumn('logistic_type', 'tinyint', 3, array(
             'type' => 'tinyint',
             'unsigned' => true,
             'length' => 3,
             ));
        $this->hasColumn('logistic_number', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('flow_number', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('payer', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('source', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('batch', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('syn_api', 'tinyint', 3, array(
             'type' => 'tinyint',
             'length' => 3,
             ));
        $this->hasColumn('count', 'integer', 5, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 5,
             ));
        $this->hasColumn('audit_time', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 11,
             ));
        $this->hasColumn('creat_time', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 11,
             ));
        $this->hasColumn('update_time', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 11,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}