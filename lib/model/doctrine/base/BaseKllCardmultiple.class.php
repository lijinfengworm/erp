<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KllCardmultiple', 'kaluli');

/**
 * BaseKllCardmultiple
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $code
 * @property string $title
 * @property integer $hupu_uid
 * @property string $hupu_username
 * @property integer $status
 * @property string $cardware_code
 * @property integer $is_success
 * @property integer $alert_num
 * @property integer $is_alert
 * @property string $phone
 * @property integer $card_number
 * @property integer $read_number
 * 
 * @method integer         getId()            Returns the current record's "id" value
 * @method string          getCode()          Returns the current record's "code" value
 * @method string          getTitle()         Returns the current record's "title" value
 * @method integer         getHupuUid()       Returns the current record's "hupu_uid" value
 * @method string          getHupuUsername()  Returns the current record's "hupu_username" value
 * @method integer         getStatus()        Returns the current record's "status" value
 * @method string          getCardwareCode()  Returns the current record's "cardware_code" value
 * @method integer         getIsSuccess()     Returns the current record's "is_success" value
 * @method integer         getAlertNum()      Returns the current record's "alert_num" value
 * @method integer         getIsAlert()       Returns the current record's "is_alert" value
 * @method string          getPhone()         Returns the current record's "phone" value
 * @method integer         getCardNumber()    Returns the current record's "card_number" value
 * @method integer         getReadNumber()    Returns the current record's "read_number" value
 * @method KllCardmultiple setId()            Sets the current record's "id" value
 * @method KllCardmultiple setCode()          Sets the current record's "code" value
 * @method KllCardmultiple setTitle()         Sets the current record's "title" value
 * @method KllCardmultiple setHupuUid()       Sets the current record's "hupu_uid" value
 * @method KllCardmultiple setHupuUsername()  Sets the current record's "hupu_username" value
 * @method KllCardmultiple setStatus()        Sets the current record's "status" value
 * @method KllCardmultiple setCardwareCode()  Sets the current record's "cardware_code" value
 * @method KllCardmultiple setIsSuccess()     Sets the current record's "is_success" value
 * @method KllCardmultiple setAlertNum()      Sets the current record's "alert_num" value
 * @method KllCardmultiple setIsAlert()       Sets the current record's "is_alert" value
 * @method KllCardmultiple setPhone()         Sets the current record's "phone" value
 * @method KllCardmultiple setCardNumber()    Sets the current record's "card_number" value
 * @method KllCardmultiple setReadNumber()    Sets the current record's "read_number" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKllCardmultiple extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_cardmultiple');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('code', 'string', 64, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 64,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('hupu_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('hupu_username', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('cardware_code', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('is_success', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('alert_num', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('is_alert', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('phone', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 32,
             ));
        $this->hasColumn('card_number', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 11,
             ));
        $this->hasColumn('read_number', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 11,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}