<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KllCpsLoginUser', 'kaluliCPS');

/**
 * BaseKllCpsLoginUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $union_id
 * @property integer $uid
 * @property string $mid
 * @property string $referer
 * 
 * @method integer         getId()       Returns the current record's "id" value
 * @method string          getUnionId()  Returns the current record's "union_id" value
 * @method integer         getUid()      Returns the current record's "uid" value
 * @method string          getMid()      Returns the current record's "mid" value
 * @method string          getReferer()  Returns the current record's "referer" value
 * @method KllCpsLoginUser setId()       Sets the current record's "id" value
 * @method KllCpsLoginUser setUnionId()  Sets the current record's "union_id" value
 * @method KllCpsLoginUser setUid()      Sets the current record's "uid" value
 * @method KllCpsLoginUser setMid()      Sets the current record's "mid" value
 * @method KllCpsLoginUser setReferer()  Sets the current record's "referer" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKllCpsLoginUser extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_cps_login_user');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('union_id', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('mid', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('referer', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}