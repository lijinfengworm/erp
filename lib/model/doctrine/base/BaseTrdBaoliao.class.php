<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdBaoliao', 'trade');

/**
 * BaseTrdBaoliao
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $brand_id
 * @property string $brand
 * @property string $item_num
 * @property integer $is_showsports
 * @property integer $shop_id
 * @property integer $item_id
 * @property string $name
 * @property string $sub_name
 * @property string $memo
 * @property text $description
 * @property string $url
 * @property string $encrypt_url
 * @property float $price
 * @property float $original_price
 * @property string $mart
 * @property integer $sold_count
 * @property integer $is_soldout
 * @property string $img_url
 * @property float $give_money
 * @property integer $category_id
 * @property integer $type
 * @property integer $root_id
 * @property integer $children_id
 * @property string $attr_collect
 * @property string $pic_collect
 * @property string $tag_collect
 * @property integer $model_id
 * @property string $external_username
 * @property timestamp $publish_date
 * @property integer $hupu_uid
 * @property string $hupu_username
 * @property integer $status
 * @property string $commodity
 * 
 * @method integer    getId()                Returns the current record's "id" value
 * @method integer    getBrandId()           Returns the current record's "brand_id" value
 * @method string     getBrand()             Returns the current record's "brand" value
 * @method string     getItemNum()           Returns the current record's "item_num" value
 * @method integer    getIsShowsports()      Returns the current record's "is_showsports" value
 * @method integer    getShopId()            Returns the current record's "shop_id" value
 * @method integer    getItemId()            Returns the current record's "item_id" value
 * @method string     getName()              Returns the current record's "name" value
 * @method string     getSubName()           Returns the current record's "sub_name" value
 * @method string     getMemo()              Returns the current record's "memo" value
 * @method text       getDescription()       Returns the current record's "description" value
 * @method string     getUrl()               Returns the current record's "url" value
 * @method string     getEncryptUrl()        Returns the current record's "encrypt_url" value
 * @method float      getPrice()             Returns the current record's "price" value
 * @method float      getOriginalPrice()     Returns the current record's "original_price" value
 * @method string     getMart()              Returns the current record's "mart" value
 * @method integer    getSoldCount()         Returns the current record's "sold_count" value
 * @method integer    getIsSoldout()         Returns the current record's "is_soldout" value
 * @method string     getImgUrl()            Returns the current record's "img_url" value
 * @method float      getGiveMoney()         Returns the current record's "give_money" value
 * @method integer    getCategoryId()        Returns the current record's "category_id" value
 * @method integer    getType()              Returns the current record's "type" value
 * @method integer    getRootId()            Returns the current record's "root_id" value
 * @method integer    getChildrenId()        Returns the current record's "children_id" value
 * @method string     getAttrCollect()       Returns the current record's "attr_collect" value
 * @method string     getPicCollect()        Returns the current record's "pic_collect" value
 * @method string     getTagCollect()        Returns the current record's "tag_collect" value
 * @method integer    getModelId()           Returns the current record's "model_id" value
 * @method string     getExternalUsername()  Returns the current record's "external_username" value
 * @method timestamp  getPublishDate()       Returns the current record's "publish_date" value
 * @method integer    getHupuUid()           Returns the current record's "hupu_uid" value
 * @method string     getHupuUsername()      Returns the current record's "hupu_username" value
 * @method integer    getStatus()            Returns the current record's "status" value
 * @method string     getCommodity()         Returns the current record's "commodity" value
 * @method TrdBaoliao setId()                Sets the current record's "id" value
 * @method TrdBaoliao setBrandId()           Sets the current record's "brand_id" value
 * @method TrdBaoliao setBrand()             Sets the current record's "brand" value
 * @method TrdBaoliao setItemNum()           Sets the current record's "item_num" value
 * @method TrdBaoliao setIsShowsports()      Sets the current record's "is_showsports" value
 * @method TrdBaoliao setShopId()            Sets the current record's "shop_id" value
 * @method TrdBaoliao setItemId()            Sets the current record's "item_id" value
 * @method TrdBaoliao setName()              Sets the current record's "name" value
 * @method TrdBaoliao setSubName()           Sets the current record's "sub_name" value
 * @method TrdBaoliao setMemo()              Sets the current record's "memo" value
 * @method TrdBaoliao setDescription()       Sets the current record's "description" value
 * @method TrdBaoliao setUrl()               Sets the current record's "url" value
 * @method TrdBaoliao setEncryptUrl()        Sets the current record's "encrypt_url" value
 * @method TrdBaoliao setPrice()             Sets the current record's "price" value
 * @method TrdBaoliao setOriginalPrice()     Sets the current record's "original_price" value
 * @method TrdBaoliao setMart()              Sets the current record's "mart" value
 * @method TrdBaoliao setSoldCount()         Sets the current record's "sold_count" value
 * @method TrdBaoliao setIsSoldout()         Sets the current record's "is_soldout" value
 * @method TrdBaoliao setImgUrl()            Sets the current record's "img_url" value
 * @method TrdBaoliao setGiveMoney()         Sets the current record's "give_money" value
 * @method TrdBaoliao setCategoryId()        Sets the current record's "category_id" value
 * @method TrdBaoliao setType()              Sets the current record's "type" value
 * @method TrdBaoliao setRootId()            Sets the current record's "root_id" value
 * @method TrdBaoliao setChildrenId()        Sets the current record's "children_id" value
 * @method TrdBaoliao setAttrCollect()       Sets the current record's "attr_collect" value
 * @method TrdBaoliao setPicCollect()        Sets the current record's "pic_collect" value
 * @method TrdBaoliao setTagCollect()        Sets the current record's "tag_collect" value
 * @method TrdBaoliao setModelId()           Sets the current record's "model_id" value
 * @method TrdBaoliao setExternalUsername()  Sets the current record's "external_username" value
 * @method TrdBaoliao setPublishDate()       Sets the current record's "publish_date" value
 * @method TrdBaoliao setHupuUid()           Sets the current record's "hupu_uid" value
 * @method TrdBaoliao setHupuUsername()      Sets the current record's "hupu_username" value
 * @method TrdBaoliao setStatus()            Sets the current record's "status" value
 * @method TrdBaoliao setCommodity()         Sets the current record's "commodity" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdBaoliao extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_baoliao');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('brand_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => false,
             ));
        $this->hasColumn('brand', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('item_num', 'string', 20, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('is_showsports', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('shop_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => false,
             ));
        $this->hasColumn('item_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => false,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('sub_name', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('memo', 'string', 500, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 500,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('url', 'string', 2000, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 2000,
             ));
        $this->hasColumn('encrypt_url', 'string', 8, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('original_price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('mart', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('sold_count', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));
        $this->hasColumn('is_soldout', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('img_url', 'string', 2000, array(
             'type' => 'string',
             'length' => 2000,
             ));
        $this->hasColumn('give_money', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('category_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('type', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('root_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('children_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('attr_collect', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('pic_collect', 'string', 1000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 1000,
             ));
        $this->hasColumn('tag_collect', 'string', 300, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 300,
             ));
        $this->hasColumn('model_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('external_username', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('publish_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('hupu_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('hupu_username', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('commodity', 'string', 511, array(
             'type' => 'string',
             'default' => '',
             'length' => 511,
             ));


        $this->index('encrypt_url', array(
             'fields' => 
             array(
              0 => 'encrypt_url',
             ),
             ));
        $this->index('brand_id', array(
             'fields' => 
             array(
              0 => 'brand_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}