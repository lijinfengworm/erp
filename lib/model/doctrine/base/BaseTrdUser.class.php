<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdUser', 'trade');

/**
 * BaseTrdUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $hupu_uid
 * @property string $hupu_username
 * @property integer $external_uid
 * @property string $external_username
 * @property integer $status
 * @property timestamp $ban_start_time
 * @property timestamp $ban_end_time
 * @property Doctrine_Collection $TrdUserItem
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getHupuUid()           Returns the current record's "hupu_uid" value
 * @method string              getHupuUsername()      Returns the current record's "hupu_username" value
 * @method integer             getExternalUid()       Returns the current record's "external_uid" value
 * @method string              getExternalUsername()  Returns the current record's "external_username" value
 * @method integer             getStatus()            Returns the current record's "status" value
 * @method timestamp           getBanStartTime()      Returns the current record's "ban_start_time" value
 * @method timestamp           getBanEndTime()        Returns the current record's "ban_end_time" value
 * @method Doctrine_Collection getTrdUserItem()       Returns the current record's "TrdUserItem" collection
 * @method TrdUser             setId()                Sets the current record's "id" value
 * @method TrdUser             setHupuUid()           Sets the current record's "hupu_uid" value
 * @method TrdUser             setHupuUsername()      Sets the current record's "hupu_username" value
 * @method TrdUser             setExternalUid()       Sets the current record's "external_uid" value
 * @method TrdUser             setExternalUsername()  Sets the current record's "external_username" value
 * @method TrdUser             setStatus()            Sets the current record's "status" value
 * @method TrdUser             setBanStartTime()      Sets the current record's "ban_start_time" value
 * @method TrdUser             setBanEndTime()        Sets the current record's "ban_end_time" value
 * @method TrdUser             setTrdUserItem()       Sets the current record's "TrdUserItem" collection
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdUser extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_users');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('hupu_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('hupu_username', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('external_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('external_username', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('ban_start_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ban_end_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TrdUserItem', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}