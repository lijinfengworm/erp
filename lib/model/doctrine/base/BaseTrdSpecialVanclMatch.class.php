<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdSpecialVanclMatch', 'trade');

/**
 * BaseTrdSpecialVanclMatch
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $home_team
 * @property string $away_team
 * @property string $home_logo
 * @property string $away_logo
 * @property integer $home_sustain
 * @property integer $away_sustain
 * @property timestamp $start_time
 * @property timestamp $end_time
 * @property Doctrine_Collection $TrdSpecialVanclSustain
 * @property Doctrine_Collection $TrdSpecialVanclQuestion
 * @property Doctrine_Collection $TrdSpecialVanclAwardNote
 * 
 * @method integer              getId()                       Returns the current record's "id" value
 * @method string               getHomeTeam()                 Returns the current record's "home_team" value
 * @method string               getAwayTeam()                 Returns the current record's "away_team" value
 * @method string               getHomeLogo()                 Returns the current record's "home_logo" value
 * @method string               getAwayLogo()                 Returns the current record's "away_logo" value
 * @method integer              getHomeSustain()              Returns the current record's "home_sustain" value
 * @method integer              getAwaySustain()              Returns the current record's "away_sustain" value
 * @method timestamp            getStartTime()                Returns the current record's "start_time" value
 * @method timestamp            getEndTime()                  Returns the current record's "end_time" value
 * @method Doctrine_Collection  getTrdSpecialVanclSustain()   Returns the current record's "TrdSpecialVanclSustain" collection
 * @method Doctrine_Collection  getTrdSpecialVanclQuestion()  Returns the current record's "TrdSpecialVanclQuestion" collection
 * @method Doctrine_Collection  getTrdSpecialVanclAwardNote() Returns the current record's "TrdSpecialVanclAwardNote" collection
 * @method TrdSpecialVanclMatch setId()                       Sets the current record's "id" value
 * @method TrdSpecialVanclMatch setHomeTeam()                 Sets the current record's "home_team" value
 * @method TrdSpecialVanclMatch setAwayTeam()                 Sets the current record's "away_team" value
 * @method TrdSpecialVanclMatch setHomeLogo()                 Sets the current record's "home_logo" value
 * @method TrdSpecialVanclMatch setAwayLogo()                 Sets the current record's "away_logo" value
 * @method TrdSpecialVanclMatch setHomeSustain()              Sets the current record's "home_sustain" value
 * @method TrdSpecialVanclMatch setAwaySustain()              Sets the current record's "away_sustain" value
 * @method TrdSpecialVanclMatch setStartTime()                Sets the current record's "start_time" value
 * @method TrdSpecialVanclMatch setEndTime()                  Sets the current record's "end_time" value
 * @method TrdSpecialVanclMatch setTrdSpecialVanclSustain()   Sets the current record's "TrdSpecialVanclSustain" collection
 * @method TrdSpecialVanclMatch setTrdSpecialVanclQuestion()  Sets the current record's "TrdSpecialVanclQuestion" collection
 * @method TrdSpecialVanclMatch setTrdSpecialVanclAwardNote() Sets the current record's "TrdSpecialVanclAwardNote" collection
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdSpecialVanclMatch extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_special_vancl_match');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('home_team', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('away_team', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('home_logo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('away_logo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('home_sustain', 'integer', null, array(
             'type' => 'integer',
             'unique' => true,
             ));
        $this->hasColumn('away_sustain', 'integer', null, array(
             'type' => 'integer',
             'unique' => true,
             ));
        $this->hasColumn('start_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('end_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TrdSpecialVanclSustain', array(
             'local' => 'id',
             'foreign' => 'match_id'));

        $this->hasMany('TrdSpecialVanclQuestion', array(
             'local' => 'id',
             'foreign' => 'match_id'));

        $this->hasMany('TrdSpecialVanclAwardNote', array(
             'local' => 'id',
             'foreign' => 'match_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}