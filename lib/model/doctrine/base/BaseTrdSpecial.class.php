<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdSpecial', 'kaluli');

/**
 * BaseTrdSpecial
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $type
 * @property string $name
 * @property string $m_title
 * @property string $journal_title
 * @property string $journal_desc
 * @property string $journal_img
 * @property integer $journal_type_id
 * @property integer $show_journal
 * @property integer $cateid
 * @property string $remarks
 * @property integer $is_theme
 * @property integer $theme_id
 * @property string $template
 * @property text $info
 * @property integer $support
 * @property integer $agaist
 * @property integer $comment_count
 * @property integer $click_count
 * @property integer $special_status
 * @property integer $timing_interval
 * @property TrdSpecialCate $TrdSpecialCate
 * 
 * @method integer        getId()              Returns the current record's "id" value
 * @method integer        getType()            Returns the current record's "type" value
 * @method string         getName()            Returns the current record's "name" value
 * @method string         getMTitle()          Returns the current record's "m_title" value
 * @method string         getJournalTitle()    Returns the current record's "journal_title" value
 * @method string         getJournalDesc()     Returns the current record's "journal_desc" value
 * @method string         getJournalImg()      Returns the current record's "journal_img" value
 * @method integer        getJournalTypeId()   Returns the current record's "journal_type_id" value
 * @method integer        getShowJournal()     Returns the current record's "show_journal" value
 * @method integer        getCateid()          Returns the current record's "cateid" value
 * @method string         getRemarks()         Returns the current record's "remarks" value
 * @method integer        getIsTheme()         Returns the current record's "is_theme" value
 * @method integer        getThemeId()         Returns the current record's "theme_id" value
 * @method string         getTemplate()        Returns the current record's "template" value
 * @method text           getInfo()            Returns the current record's "info" value
 * @method integer        getSupport()         Returns the current record's "support" value
 * @method integer        getAgaist()          Returns the current record's "agaist" value
 * @method integer        getCommentCount()    Returns the current record's "comment_count" value
 * @method integer        getClickCount()      Returns the current record's "click_count" value
 * @method integer        getSpecialStatus()   Returns the current record's "special_status" value
 * @method integer        getTimingInterval()  Returns the current record's "timing_interval" value
 * @method TrdSpecialCate getTrdSpecialCate()  Returns the current record's "TrdSpecialCate" value
 * @method TrdSpecial     setId()              Sets the current record's "id" value
 * @method TrdSpecial     setType()            Sets the current record's "type" value
 * @method TrdSpecial     setName()            Sets the current record's "name" value
 * @method TrdSpecial     setMTitle()          Sets the current record's "m_title" value
 * @method TrdSpecial     setJournalTitle()    Sets the current record's "journal_title" value
 * @method TrdSpecial     setJournalDesc()     Sets the current record's "journal_desc" value
 * @method TrdSpecial     setJournalImg()      Sets the current record's "journal_img" value
 * @method TrdSpecial     setJournalTypeId()   Sets the current record's "journal_type_id" value
 * @method TrdSpecial     setShowJournal()     Sets the current record's "show_journal" value
 * @method TrdSpecial     setCateid()          Sets the current record's "cateid" value
 * @method TrdSpecial     setRemarks()         Sets the current record's "remarks" value
 * @method TrdSpecial     setIsTheme()         Sets the current record's "is_theme" value
 * @method TrdSpecial     setThemeId()         Sets the current record's "theme_id" value
 * @method TrdSpecial     setTemplate()        Sets the current record's "template" value
 * @method TrdSpecial     setInfo()            Sets the current record's "info" value
 * @method TrdSpecial     setSupport()         Sets the current record's "support" value
 * @method TrdSpecial     setAgaist()          Sets the current record's "agaist" value
 * @method TrdSpecial     setCommentCount()    Sets the current record's "comment_count" value
 * @method TrdSpecial     setClickCount()      Sets the current record's "click_count" value
 * @method TrdSpecial     setSpecialStatus()   Sets the current record's "special_status" value
 * @method TrdSpecial     setTimingInterval()  Sets the current record's "timing_interval" value
 * @method TrdSpecial     setTrdSpecialCate()  Sets the current record's "TrdSpecialCate" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdSpecial extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_special');
        $this->hasColumn('id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('m_title', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('journal_title', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('journal_desc', 'string', 512, array(
             'type' => 'string',
             'length' => 512,
             ));
        $this->hasColumn('journal_img', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('journal_type_id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 10,
             ));
        $this->hasColumn('show_journal', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('cateid', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 10,
             ));
        $this->hasColumn('remarks', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('is_theme', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 1,
             ));
        $this->hasColumn('theme_id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 10,
             ));
        $this->hasColumn('template', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('info', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('support', 'integer', 5, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 5,
             ));
        $this->hasColumn('agaist', 'integer', 5, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 5,
             ));
        $this->hasColumn('comment_count', 'integer', 5, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 5,
             ));
        $this->hasColumn('click_count', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 11,
             ));
        $this->hasColumn('special_status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('timing_interval', 'integer', 11, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 11,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TrdSpecialCate', array(
             'local' => 'cateid',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}