<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdMainOrder', 'trade');

/**
 * BaseTrdMainOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $order_number
 * @property string $ibilling_number
 * @property integer $hupu_uid
 * @property string $hupu_username
 * @property string $address
 * @property string $address_attr
 * @property float $express_fee
 * @property float $total_price
 * @property float $original_price
 * @property float $coupon_fee
 * @property float $marketing_fee
 * @property integer $number
 * @property string $remark
 * @property datetime $order_time
 * @property datetime $pay_time
 * @property integer $pay_type
 * @property float $refund
 * @property integer $handle_status
 * @property integer $source
 * @property integer $status
 * @property integer $tax_status
 * @property float $tax
 * @property string $tax_ibilling_number
 * @property integer $tax_time
 * 
 * @method integer      getId()                  Returns the current record's "id" value
 * @method integer      getOrderNumber()         Returns the current record's "order_number" value
 * @method string       getIbillingNumber()      Returns the current record's "ibilling_number" value
 * @method integer      getHupuUid()             Returns the current record's "hupu_uid" value
 * @method string       getHupuUsername()        Returns the current record's "hupu_username" value
 * @method string       getAddress()             Returns the current record's "address" value
 * @method string       getAddressAttr()         Returns the current record's "address_attr" value
 * @method float        getExpressFee()          Returns the current record's "express_fee" value
 * @method float        getTotalPrice()          Returns the current record's "total_price" value
 * @method float        getOriginalPrice()       Returns the current record's "original_price" value
 * @method float        getCouponFee()           Returns the current record's "coupon_fee" value
 * @method float        getMarketingFee()        Returns the current record's "marketing_fee" value
 * @method integer      getNumber()              Returns the current record's "number" value
 * @method string       getRemark()              Returns the current record's "remark" value
 * @method datetime     getOrderTime()           Returns the current record's "order_time" value
 * @method datetime     getPayTime()             Returns the current record's "pay_time" value
 * @method integer      getPayType()             Returns the current record's "pay_type" value
 * @method float        getRefund()              Returns the current record's "refund" value
 * @method integer      getHandleStatus()        Returns the current record's "handle_status" value
 * @method integer      getSource()              Returns the current record's "source" value
 * @method integer      getStatus()              Returns the current record's "status" value
 * @method integer      getTaxStatus()           Returns the current record's "tax_status" value
 * @method float        getTax()                 Returns the current record's "tax" value
 * @method string       getTaxIbillingNumber()   Returns the current record's "tax_ibilling_number" value
 * @method integer      getTaxTime()             Returns the current record's "tax_time" value
 * @method TrdMainOrder setId()                  Sets the current record's "id" value
 * @method TrdMainOrder setOrderNumber()         Sets the current record's "order_number" value
 * @method TrdMainOrder setIbillingNumber()      Sets the current record's "ibilling_number" value
 * @method TrdMainOrder setHupuUid()             Sets the current record's "hupu_uid" value
 * @method TrdMainOrder setHupuUsername()        Sets the current record's "hupu_username" value
 * @method TrdMainOrder setAddress()             Sets the current record's "address" value
 * @method TrdMainOrder setAddressAttr()         Sets the current record's "address_attr" value
 * @method TrdMainOrder setExpressFee()          Sets the current record's "express_fee" value
 * @method TrdMainOrder setTotalPrice()          Sets the current record's "total_price" value
 * @method TrdMainOrder setOriginalPrice()       Sets the current record's "original_price" value
 * @method TrdMainOrder setCouponFee()           Sets the current record's "coupon_fee" value
 * @method TrdMainOrder setMarketingFee()        Sets the current record's "marketing_fee" value
 * @method TrdMainOrder setNumber()              Sets the current record's "number" value
 * @method TrdMainOrder setRemark()              Sets the current record's "remark" value
 * @method TrdMainOrder setOrderTime()           Sets the current record's "order_time" value
 * @method TrdMainOrder setPayTime()             Sets the current record's "pay_time" value
 * @method TrdMainOrder setPayType()             Sets the current record's "pay_type" value
 * @method TrdMainOrder setRefund()              Sets the current record's "refund" value
 * @method TrdMainOrder setHandleStatus()        Sets the current record's "handle_status" value
 * @method TrdMainOrder setSource()              Sets the current record's "source" value
 * @method TrdMainOrder setStatus()              Sets the current record's "status" value
 * @method TrdMainOrder setTaxStatus()           Sets the current record's "tax_status" value
 * @method TrdMainOrder setTax()                 Sets the current record's "tax" value
 * @method TrdMainOrder setTaxIbillingNumber()   Sets the current record's "tax_ibilling_number" value
 * @method TrdMainOrder setTaxTime()             Sets the current record's "tax_time" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdMainOrder extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_main_order');
        $this->hasColumn('id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('order_number', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 10,
             ));
        $this->hasColumn('ibilling_number', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('hupu_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('hupu_username', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('address', 'string', 500, array(
             'type' => 'string',
             'length' => 500,
             ));
        $this->hasColumn('address_attr', 'string', 2000, array(
             'type' => 'string',
             'length' => 2000,
             ));
        $this->hasColumn('express_fee', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('total_price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('original_price', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('coupon_fee', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('marketing_fee', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('number', 'integer', 2, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 2,
             ));
        $this->hasColumn('remark', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('order_time', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('pay_time', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('pay_type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('refund', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('handle_status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('source', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('tax_status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('tax', 'float', 8, array(
             'type' => 'float',
             'length' => 8,
             'scale' => 2,
             ));
        $this->hasColumn('tax_ibilling_number', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('tax_time', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             ));


        $this->index('order_number', array(
             'fields' => 
             array(
              0 => 'order_number',
             ),
             'type' => 'unique',
             ));
        $this->index('ibilling_number', array(
             'fields' => 
             array(
              0 => 'ibilling_number',
             ),
             'type' => 'unique',
             ));
        $this->index('hupu_uid', array(
             'fields' => 
             array(
              0 => 'hupu_uid',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}