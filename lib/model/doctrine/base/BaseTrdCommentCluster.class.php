<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdCommentCluster', 'trade');

/**
 * BaseTrdCommentCluster
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $product_id
 * @property integer $comment_id
 * @property integer $reply_id
 * @property integer $user_id
 * @property integer $to_userid
 * @property string $user_name
 * @property string $to_username
 * @property string $content
 * @property string $imgs_attr
 * @property integer $ip
 * @property integer $status
 * 
 * @method integer           getId()          Returns the current record's "id" value
 * @method integer           getProductId()   Returns the current record's "product_id" value
 * @method integer           getCommentId()   Returns the current record's "comment_id" value
 * @method integer           getReplyId()     Returns the current record's "reply_id" value
 * @method integer           getUserId()      Returns the current record's "user_id" value
 * @method integer           getToUserid()    Returns the current record's "to_userid" value
 * @method string            getUserName()    Returns the current record's "user_name" value
 * @method string            getToUsername()  Returns the current record's "to_username" value
 * @method string            getContent()     Returns the current record's "content" value
 * @method string            getImgsAttr()    Returns the current record's "imgs_attr" value
 * @method integer           getIp()          Returns the current record's "ip" value
 * @method integer           getStatus()      Returns the current record's "status" value
 * @method TrdCommentCluster setId()          Sets the current record's "id" value
 * @method TrdCommentCluster setProductId()   Sets the current record's "product_id" value
 * @method TrdCommentCluster setCommentId()   Sets the current record's "comment_id" value
 * @method TrdCommentCluster setReplyId()     Sets the current record's "reply_id" value
 * @method TrdCommentCluster setUserId()      Sets the current record's "user_id" value
 * @method TrdCommentCluster setToUserid()    Sets the current record's "to_userid" value
 * @method TrdCommentCluster setUserName()    Sets the current record's "user_name" value
 * @method TrdCommentCluster setToUsername()  Sets the current record's "to_username" value
 * @method TrdCommentCluster setContent()     Sets the current record's "content" value
 * @method TrdCommentCluster setImgsAttr()    Sets the current record's "imgs_attr" value
 * @method TrdCommentCluster setIp()          Sets the current record's "ip" value
 * @method TrdCommentCluster setStatus()      Sets the current record's "status" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdCommentCluster extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_comment_cluster');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('product_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('comment_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('reply_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('to_userid', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_name', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('to_username', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('content', 'string', 10000, array(
             'type' => 'string',
             'length' => 10000,
             ));
        $this->hasColumn('imgs_attr', 'string', 2000, array(
             'type' => 'string',
             'length' => 2000,
             ));
        $this->hasColumn('ip', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}