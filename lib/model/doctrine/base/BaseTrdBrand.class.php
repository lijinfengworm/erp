<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdBrand', 'trade');

/**
 * BaseTrdBrand
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property boolean $is_default
 * @property Doctrine_Collection $TrdItem
 * @property Doctrine_Collection $TrdGroupon
 * 
 * @method integer             getId()         Returns the current record's "id" value
 * @method string              getName()       Returns the current record's "name" value
 * @method boolean             getIsDefault()  Returns the current record's "is_default" value
 * @method Doctrine_Collection getTrdItem()    Returns the current record's "TrdItem" collection
 * @method Doctrine_Collection getTrdGroupon() Returns the current record's "TrdGroupon" collection
 * @method TrdBrand            setId()         Sets the current record's "id" value
 * @method TrdBrand            setName()       Sets the current record's "name" value
 * @method TrdBrand            setIsDefault()  Sets the current record's "is_default" value
 * @method TrdBrand            setTrdItem()    Sets the current record's "TrdItem" collection
 * @method TrdBrand            setTrdGroupon() Sets the current record's "TrdGroupon" collection
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdBrand extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_brands');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('is_default', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('TrdItem', array(
             'local' => 'id',
             'foreign' => 'brand_id'));

        $this->hasMany('TrdGroupon', array(
             'local' => 'id',
             'foreign' => 'brand_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}