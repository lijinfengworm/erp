<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdTagItems', 'trade');

/**
 * BaseTrdTagItems
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $tag_id
 * @property integer $item_all_id
 * @property TrdItemAll $TrdItemAll
 * @property TrdTags $TrdTags
 * 
 * @method integer     getId()          Returns the current record's "id" value
 * @method integer     getTagId()       Returns the current record's "tag_id" value
 * @method integer     getItemAllId()   Returns the current record's "item_all_id" value
 * @method TrdItemAll  getTrdItemAll()  Returns the current record's "TrdItemAll" value
 * @method TrdTags     getTrdTags()     Returns the current record's "TrdTags" value
 * @method TrdTagItems setId()          Sets the current record's "id" value
 * @method TrdTagItems setTagId()       Sets the current record's "tag_id" value
 * @method TrdTagItems setItemAllId()   Sets the current record's "item_all_id" value
 * @method TrdTagItems setTrdItemAll()  Sets the current record's "TrdItemAll" value
 * @method TrdTagItems setTrdTags()     Sets the current record's "TrdTags" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdTagItems extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_tag_items');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('tag_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             ));
        $this->hasColumn('item_all_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             ));


        $this->index('tag_item', array(
             'fields' => 
             array(
              0 => 'tag_id',
              1 => 'item_all_id',
             ),
             'type' => 'unique',
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TrdItemAll', array(
             'local' => 'item_all_id',
             'foreign' => 'id'));

        $this->hasOne('TrdTags', array(
             'local' => 'tag_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}