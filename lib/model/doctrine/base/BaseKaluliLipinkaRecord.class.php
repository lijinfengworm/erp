<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('KaluliLipinkaRecord', 'kaluli');

/**
 * BaseKaluliLipinkaRecord
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $lipinka_id
 * @property integer $type
 * @property integer $is_large
 * @property integer $large_id
 * @property integer $postpone_type
 * @property integer $postpone_day
 * @property integer $overdue_day
 * @property integer $overdue_time
 * @property integer $stime
 * @property integer $etime
 * @property integer $amount
 * @property integer $num
 * @property string $accept_uids
 * @property integer $group_id
 * @property integer $is_success
 * @property string $card_limit
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method integer             getLipinkaId()     Returns the current record's "lipinka_id" value
 * @method integer             getType()          Returns the current record's "type" value
 * @method integer             getIsLarge()       Returns the current record's "is_large" value
 * @method integer             getLargeId()       Returns the current record's "large_id" value
 * @method integer             getPostponeType()  Returns the current record's "postpone_type" value
 * @method integer             getPostponeDay()   Returns the current record's "postpone_day" value
 * @method integer             getOverdueDay()    Returns the current record's "overdue_day" value
 * @method integer             getOverdueTime()   Returns the current record's "overdue_time" value
 * @method integer             getStime()         Returns the current record's "stime" value
 * @method integer             getEtime()         Returns the current record's "etime" value
 * @method integer             getAmount()        Returns the current record's "amount" value
 * @method integer             getNum()           Returns the current record's "num" value
 * @method string              getAcceptUids()    Returns the current record's "accept_uids" value
 * @method integer             getGroupId()       Returns the current record's "group_id" value
 * @method integer             getIsSuccess()     Returns the current record's "is_success" value
 * @method string              getCardLimit()     Returns the current record's "card_limit" value
 * @method KaluliLipinkaRecord setId()            Sets the current record's "id" value
 * @method KaluliLipinkaRecord setLipinkaId()     Sets the current record's "lipinka_id" value
 * @method KaluliLipinkaRecord setType()          Sets the current record's "type" value
 * @method KaluliLipinkaRecord setIsLarge()       Sets the current record's "is_large" value
 * @method KaluliLipinkaRecord setLargeId()       Sets the current record's "large_id" value
 * @method KaluliLipinkaRecord setPostponeType()  Sets the current record's "postpone_type" value
 * @method KaluliLipinkaRecord setPostponeDay()   Sets the current record's "postpone_day" value
 * @method KaluliLipinkaRecord setOverdueDay()    Sets the current record's "overdue_day" value
 * @method KaluliLipinkaRecord setOverdueTime()   Sets the current record's "overdue_time" value
 * @method KaluliLipinkaRecord setStime()         Sets the current record's "stime" value
 * @method KaluliLipinkaRecord setEtime()         Sets the current record's "etime" value
 * @method KaluliLipinkaRecord setAmount()        Sets the current record's "amount" value
 * @method KaluliLipinkaRecord setNum()           Sets the current record's "num" value
 * @method KaluliLipinkaRecord setAcceptUids()    Sets the current record's "accept_uids" value
 * @method KaluliLipinkaRecord setGroupId()       Sets the current record's "group_id" value
 * @method KaluliLipinkaRecord setIsSuccess()     Sets the current record's "is_success" value
 * @method KaluliLipinkaRecord setCardLimit()     Sets the current record's "card_limit" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKaluliLipinkaRecord extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kll_lipinka_record');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('lipinka_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('is_large', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('large_id', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('postpone_type', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 1,
             'length' => 1,
             ));
        $this->hasColumn('postpone_day', 'integer', 6, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 6,
             ));
        $this->hasColumn('overdue_day', 'integer', 6, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 6,
             ));
        $this->hasColumn('overdue_time', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('stime', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('etime', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('amount', 'integer', 6, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 6,
             ));
        $this->hasColumn('num', 'integer', 8, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 8,
             ));
        $this->hasColumn('accept_uids', 'string', 5000, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 5000,
             ));
        $this->hasColumn('group_id', 'integer', 10, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 10,
             ));
        $this->hasColumn('is_success', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('card_limit', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 255,
             ));


        $this->index('lipinka_id', array(
             'fields' => 
             array(
              0 => 'lipinka_id',
             ),
             ));
        $this->index('large_id', array(
             'fields' => 
             array(
              0 => 'user_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}