<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdUserDeliveryAddress', 'kaluli');

/**
 * BaseTrdUserDeliveryAddress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $hupu_uid
 * @property string $hupu_username
 * @property string $name
 * @property string $postcode
 * @property integer $province
 * @property integer $city
 * @property integer $area
 * @property string $mobile
 * @property string $phonesection
 * @property string $phonecode
 * @property string $phoneext
 * @property string $region
 * @property string $street
 * @property string $identity_number
 * @property integer $defaultflag
 * 
 * @method integer                getId()              Returns the current record's "id" value
 * @method integer                getHupuUid()         Returns the current record's "hupu_uid" value
 * @method string                 getHupuUsername()    Returns the current record's "hupu_username" value
 * @method string                 getName()            Returns the current record's "name" value
 * @method string                 getPostcode()        Returns the current record's "postcode" value
 * @method integer                getProvince()        Returns the current record's "province" value
 * @method integer                getCity()            Returns the current record's "city" value
 * @method integer                getArea()            Returns the current record's "area" value
 * @method string                 getMobile()          Returns the current record's "mobile" value
 * @method string                 getPhonesection()    Returns the current record's "phonesection" value
 * @method string                 getPhonecode()       Returns the current record's "phonecode" value
 * @method string                 getPhoneext()        Returns the current record's "phoneext" value
 * @method string                 getRegion()          Returns the current record's "region" value
 * @method string                 getStreet()          Returns the current record's "street" value
 * @method string                 getIdentityNumber()  Returns the current record's "identity_number" value
 * @method integer                getDefaultflag()     Returns the current record's "defaultflag" value
 * @method TrdUserDeliveryAddress setId()              Sets the current record's "id" value
 * @method TrdUserDeliveryAddress setHupuUid()         Sets the current record's "hupu_uid" value
 * @method TrdUserDeliveryAddress setHupuUsername()    Sets the current record's "hupu_username" value
 * @method TrdUserDeliveryAddress setName()            Sets the current record's "name" value
 * @method TrdUserDeliveryAddress setPostcode()        Sets the current record's "postcode" value
 * @method TrdUserDeliveryAddress setProvince()        Sets the current record's "province" value
 * @method TrdUserDeliveryAddress setCity()            Sets the current record's "city" value
 * @method TrdUserDeliveryAddress setArea()            Sets the current record's "area" value
 * @method TrdUserDeliveryAddress setMobile()          Sets the current record's "mobile" value
 * @method TrdUserDeliveryAddress setPhonesection()    Sets the current record's "phonesection" value
 * @method TrdUserDeliveryAddress setPhonecode()       Sets the current record's "phonecode" value
 * @method TrdUserDeliveryAddress setPhoneext()        Sets the current record's "phoneext" value
 * @method TrdUserDeliveryAddress setRegion()          Sets the current record's "region" value
 * @method TrdUserDeliveryAddress setStreet()          Sets the current record's "street" value
 * @method TrdUserDeliveryAddress setIdentityNumber()  Sets the current record's "identity_number" value
 * @method TrdUserDeliveryAddress setDefaultflag()     Sets the current record's "defaultflag" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdUserDeliveryAddress extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_user_delivery_address');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('hupu_uid', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('hupu_username', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             ));
        $this->hasColumn('name', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('postcode', 'string', 6, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 6,
             ));
        $this->hasColumn('province', 'integer', 3, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('city', 'integer', 3, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('area', 'integer', 3, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 3,
             ));
        $this->hasColumn('mobile', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('phonesection', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('phonecode', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));
        $this->hasColumn('phoneext', 'string', 6, array(
             'type' => 'string',
             'length' => 6,
             ));
        $this->hasColumn('region', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('street', 'string', 120, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 120,
             ));
        $this->hasColumn('identity_number', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('defaultflag', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => true,
             'default' => 0,
             'length' => 1,
             ));


        $this->index('hupu_uid', array(
             'fields' => 
             array(
              0 => 'hupu_uid',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}