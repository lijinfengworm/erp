<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TrdModel', 'trade');

/**
 * BaseTrdModel
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $brand_id
 * @property string $name
 * @property integer $type
 * @property string $tags
 * 
 * @method integer  getId()       Returns the current record's "id" value
 * @method integer  getBrandId()  Returns the current record's "brand_id" value
 * @method string   getName()     Returns the current record's "name" value
 * @method integer  getType()     Returns the current record's "type" value
 * @method string   getTags()     Returns the current record's "tags" value
 * @method TrdModel setId()       Sets the current record's "id" value
 * @method TrdModel setBrandId()  Sets the current record's "brand_id" value
 * @method TrdModel setName()     Sets the current record's "name" value
 * @method TrdModel setType()     Sets the current record's "type" value
 * @method TrdModel setTags()     Sets the current record's "tags" value
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTrdModel extends sfDoctrineMasterSlaveRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('trd_model');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('brand_id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => true,
             ));
        $this->hasColumn('name', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 30,
             ));
        $this->hasColumn('type', 'integer', 3, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => 3,
             ));
        $this->hasColumn('tags', 'string', 300, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 300,
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}