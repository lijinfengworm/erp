<?php

/**
 * TrdAccountTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdAccountTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TrdAccountTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdAccount');
    }

    public static function getByHupuId($hupuUid)
    {

        if (empty($hupuUid)) {
            return false;
        } else {
            $userInfo = self::getInstance()
                ->createQuery('t')
                ->where('t.hupu_uid = ?', $hupuUid)
                ->andWhere('t.status = ?', 0)
                ->limit(1)
                ->fetchOne();

            $userHistory = TrdAccountHistoryTable::getInstance()
                ->createQuery('t')
                ->where('t.hupu_uid =?', $hupuUid)
                ->limit(1)
                ->fetchOne();

            if (!$userInfo) {
                $args = array("uid" => $hupuUid);
                $rs = SnsInterface::getContents("getuserbaseinfo", "84", "62c7c5ccd161d52", $args, 'GET');
               // $username = iconv('gbk', 'utf8', $rs['username']);
                $username =  mb_convert_encoding($rs['username'],"utf-8","gbk");
                $userInfo = new TrdAccount();
                $userInfo->setHupuUid($hupuUid);
                $userInfo->setHupuUsername($username);
                $userInfo->setIntegral(20);
                $userInfo->setIntegralTotal(20);
                $userInfo->save();

                if (!$userHistory) {
                    $trdAccountHistory = new TrdAccountHistory();
                    $trdAccountHistory->setHupuUid($hupuUid);
                    $trdAccountHistory->setHupuUsername($username);
                    $trdAccountHistory->setCategory(10);
                    $trdAccountHistory->setType(0);
                    $trdAccountHistory->setExplanation('首次登陆送积分');
                    $trdAccountHistory->setActionid(0);
                    $trdAccountHistory->setIntegral(20);
                    $trdAccountHistory->setGold(0);
                    $trdAccountHistory->setBeforeIntegral(0);
                    $trdAccountHistory->setBeforeGold(0);
                    $trdAccountHistory->setAfterIntegral(20);
                    $trdAccountHistory->setAfterGold(0);
                    $trdAccountHistory->save();
                }
            }
        }
        return $userInfo;
    }

    # 晒物达人排行
    public function getShaiwuTop($isForce = false)
    {
        $key = 'shaiwu_front_top';
        $redis = sfContext::getInstance()->getDatabaseConnection('kaluliRedis');
        $redis->select(1);
        $data = unserialize($redis->get($key));
        if(empty($data) || $isForce === true)
        {
            $data = array();
            $ids = unserialize($redis->get('trade.shaiwu.index.doyen'));
            if(!is_array($ids) && empty($ids)) return false;

            $size = 6;
            $t = array_slice($ids,0,$size);
            $s = array();
            foreach($t as $v)
            {
                if(!empty($v['id']))
                {
                    $s[] = (int)$v['id'];
                }
            }
            array_unique($s);

            $data_houtai = $data_orderBy = array();
            if(!empty($s))
            {
                $data_houtai = self::getInstance()->createQuery('t')
                    ->select('hupu_uid,hupu_username,shaiwu_integral,shaiwu_gold')
                    ->where('t.hupu_uid in ('.implode(',', $s) . ')')
                    ->fetchArray();
            }

            $count = count($data_houtai);
            if($count<6)
            {
                $data_orderBy = self::getInstance()->createQuery('t')
                    ->select('hupu_uid,hupu_username,shaiwu_integral,shaiwu_gold')
                    ->orderBy('t.shaiwu_gold DESC')
                    ->addOrderBy('t.shaiwu_integral DESC')
                    ->addOrderBy('t.integral DESC')
                    ->limit($size)
                    ->fetchArray();
            }

            $tmpData = $data_houtai + $data_orderBy;

            if(!empty($tmpData))
            {
                foreach($tmpData as $v)
                {
                    if( empty($data[$v['hupu_uid']]) )
                    {
                        $data[$v['hupu_uid']] = $v;
                        # 获取用户等级
                        $user = TrdAccountTable::getByHupuId($v['hupu_uid']);
                        $tmp = $user->getLevel();
                        $data[$v['hupu_uid']]['level'] = $tmp['level'];
                    }
                    if( count($data)>=6 )
                    {
                        break;
                    }
                }
            }
            $redis->setex($key,3600,serialize($data));
        }

        return $data;
    }

    # 获取晒物金币和积分
    public static function getShaiwuByUid($uid=null)
    {
        $data = CacheModel::getCache();
        if( empty($data) )
        {
            $tmp = self::getInstance()->createQuery('t')
                ->select("shaiwu_integral AS integral,shaiwu_gold AS gold")
                ->where('t.hupu_uid = ?', $uid)
                ->fetchArray();
            $data = $tmp[0];
            if (empty($data['integral']) && empty($data['gold'])) {
                return;
            }
            CacheModel::setCache($data,60);
        }
        return $data;
    }
}