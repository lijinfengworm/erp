<?php

/**
 * TrdAdminRoleTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdAdminRoleTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TrdAdminRoleTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdAdminRole');
    }


    /**
     * 获取可用的用户组
     * $is_simple  是否自定义显示字段
     */
    public static function getNormalRole($field = '',$status = 1) {
        $result = array();
        $field ?  $_field = $field : $_field = '*';
        $data = self::getInstance()
            ->createQuery()
            ->select($_field);
        if($status != 'all') {
            $data->andwhere("role_status = ?",$status);
        }
        $data = $data->fetchArray();
        if(isset($data)) {
            foreach ($data as $k => $v) {
                $result[$v['id']] = $data[$k];
            }
        }
        return $result;
    }


    /**
     * 获取某个用户的用户组合集
     */
    public function getFormatUserRole($role_arr) {
        if(empty($role_arr) || count($role_arr) < 1) return false;
        $_result = array('is_super'=>0,'role_id'=>'','role_item'=>array());
        $role_data =  self::getInstance()->createQuery()
            ->select('*')
            ->whereIn('id', $role_arr)
            ->fetchArray();
        //拼装成一个数组
        $_role_tmp = array();
        foreach($role_data as $k=>$v) {
            if($v['is_super'] == 1) $_result['is_super'] = 1;
            $_result['role_item'][$v['id']]['name'] = $v['name'];
            $_result['role_item'][$v['id']]['id'] = $v['id'];
            $_result['role_item'][$v['id']]['role_status'] = $v['role_status'];
            $_role_tmp[] = $v['id'];
        }
        $_result['role_id'] = implode(',',$_role_tmp);
        return $_result;
    }

    /**
     * 删除组
     */
    public static function del_role($id) {
        $data = self::getInstance()->find($id);
        if(empty($data)) return false;
        return $data->delete();
    }


}