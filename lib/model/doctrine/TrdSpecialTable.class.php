<?php

/**
 * TrdSpecialTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdSpecialTable extends Doctrine_Table
{

    public static $SHOW_FLAG = 2;
    public static $TIMING_FLAG = 3; //定时发布状态
    public static $HIDE_FLAG = 1;

    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdSpecial');
    }


 
    public static function getThemeData($id=null)
    {
        $data = CacheModel::getCache();
        if( empty($data) )
        {
            $data = self::getInstance()
               ->find($id);

            if (empty($data)) {
                return;
            }
            CacheModel::setCache($data,60);
        }
        return $data;
    }


    public static function showSpecialStatus($show_flag,$type = 'string') {
        $string = array(1=>'不展示',2=>'展示中',3=>'定时发布');
        $html_one = array(1=>'<span class="c-red">不展示</span>',2=>'<span class="c-green">展示中</span>',3=>'<span class="c-blue">定时发布</span>');
        $type = $$type;
        if(!empty($type[$show_flag])) return $type[$show_flag];
        return false;
    }

    public static function showJournalStatus($show_flag,$type = 'string') {
        $string = array(0=>'不展示',1=>'展示中');
        $html_one = array(0=>'<span class="c-red">不展示</span>',1=>'<span class="c-green">展示中</span>');
        $type = $$type;
        if(!empty($type[$show_flag])) return $type[$show_flag];
        return false;
    }

    /**
     * 通过自定义条件获取全部的数据
     * Abuout 梁天
     * ->from('TrdSpecial t')
     *   ->select('name,c.name ffff')->leftJoin('t.TrdSpecialCate c on t.cateid = c.id')
     */
    public static function  getAll($bind = array()) {
        $data = Doctrine_Query::create()->from('TrdSpecial t');
        //select
        if (!empty($bind['select'])){
            $data->select($bind['select']);
        } else {
            $data->select("*");
        }
        //leftJoin
        if (!empty($bind['leftJoin'])){
            $data->leftJoin($bind['leftJoin']);
        }
        //where 简单判断  如果复杂 建议新写函数
        if(!empty($bind['where']) && count($bind['where']) > 0) {
            foreach($bind['where'] as $k=>$v) {
                $data->addWhere($v);
            }
        }
        //order
        if (!empty($bind['order'])){
            $data->orderBy($bind['order']);
        } else {
            $data->orderBy('id desc');
        }
        //limit
        if (!empty($bind['limit'])){
            $data->limit($bind['limit']);
        }

        if(!empty($bind['offset'])) {
            $data->offset($bind['offset']);
        }

        $data =  $data->fetchArray();
        if(!empty($bind['is_count'])) {
            $data = $data[0]['num'];
        }
        return $data;
    }

    /*
       * 获取定时更新专题
       */
    public static function getTimingIntervalData($field = 'timing_interval') {
        $data = self::getInstance()->createQuery('m')
            ->select($field)
            ->where('m.special_status = ?',self::$TIMING_FLAG)
            ->fetchArray();
        return $data;
    }


    //没有 join 的获取
    public static function getSpecialAll($bind = array()) {
        $data = self::getInstance()->createQuery();
        //select
        if (!empty($bind['select'])){
            $data->select($bind['select']);
        } else {
            $data->select("*");
        }
        //where 简单判断  如果复杂 建议新写函数
        if(!empty($bind['where']) && count($bind['where']) > 0) {
            foreach($bind['where'] as $k=>$v) {
                $data->addWhere($v);
            }
        }

        //whereIn 简单判断  如果复杂 建议新写函数
        if(!empty($bind['whereIn']) && count($bind['whereIn']) > 0) {
            foreach($bind['whereIn'] as $k=>$v) {
                $data->WhereIn($k,$v);
            }
        }

        //order
        if (!empty($bind['order'])){
            $data->orderBy($bind['order']);
        } else {
            $data->orderBy('id desc');
        }
        //limit
        if (!empty($bind['limit'])){
            $data->limit($bind['limit']);
        }

        if(!empty($bind['offset'])) {
            $data->offset($bind['offset']);
        }
        $data =  $data->fetchArray();
        if(!empty($bind['is_count'])) {
            $data = $data[0]['num'];
        }
        return $data;
    }







    //修改专题是否展示在期刊里面
    public static function saveShowJournal($cate_id,$is_show) {
        self::getInstance()
            ->createQuery()
            ->update()
            ->set('show_journal', $is_show)
            ->where('cateid = ?', $cate_id)
            ->execute();
    }

    //删除专题
    public static function del_special($id) {
        $data = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('id = ?',$id)
            ->delete();
        if(empty($data)) return false;
        return  $data->execute();
    }


    public static function syncComment($id,$replyNum){
        $status = array('status'=>false);
        try{
            $obj = self::getInstance()->find($id);
            $obj->setCommentCount($obj->getCommentCount()-(1+$replyNum));
            $obj->save();
            $status['status'] = true;
        }catch (Exception $e){
            $status['msg'] = $e->getCode();
        }
        return $status;
    }



    //获取最近4个专题
    public static function getMoreSpecial($ids = '',$curr_id = '',$cateid = '',$field = '*',$limit = 4,$is_array = false,$is_journal = false) {
        $data = self::getInstance()
            ->createQuery()
            ->select($field)
            ->andWhere('special_status = ?',TrdSpecialTable::$SHOW_FLAG);

        if(empty($ids) &&  !empty($cateid)) $data->andWhere('cateid = ?', $cateid);


        if(!empty($ids)) $_ids = explode(',',$ids);
        if(!empty($_ids)) {
            $data->addWhere('id  in (' . join(',',$_ids) . ')');
        } else {
            $data->addWhere('id <> '.$curr_id);
        }
        //是否是期刊
        if(!empty($is_journal)) {
            $data->addWhere('show_journal = 1');
        }
        $data->orderBy('id desc');
        $data->limit($limit);
        if($is_array) {
            $data = $data->fetchArray();
        } else {
            $data = $data->execute();
        }
        if(!empty($data)) return $data;
        return false;
    }


    /**
     * 判断某个专题栏目是否还有专题
     */
    public static function  getOnSpecialCount($cateid) {
        $query = self::getInstance()
            ->createQuery()
            ->select('count(id) as num')
            ->andWhere('cateid = ?',$cateid)
            ->fetchArray();
        return $query[0]['num'];
    }



    //获取热门期刊
    public static function getHotData($isForce = false,$num = 3) {
        $key = 'shihuo.journal.hot';
        $redis = sfContext::getInstance()->getDatabaseConnection('kaluliRedis');
        $redis->select(1);
        $data = unserialize($redis->get($key));

        if(empty($data) || $isForce === true) {
                $data = self::getInstance()->createQuery('t')
                    ->select('id,journal_title,template,support,agaist,comment_count,journal_img,created_at')
                    ->andWhere('t.show_journal = 1')
                    ->andWhere('t.special_status = 2')
                    ->orderBy('t.click_count DESC')
                    ->limit(3)
                    ->fetchArray();
            if(empty($data)) return false;
            $redis->set($key,serialize($data),600);
        }
        //判断是不是找指定条数
        if(count($data) > $num) {
            $_data = array();
         for($i=0;$i<$num;$i++) {
             $_data[] = $data[$i];
         }
            $data  = $_data;
        }
        return $data;
    }




}