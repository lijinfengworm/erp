<?php

/**
 * TrdActivityTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdActivityTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TrdActivityTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdActivity');
    }
    /*
     * 返回活动信息
     */

    public static function getActivityById($id) {      
        $query = self::getInstance()->createQuery('m')
                ->where('m.id= ?', $id)
                ->andWhere('m.is_delete = 0');
        return self::messagesCondition($query)->fetchOne();
    }
    
    public static function myListQuery() {
        $query = self::getInstance()->createQuery('m')
                ->where('m.is_delete = 0')
                ->orderBy('m.created_at desc');
        return $query;
    }
    /*
     * 删除单条内容
     */
    public static function deleteMessage($id=0,$msg_source='',$list_page=0) {
        $queryResult = self::getInstance()->createQuery('m')
                        ->update()
                        ->set('m.is_delete', 1)
                        ->where('m.id =?', $id)
                        ->execute();
        return $queryResult;
    }
    
     /*
     * 更新活动时间
     */
    public static function stopActivityById($id=0) {
        $date = date('Y-m-d H:i:s',time());
        $queryResult = self::getInstance()->createQuery('m')
                        ->select()
                        //->set('m.expiry_date ',"2014-06-18 00:00:00")
                        ->where('m.id =?', $id)
                        ->fetchOne();
        if ($queryResult){
            $queryResult->setExpiryDate($date);
            $queryResult->save();
            return true;
        }
        return false;
    }

    /*
     * 删除多条内容
     */

    public static function deleteMessages($ids) {
        if (empty($ids))
            return false;
        return self::getInstance()->createQuery('m')
                        ->update()
                        ->set('is_delete', 1)
                        ->whereIn('m.id', $ids)
                        ->execute();
    }
    
    /*
     * 获取message的通用条件
     */
    private static function messagesCondition(Doctrine_Query $query) {
        return $query->andWhere($query->getRootAlias() . '.is_delete = 0');
    }


    public static function houtaGetActivity($offset=0 ,$limit =15)
    {
        $now = time();
        $connection = Doctrine_Manager::getInstance()->getConnection('trade');
        $connection->execute("set time_zone = '+8:00';");
        $query = "SELECT *,
                    (case
                    when UNIX_TIMESTAMP(start_date)<= {$now} and UNIX_TIMESTAMP(expiry_date)> {$now} then 0
                    when {$now}< UNIX_TIMESTAMP(start_date) then 1
                    when {$now}>= UNIX_TIMESTAMP(expiry_date) then 2
                    else 4 end) as status
                    from trd_activity ORDER BY status ASC,created_at desc limit {$offset}, {$limit} ";
        $statement = $connection->execute($query);
        $statement->execute();
        $resultset = $statement->fetchAll(PDO::FETCH_ASSOC);
        return $resultset;
    }

    public static function houtaGetActivityCount()
    {
        $query = self::getInstance()->createQuery()
            ->orderBy('id desc');
        return $query->count();
    }


    public static function getActivity($page =1 ,$limit =20,$type=null)
    {
        $offset = ($page - 1) * $limit;
        $date_now = date('Y-m-d H:i:s');
        if( 'hot' == $type )
        {
            $query = self::getInstance()->createQuery()
                ->select('id,total,recevied,title,exchange_type,type,recevied/total as rate,integral,gold,img_path,start_date,expiry_date')
                ->where('is_delete = ?',0)
                ->andWhere('expiry_date > ?',$date_now)
                ->andWhere('start_date < ?',$date_now)
                ->offset($offset)
                ->limit($limit)
                ->orderBy('rate desc');
        }
        else
        {
            $query = self::getInstance()->createQuery()
                ->select('id,title,exchange_type,type,total,recevied,integral,gold,img_path,start_date,expiry_date')
                ->where('is_delete = ?',0)
                ->andWhere('expiry_date > ?',$date_now)
                ->andWhere('start_date < ?',$date_now)
                ->offset($offset)
                ->limit($limit)
                ->orderBy('id desc');
        }

        return $query->fetchArray();
    }

    public static function getCountActivity()
    {
        $date_now = date('Y-m-d H:i:s');
        $query = self::getInstance()->createQuery()
            ->select('count(*) AS total')
            ->where('is_delete = ?',0)
            ->andWhere('expiry_date > ?',$date_now)
            ->andWhere('start_date < ?',$date_now);
        return $query->fetchOne();
    }

    /*
    * 返回活动信息
    */
    public static function getActivityByIds($ids) {
        $query = self::getInstance()->createQuery('m')
               ->andWhere("id in (" . join(",", $ids) . ") ");
        return $query->execute();
    }


    /*
     *获取现在的活动
     */
    public static function getNowActivity($page,$pagesize)
    {
        $offset = ($page - 1) * $pagesize;
        $date_now = date('Y-m-d H:i:s');
        return self::getInstance()
            ->createQuery()
            ->select('id,title,exchange_type,type,total,recevied,integral,gold,limits,content,img_path,start_date,expiry_date')
            ->where('is_delete = ?',0)
            ->andWhere('expiry_date > ?',$date_now)
            ->andWhere('start_date < ?',$date_now)
            ->andWhere('type = ?',0)
            ->orderBy('id desc')
            ->offset($offset)
            ->limit($pagesize)
            ->execute();
    }

    public static function getActivityForApp($type = null, $page = 1, $pageSize = 20)
    {
        $offset = ($page - 1) * $pageSize;
        $date_now = date('Y-m-d H:i:s');
        $query = self::getInstance()->createQuery()
            ->where('is_delete = ?', 0)
            ->andWhere('expiry_date > ?', $date_now)
            ->andWhere('start_date < ?', $date_now);
        if (null !== $type && ('' !== $type)) {
            $type = (int) $type;
            switch ($type) {
                case 0:
                    $query->andWhere('root_type = ?', 0);
                    break;
                case 1:
                    $query->andWhere('root_type = ?', 1);
                    break;
                case 2:
                    $query->andWhere('root_type = ?', 2);
                    break;
            }
        }
        $query->orderBy('created_at DESC')
            ->offset($offset)
            ->limit($pageSize);
        return $query->execute();
    }

    public static function getCountActivityByType($type = null)
    {
        $date_now = date('Y-m-d H:i:s');
        $query = self::getInstance()->createQuery()
            ->select('count(1) as num')
            ->where('is_delete = ?', 0)
            ->andWhere('expiry_date > ?', $date_now)
            ->andWhere('start_date < ?', $date_now);
        if (null !== $type && ('' !== $type)) {
            $type = (int) $type;
            switch ($type) {
                case 0:
                    $query->andWhere('root_type = ?', 0);
                    break;
                case 1:
                    $query->andWhere('root_type = ?', 1);
                    break;
                case 2:
                    $query->andWhere('root_type = ?', 2);
                    break;
            }
        }
        $res = $query->fetchOne();
        return $res->getNum();
    }

}