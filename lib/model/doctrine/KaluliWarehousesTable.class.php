<?php

/**
 * KaluliWarehousesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class KaluliWarehousesTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object KaluliWarehousesTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('KaluliWarehouses');
    }

    //通过code获取一条记录
    public static function getOneByCode($code = '') {
        if(empty($code)) return false;
        $data = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('code = ?',$code)
            ->fetchOne();
        if(empty($data)) return false;
        return $data;
    }


    /**
     * 获取仓库
     */
    public static function getWare($is_cache = true) {
        $_redis = sfContext::getInstance()->getDatabaseConnection('kaluliRedis');
        $_redis->select(1);
        $data = $_redis->get("kaluli.ware.list");
        if(empty($data) || $is_cache) {
            $putData = array();
            $data =  self::getInstance()
            ->createQuery()
            ->select('*')
            ->fetchArray();
            foreach($data as $k=>$v) {
                $putData[$v['id']] = $v;
            }
            if($is_cache) return $putData;
            $_redis->set("kaluli.ware.list",serialize($putData));
        } else {
            return unserialize($data);
        }
        return $data;
    }


    //返回指定仓库文字
    public static function  getWareText($id) {
        if(empty($id)) return '未知';
        $data = self::getWare();
        if(empty($data[$id])) return '未知';
        return $data[$id]['name'];
    }

    //返回指定仓库
    public static function  getOneWareById($id) {
        if(empty($id)) return '未知';
        $data = self::getWare();
        if(empty($data[$id])) return '未知';
        return $data[$id];
    }

    //返回仓库备注
    public static function  getWareNote($id) {
        if(empty($id)) return '未知';
        $data = self::getWare();
        if(empty($data[$id])) return '';
        return $data[$id]['note'];
    }

    /**
     * 删除组
     */
    public static function del_ware($id) {
        $data = self::getInstance()->find($id);
        if(empty($data)) return false;
        return $data->delete();
    }








}