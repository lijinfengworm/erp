<?php

/**
 * TrdGroupon
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class TrdGroupon extends BaseTrdGroupon
{
    private $attribulte_array = false;
    public $upload_images_dir = '/trade/groupon/';

    //设置团购属性
    public function set_groupon_attr($key,$val)
    {
        if($this->attribulte_array === FALSE)
        {
            $this->attribulte_array = parent::getAttr()?unserialize(parent::getAttr()):array();
        }
        $this->attribulte_array[$key] = $val;
        $this->setAttr(serialize($this->attribulte_array));
        return true;
    }
    //获取团购属性
    public function get_groupon_attr($key)
    {
        if($this->attribulte_array === FALSE)
        {
            $this->attribulte_array = parent::getAttr()?unserialize(parent::getAttr()):array();
        }
        return isset($this->attribulte_array[$key])?$this->attribulte_array[$key]:FALSE;
    }
    
    public function getImagesFristCdn($height = 430)
    {
		if($this->get_groupon_attr('images_frist'))
		{
			return $this->get_groupon_attr('images_frist').'?imageView2/2/w/'.intval($height);
		}
		return '';
        //return voiceConfig::getCDNDomain($this->getId()) . '/' . basename(sfConfig::get('sf_upload_dir')) . $this->upload_images_dir . $this->get_groupon_attr('images_frist');
    }
    public function getImagesFrist($height = 430)
    {
		return $this->get_groupon_attr('images_frist');
	}
        
    /**
     *
     * 获取七牛图片
     * @param int $mode 1 表示居中裁剪 2表示压缩
     * @param int $width 宽
     * @param int $height 高
     * @return string 
     */
    public function getImagesFristQiniuCdn($mode = 2,$width = 430,$height = 430)
    {
		if($this->get_groupon_attr('images_frist')) {
            if (preg_match("/http:\/\//",$this->get_groupon_attr('images_frist'))){
                if($mode == 2){
                    return $this->get_groupon_attr('images_frist') ? $this->get_groupon_attr('images_frist') .'?imageView2/'.$mode.'/w/'.intval($width) : '';
                } else {
                    return $this->get_groupon_attr('images_frist') ? $this->get_groupon_attr('images_frist') .'?imageView2/'.$mode.'/w/'.intval($width).'/h/'.intval($height) : '';
                }
            } else {//兼容原始的图片
                return voiceConfig::getCDNDomain($this->getId()) . '/' . basename(sfConfig::get('sf_upload_dir')) . $this->upload_images_dir . $this->get_groupon_attr('images_frist');
            }
		}
		return '';
    }

    public function getImageQiniuCdnByNum($num, $mode = 2, $width = 430, $height = 430)
    {
        if($this->get_groupon_attr($num))
        {
            if (preg_match("/http:\/\//",$this->get_groupon_attr($num))){
                if($mode == 2){
                    return $this->get_groupon_attr($num).'?imageView2/'.$mode.'/w/'.intval($width);
                } else {
                    return $this->get_groupon_attr($num).'?imageView2/'.$mode.'/w/'.intval($width).'/h/'.intval($height);
                }
            } else {//兼容原始的图片
                return voiceConfig::getCDNDomain($this->getId()) . '/' . basename(sfConfig::get('sf_upload_dir')) . $this->upload_images_dir . $this->get_groupon_attr($num);
            }
        }
        return '';
    }

    /**
     * 获取团购所有图片
     */
    public function getAllImageQiniuCdn()
    {
        $image = array();
        $imageArr = array('images_frist', 'images_second', 'images_third', 'images_fourth');
        foreach ($imageArr as $num) {
            $img = $this->getImageQiniuCdnByNum($num, 1, 430, 430);
            if($img) $image[] = $img;
        }
        return $image;
    }
    
    public function setImagesFrist($val)
    {
        
        return $this->set_groupon_attr('images_frist', $val); 
    }
    
    public function getImagesSecondCdn()
    {
        return voiceConfig::getCDNDomain($this->getId()) . '/' . basename(sfConfig::get('sf_upload_dir')) . $this->upload_images_dir . $this->get_groupon_attr('images_second');
    }
    public function getImagesSecond()
    {
        return $this->get_groupon_attr('images_second');
    }
    public function setImagesSecond($val)
    {
        return $this->set_groupon_attr('images_second', $val); 
    }
    
    public function getImagesThirdCdn()
    {
        return voiceConfig::getCDNDomain($this->getId()) . '/' . basename(sfConfig::get('sf_upload_dir')) . $this->upload_images_dir . $this->get_groupon_attr('images_third');
    }
    public function getImagesThird()
    {
        return $this->get_groupon_attr('images_third');
    }
    public function setImagesThird($val)
    {
        return $this->set_groupon_attr('images_third', $val); 
    }
    public function getRefuse()
	{
		return $this->get_groupon_attr('refuse');
	}
	public function setRefuse($msg)
	{
		return $this->set_groupon_attr('refuse',$msg);
	}
    public function getImagesFourthCdn()
    {
        return voiceConfig::getCDNDomain($this->getId()) . '/' . basename(sfConfig::get('sf_upload_dir')) . $this->upload_images_dir . $this->get_groupon_attr('images_fourth');
    }
    
    public function getImagesFourth()
    {
        return $this->get_groupon_attr('images_fourth');
    }
    
    public function setImagesFourth($val)
    {
        return $this->set_groupon_attr('images_fourth', $val); 
    }

    public function getImagesCertifications()
    {
        return $this->get_groupon_attr('images_certifications');
    }

    public function setImagesCertifications($val)
    {
        return $this->set_groupon_attr('images_certifications', $val);
    }

    public function getImagesProsize()
    {
        return $this->get_groupon_attr('images_prosize');
    }

    public function setImagesProsize($val)
    {
        return $this->set_groupon_attr('images_prosize', $val);
    }

    public function getAllImages()
    {
        return array(
        $this->getImagesFristCdn(),
        $this->getImagesSecondCdn(),
        $this->getImagesThirdCdn(),
        $this->getImagesFourthCdn()
        );
    }
	public function setCheckImgs(array $imgs)
	{
		return $this->set_groupon_attr('check_imgs', $imgs);
	}
	public function getCheckImgs()
	{
		return $this->get_groupon_attr('check_imgs');
	}
    public function getPageUrl()
    {
        return tradeConfig::getDomain().'/tuangou/'.$this->getId();
    }
    public function getTureDiscount()
    {
		if($this->getPrice() == 0 || $this->getOriginalPrice() == 0)
		{
			return 0;
		}
        return round($this->getPrice()/$this->getOriginalPrice(),2)*10;
    }


    public function postInsert($event)
    {
        $message = array(
            'id' => $this->getId(),
            'type' => 'create',
            'channelType'=>'groupon'
        );

        $this->sendMqMessage($message);
        parent::postInsert($event);
    }
    public function preUpdate($event)
    {
        $new = $this->getModified();
        $modified = array_keys($new);
        //如果是删除了就不处理了
        if(empty($new['deleted_at']))
        {
            $message = array(
                'id' => $this->getId(),
                'type' => 'update',
                'channelType'=>'groupon',
                'modified'=>$modified
            );
            $this->sendMqMessage($message);
        }
        parent::preUpdate($event);
    }
    public function postDelete($event)
    {
        $message = array(
            'id' => $this->getId(),
            'type' => 'delete',
            'channelType'=>'groupon'
        );
            $this->sendMqMessage($message);

        parent::postDelete($event);
    }

    public function sendMqMessage($message)
    {
        $amqpParams = sfConfig::get("app_mabbitmq_options_shihuo");
        $connection = new AMQPConnection($amqpParams['params']['host'], $amqpParams['params']['port'],$amqpParams['params']['user'], $amqpParams['params']['pass'], $amqpParams['params']['vhost']);
        $channel = $connection->channel();
        $arguments = array(
            "x-dead-letter-exchange" => array("S", "amq.topic"),
            "x-message-ttl" => array("I", 2000),
            "x-dead-letter-routing-key" => array("S", "shihuo.groupon.detail")
        );
        $channel->queue_declare('groupon_deferred_2', false, true, false, false, false, $arguments);

        $msg = new AMQPMessage(json_encode($message));
        $channel->basic_publish($msg, '', 'groupon_deferred_2');
    }



    public function preSave($event) {
        $changed = $this->getModified(true);
        $this->setDiscount($this->getTureDiscount());
        //attend_count 变化 rank需要跟着变化
        if ($this->isNew() || isset($changed['attend_count'])){
            //获取rank的公式
            $this->setRank($this->getTrueRank());
        }
        parent::preSave($event);
    }

    /**
     *
     *  计算rank = 日期分 + 折扣分 + 联盟分 + 点击分
     */
    public function getTrueRank(){
        $rank = round((strtotime($this->getStartTime())-strtotime('2014-10-01 00:00:00'))/8640);//日期分
        $discount = $this->getDiscount();
        if ($discount <= 1){//计算折扣分
            $rank += 10;
        } else if ($discount <= 2){
            $rank += 8;
        } else if ($discount <= 3){
            $rank += 6;
        } else if ($discount <= 4){
            $rank += 4;
        } else {
            $rank += 2;
        }
        $is_mem = TrdBusinessmanTable::getInstance()->createQuery()->select('alliance')->where('hupu_uid = ?',$this->getHupuUid())->limit(1)->fetchOne();    
        if ($is_mem && $is_mem->getAlliance()){//联盟会员分
            $rank += 10;
        } 
        if ($this->getAttendCount()){
            $rank += round(log($this->getAttendCount(),2));//点击分
        }
        return $rank;
    }

	//1. 待提交  o
	//2. 待付款  o
	//3. 待审核
	//4. 已审核
	//5. 审核不通过
	//7. 取消
	//6. 审核通过
	public $formatStatus = array(
		1 => '待提交',
		2 => '待付款',
		3 => '待审核',
		5 => '审核不通过',
		6 => '审核通过',
		7 => '已取消',
		8 => '待排期'
	);
	public function getFormatStatus()
	{
		switch ($this->getStatus())
		{
			case 1:
				return '待提交';
				break;
			case 2:
				return '待付款';
				break;
			case 3:
				return '待审核';
				break;
//			case 4:
//				return '已审核';
//				break;
			case 5:
				return '审核不通过';
				break;
			case 6:
				if( strtotime($this->getEndTime()) < time())
				{
					return '已过期';
				}
				return '审核通过';
				break;
			case 7:
				return '已取消';
				break;
            case 8:
                return '待排期';
                break;
			default:
				return '未知';
		}
	}

	//0  默认
	//1 已支付
	//2 已退款
	public $formatPayStatus = array(
		0 => '未付款',
		1 => '已支付',
		2 => '已退款'
	);
	public function getFormatPayStatus()
	{

	}

    // 获得M站地址
    public function getMobileUrl($id = null)
    {
        $id = $id ? $id : $this->getId();
        return 'http://m.shihuo.cn/tuangou/' . $id;
    }

    public function simpleFormatApp($imgwidth="300",$imgheight="300",$href="", $flag = false, $orderFlag = false)
    {
        $go_app = sfConfig::get('app_app');
        $data = array();
        $data['id'] = (string)$this->getId();
        $data['title'] = $this->getTitle();
        if($href)
        {
            $data['href'] =  $href;
        }else{
            $data['href'] =  $go_app['go']['href'].'?url='.urlencode($this->getUrl());
        }
        $data['attend_count'] = $this->getAttendCount();
        $data['price'] = (string)round($this->getPrice());
        $data['original_price'] = (string)round($this->getOriginalPrice());
        $data['discount'] = (string)round($this->getDiscount(), 1);
        $data['praise'] = $this->getPraise();
        if ($orderFlag) {
            $data['time'] = (string) (strtotime($this->getStartTime()) - time());
        } else {
            $data['time'] = $flag ? ((string) strtotime($this->getStartTime())) : (string)(strtotime($this->getEndTime()) - time());
        }
        $data['signal'] = 'shihuo'.str_pad($this->getId(),6,"0",STR_PAD_LEFT);
        $data['img_path'] = $this->getImagesFristQiniuCdn(1,$imgwidth,$imgheight);
        return $data;
    }

    public function completeFormatApp($imgwidth="300",$imgheight="300",$href="")
    {
        $memo = $this->getMemo();
        $go_app = sfConfig::get('app_app');
        $data = array();
        $data['id'] = (string)$this->getId();
        $data['title'] = $this->getTitle();
        $data['intro'] = $this->getIntro();
        $data['memo'] = str_replace('imageView2/2/w/700', 'imageView2/2/w/640', $memo);
        if($href)
        {
            $data['href'] =  $href;
        }else{
            $data['href'] =  $go_app['go']['href'].'?url='.urlencode($this->getUrl());
        }
        $data['attend_count'] = $this->getAttendCount();
        $data['price'] = (string)round($this->getPrice());
        $data['original_price'] = (string)round($this->getOriginalPrice());
        $data['discount'] = (string)round($this->getDiscount(), 1);
        $data['praise'] = $this->getPraise();
        $time = time();
        if (strtotime($this->getEndTime()) >= $time && (strtotime($this->getStartTime()) <= $time)) {
            $data['time'] = (string) (strtotime($this->getEndTime()) - time());
            $data['is_open'] = true;
        } elseif (strtotime($this->getStartTime()) > $time) {
            $data['time'] = (string) (strtotime($this->getStartTime()) - time());
            $data['is_open'] = false;
        }
        $data['signal']  = 'shihuo'.str_pad($this->getId(),6,"0",STR_PAD_LEFT);
        $data['img_path'] = $this->getImagesFristQiniuCdn(1,$imgwidth,$imgheight);
        $data['url'] = $this->getUrl();
        return $data;
    }

    public $uspLogo = array(
        0 => '无',
        1 => '全网低价',
        2 => '新品首发'
    );

}
