<?php

/**
 * TrdAdminUserTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdAdminUserTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TrdAdminUserTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdAdminUser');
    }





    /**
     * 获取一条会员信息
     */
    public static function getOne($id,$field) {
        $userInfo = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('id = ?',$id)
            ->fetchOne();
        if(empty($userInfo)) return false;
        $userInfo = $userInfo->toArray();
        if(empty($field)) return $userInfo;
        return $userInfo[$field];
    }



    /**
     * 通过虎扑id获取一条记录
     */
    public static function getOneByhpId($id,$field) {
        $userInfo = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('hupu_uid = ?',$id)
            ->fetchOne();
        if(empty($userInfo)) return false;
        $userInfo = $userInfo->toArray();
        if(empty($field)) return $userInfo;
        return $userInfo[$field];
    }


    /**
     * 更新登录状态信息
     * @param type $userId
     * @return type
     */
    public static function loginStatus($userId) {
        $userInfo = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('id = ?',$userId)
            ->fetchOne();
        if(empty($userInfo)) return false;
        $userInfo->set('last_login_time', date('Y-m-d H:i:s'));
        $userInfo->set('last_login_ip',FunBase::get_client_ip());
        return $userInfo->save();
    }

    /**
     * 改变用户状态
     */
    public static function changeStatus($userId,$status) {
        $userInfo = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('id = ?',$userId)
            ->fetchOne();
        if(empty($userInfo)) return false;
        $userInfo->set('user_status', $status);
        return $userInfo->save();
    }


    /**
     * 判断某个字段是否存在
     */
    public static function hasUserField($field,$value,$id) {
        $flag = self::getInstance()
            ->createQuery()
            ->select('id')
            ->andWhere($field.' = ?',$value);
        if(!empty($id)) {
            $flag->andWhere('id <> ?',$id);
        }
        return $flag->fetchOne();
    }


    /**
     * 通过账号密码获取用户信息
     */
    public static function  getUserInfo($username, $password = NULL) {
        if (empty($username))  return false;
        $userInfo = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('username = ?',$username)
            ->fetchOne();
        if (empty($userInfo)) return false;
        //密码验证
        if (!empty($userInfo->password) && self::hashPassword($password, $userInfo->verify) != $userInfo->password) {
            return false;
        }
        return $userInfo->toArray();
    }


    /**
     * 判断某个组是否还有会员
     */
    public static function  getOnRoleUserCount($role_id) {
        $query = self::getInstance()
            ->createQuery()
            ->select('count(id) as num')
            ->andWhere('role like "%-'.$role_id.'-%"')
            ->fetchArray();
            return $query[0]['num'];
    }


    /*
     * 获取某个组下面所有的会员
     */
    public function  getRoleToIds($role_id,$field = 'id',$type = '') {
        if(empty($role_id)) return false;
        $query = self::getInstance()
            ->createQuery()
            ->select($field)
            ->andWhere('role like "%-'.$role_id.'-%"')
            ->fetchArray();
        if(empty($query)) return false;
        if($type == 'string') {
            return FunBase::get_current_array($query,$field);
        }
        return $query;
    }


    /**
     * 对明文密码，进行加密，返回加密后的密文密码
     * @param string $password 明文密码
     * @param string $verify 认证码
     * @return string 密文密码
     */
    private static function hashPassword($password, $verify = "") {
        return md5($password . md5($verify));
    }


}