<?php

/**
 * TrdCouponsReceviedTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdCouponsReceviedTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TrdCouponsReceviedTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdCouponsRecevied');
    }
    
    public static function myListQuery() {
        $query = self::getInstance()->createQuery('m')
                ->where('m.is_delete = 0')
                ->orderBy('m.created_at desc');
        return $query;
    }

    public static function getCouponsDetailByUid($hupuUid,$type="now",$page=1,$limit=21)
    {
        $time  = time();
        $offset = ($page-1)*$limit;
        if($type == "now")
        {
            $lgys_sql = 'select  a.*,b.img_path,b.title,b.mart,b.receive_url
                    from trd_coupons_recevied as a
                    left join trd_activity as b
                    on a.activity_id=b.id
                    where a.hupu_uid ='.$hupuUid.'
                    and a.status = 1
                    and \''.$time.'\'< a.etime
                    order by a.id desc
                    limit '.$offset.','.$limit;

        }
        elseif($type == "over")
        {
            $lgys_sql = 'select  a.*,b.img_path,b.title,b.mart,b.receive_url
                    from trd_coupons_recevied as a
                    left join trd_activity as b
                    on a.activity_id=b.id
                    where a.hupu_uid ='.$hupuUid.'
                    and a.status = 1

                    and \''.$time.'\'> a.etime
                    order by a.id desc
                    limit '.$offset.','.$limit;
        }
        elseif($type == "use")
        {
            $lgys_sql = 'select  a.*,b.img_path,b.title,b.mart,b.receive_url
                    from trd_coupons_recevied as a
                    left join trd_activity as b
                    on a.activity_id=b.id
                    where a.hupu_uid ='.$hupuUid.'
                    and a.status = 2
                    order by a.id desc
                    limit '.$offset.','.$limit;
        }
        else
        {
            return false;
        }

        $connection = Doctrine_Manager::getInstance()->getConnection('trade');
        $searchDataList = $connection->execute($lgys_sql);
        $results = $searchDataList->fetchAll(PDO::FETCH_ASSOC);

        $connection->close();

        return $results;
    }



    public static function getCouponsCountByUid($hupuUid,$type="now")
    {
        $time  = time();
        if($type == "now")
        {
            $lgys_sql = 'select  count(a.id) as total
                    from trd_coupons_recevied as a
                    where a.hupu_uid ='.$hupuUid.'
                    and a.status = 1
                    and a.stime <= \''.$time.'\'
                    and \''.$time.'\'< a.etime';
        }
        elseif($type == "over")
        {
            $lgys_sql = 'select  count(a.id) as total
                    from trd_coupons_recevied as a

                    where a.hupu_uid ='.$hupuUid.'
                    and a.status = 1

                    and \''.$time.'\'> a.etime';
        }
        elseif($type == "use")
        {
            $lgys_sql = 'select count(a.id) as total
                    from trd_coupons_recevied as a
                    where a.hupu_uid ='.$hupuUid.'
                    and a.status = 2
                    ';
        }
        else
        {
            return false;
        }

        $connection = Doctrine_Manager::getInstance()->getConnection('trade');
        $searchDataList = $connection->execute($lgys_sql);
        $results = $searchDataList->fetchAll(PDO::FETCH_ASSOC);

        $connection->close();

        return $results;
    }

    public static function getCountByActivityidUid($activity_id,$uid)
    {
        $count = self::getInstance()->createQuery()
                 ->where('activity_id = ?',$activity_id)
                 ->andWhere('hupu_uid = ?',$uid)
                 ->count();
        return $count;
    }

    public static function getCouponByActivityidUid($activity_id,$uid)
    {
        return self::getInstance()->createQuery()
            ->where('activity_id = ?',$activity_id)
            ->andWhere('hupu_uid = ?',$uid)
            ->execute();
    }

    public static function getCouponByUid($uid)
    {
        return self::getInstance()->createQuery()
            ->andWhere('hupu_uid = ?',$uid)
            ->execute();
    }

    public static function GetMyCoupons($uid,$page=1,$pagesize=10)
    {
        $offset = ($page - 1) * $pagesize;
        $lgys_sql = 'select td.account,td.pass,td.recevied_date,ac.title,ac.exchange_type,ac.integral,ac.gold,ac.img_path,ac.start_date,ac.expiry_date,ac.limits,ac.content,ac.total,ac.recevied,ac.id
                    from trd_coupons_recevied as td
                    left join trd_activity as ac
                    on td.activity_id = ac.id
                    where td.hupu_uid = '.$uid.' and ac.type = 0
                    order by td.id desc
                    limit '.$offset.','.$pagesize;

        $connection = Doctrine_Manager::getInstance()->getConnection('trade');
        $searchDataList = $connection->execute($lgys_sql);
        $results = $searchDataList->fetchAll(PDO::FETCH_ASSOC);
        $connection->close();
        return $results;
    }


    # 查看已领取的总数
    public static function getReceiveCount($activity_id=null,$type=0)
    {
        if(empty($activity_id)) return false;

        $query =  self::getInstance()->createQuery()
            ->where('activity_id = ?',$activity_id);
        if( $type == 1 )
        {
            $query->andWhere('status = ?',1);
        }
        return $query->count();
    }

    # 查看已领取的列表
    public static function getReceiveList($activity_id=null,$offset=0,$limit=30,$type=0)
    {
        if(empty($activity_id)) return false;
        $query = self::getInstance()->createQuery()
            ->where('activity_id = ?',$activity_id);
        $query->whereIn('status',array(1,2)); 
        return $query->offset($offset)
            ->limit($limit)
            ->fetchArray();
    }


    # 通过后台发放至账户
    public static function receiveByBackend(TrdLipinkaCard $card)
    {
        if(empty($card)) return false;
        $row = self::getInstance()
            ->createQuery()
            ->where('root_type = 1')
            ->where('account = ?',$card->getAccount())
            ->fetchOne();
        if(!empty($row)) return false;
        $row = new TrdCouponsRecevied();
        $row->root_type = 1;
        $row->type = 1;
        $row->list_id = $card->getLipinkaId();
        $row->account = $card->getAccount();
        $row->stime = $card->getStime();
        $row->etime = $card->getEtime();
        $row->hupu_uid = $card->getUserId();
        $userinfo  = TrdAccountTable::getByHupuId($card->getUserId());
        if(!empty($userinfo)) $row->hupu_username = $userinfo->hupu_username;
        $row->recevied_date = time();
        $row->status = 1;
        $row->save();
        return true;
    }

    #我的礼品列表
    public static function getMyCouponsList($hupuUid, $type = null, $status = 'now', $page = 1, $limit = 20)
    {
        $time  = time();
        $offset = ($page - 1) * $limit;

        $sql = 'SELECT a.*,b.img_path,b.title,b.mart,b.receive_url
            FROM trd_coupons_recevied as a LEFT JOIN trd_activity b ON a.activity_id=b.id
            WHERE a.hupu_uid=' . $hupuUid;
        if (null !== $type && ('' !== $type)) {
            $type = (int) $type;
            switch ($type) {
                case 0:
                    $sql .= ' AND a.root_type=0';
                    break;
                case 1:
                    $sql .= ' AND a.root_type=1';
                    break;
                case 2:
                    $sql .= ' AND a.root_type=2';
                    break;
                default:
                    $sql .= ' AND a.root_type IN (0,1,2)';
            }
        }
        if ('now' == $status) {
            $sql .= ' AND a.status=1 AND \'' . $time . '\'<= a.etime';
        } elseif ('over' == $status) {
            $sql .= ' AND a.status=1 AND \'' . $time . '\'> a.etime';
        } elseif ('use' == $status) {
            $sql .= ' AND a.status=2';
        }
        $sql .= ' ORDER BY a.recevied_date DESC,a.id DESC LIMIT ' . $offset . ',' . $limit;

        $connection = Doctrine_Manager::getInstance()->getConnection('trade');
        $searchDataList = $connection->execute($sql);
        $results = $searchDataList->fetchAll(PDO::FETCH_ASSOC);
        $connection->close();
        return $results;
    }
}