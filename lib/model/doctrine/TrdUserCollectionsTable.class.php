<?php

/**
 * TrdUserCollectionsTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdUserCollectionsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TrdUserCollectionsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdUserCollections');
    }

    public static function getColloectionByUid($hupu_uid,$collection_id,$type = 0)
    {
        $query = self::getInstance()
            ->createQuery('t')
            ->andWhere("t.hupu_uid = ?",$hupu_uid)
            ->andWhere("t.collection_id = ? ",$collection_id);

        if($type)
        {
            $query->andWhere("t.type = ? ",$type);
        }

        return $query->fetchOne();
    }

    public static function getColloectionByUidId($hupu_uid, $id)
    {
        $query = self::getInstance()
            ->createQuery('t')
            ->andWhere("t.hupu_uid = ?",$hupu_uid)
            ->andWhere("t.id = ? ",$id);
        return $query->fetchOne();
    }

    public static function getMyColloection($hupu_uid,$types=array(),$page=1,$pagesize=12 )
    {
        $offset = ($page - 1)*$pagesize;
        $query = self::getInstance()
            ->createQuery('t')
            ->andWhere("t.hupu_uid = ?",$hupu_uid);
        if($types)
        {
            $query->andWhere("t.type IN ( '".implode("','",$types)."' ) ");
        }
        $query->offset($offset);
        $query->limit($pagesize);
        $query->orderBy('t.created_at DESC');
        return $query->execute();
    }

    public static function getMyColloectionCount($hupu_uid,$types=array())
    {
        $query = self::getInstance()
            ->createQuery('t')
            ->select("count(1) as total")
            ->andWhere("t.hupu_uid = ?",$hupu_uid);
        if($types)
        {
            $query->andWhere("t.type IN ( '".implode("','",$types)."' ) ");
        }
        return $query->fetchOne();
    }

    public static function getGroupCollectionById($hupu_uid, $groupon_id)
    {
        $query = self::getInstance()
            ->createQuery('t')
            ->andWhere("t.hupu_uid = ?",$hupu_uid)
            ->andWhere("t.collection_id = ? ", $groupon_id)
            ->andWhere("t.type = 'groupon'");
        return $query->fetchOne();
    }

}
