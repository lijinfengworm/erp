<?php

/**
 * trdShaiwuProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class trdShaiwuProduct extends BasetrdShaiwuProduct
{
    private $category_id = 13;          //晒物积分类型
    # 所有类型
    public static $_type = array(
        0 => '未选择',
        1 => '海淘晒单',
        2 => '运动鞋',
        5 => '国内晒物',
        3 => '攻略',
        4 => '经验',
        99 => '其他',
    );

    # 是否精华
    public static $_isHot = array(
        0 => '普通',
        1 => '精华',
    );

    // 状态
    public static $_status = array(
        0 => '待审核',
        1 => '已通过',
        2 => '已退回',
        3 => '已删除',
    );

    # 获取晒物内容
    public function content()
    {
        return $this->getContent()->content;
    }

    public function postInsert($event)
    {
        if ($this->getStatus() == 1) {
            $this->shaiwuSuccess();

            $message = array(
                'id' => $this->getId(),
                'type' => 'create',
                'channelType' => 'shaiwu'
            );
            $this->sendMqMessage($message);
        }

        parent::postInsert($event);

    }

    public function preUpdate($event)
    {
        $new = $this->getModified();
        $modified = array_keys($new);

        if ($this->getStatus() == 1) {
            $goldFields = array('gold','status');
            if (array_intersect($goldFields, $modified)) {#加金币
                $this->shaiwuSuccess();
                $this->getContentImg();
            }

            $updateFields = array(
                'title',
                'root_id',
                'children_id',
                'tag_ids',
                'is_hot',
                'publish_time',
                'brand_id',
                'type',
                'status',
                'activity_id',
                'rank'
            );
            if (array_intersect($updateFields, $modified)) {#消息队列
                $message = array(
                    'id' => $this->getId(),
                    'type' => 'update',
                    'channelType' => 'shaiwu',
                    'modified' => $modified
                );
                $this->sendMqMessage($message);
            }
        }

        parent::preUpdate($event);
    }

    public function postDelete($event)
    {
        $message = array(
            'id' => $this->getId(),
            'type' => 'delete',
            'channelType' => 'shaiwu'
        );
        $this->sendMqMessage($message);
        parent::postDelete($event);
    }

    public function preSave($event) {
        $new = $this->getModified();

        if ($this->isNew() || isset($new['hits'])){
            //获取rank的公式
            $this->setRank($this->getTrueRank());
        }
        parent::preSave($event);
    }

    #送金币
    private function shaiwuSuccess()
    {
        if ($authorId = $this->getAuthorId()) {
            $authorName = $this->getAuthorName();
            $history = trdAccountHistoryTable::getHistoryByActionid($authorId, $this->getId(), array($this->category_id));
            if (empty($history)) {

                $type = 4;
                $gold = $this->getGold();
                if ($this->getIsHot() == 0) {
                    $integral = 300;
                    $explanation = '普通晒物';
                } else {
                    $integral = 500;
                    $explanation = '精品晒物';
                }

                $trdAccount = TrdAccountTable::getByHupuId($authorId);

                $beforeIntegral = $trdAccount->getIntegral();
                $beforeGold = $trdAccount->getGold();
                $trdAccount->setIntegral($trdAccount->getIntegral() + $integral);
                $trdAccount->setIntegralTotal($trdAccount->getIntegralTotal() + $integral);
                $trdAccount->setGold($trdAccount->getGold() + $gold);
                $trdAccount->setGoldTotal($trdAccount->getGoldTotal() + $gold);

                $trdAccount->setShaiwuIntegral($trdAccount->getShaiwuIntegral() + $integral);
                $trdAccount->setShaiwuGold($trdAccount->getShaiwuGold() + $gold);

                $afterIntegral = $trdAccount->getIntegral();
                $afterGlod = $trdAccount->getGold();
                $trdAccount->save();

                $trdAccountHistory = new TrdAccountHistory();
                $trdAccountHistory->setHupuUid($authorId);
                $trdAccountHistory->setHupuUsername($authorName);
                $trdAccountHistory->setCategory($this->category_id);
                $trdAccountHistory->setType($type);
                $trdAccountHistory->setExplanation($explanation);
                $trdAccountHistory->setSource('pc');
                $trdAccountHistory->setActionid($this->id);
                $trdAccountHistory->setIntegral($integral);
                $trdAccountHistory->setGold($gold);

                $trdAccountHistory->setBeforeIntegral($beforeIntegral);
                $trdAccountHistory->setBeforeGold($beforeGold);
                $trdAccountHistory->setAfterIntegral($afterIntegral);
                $trdAccountHistory->setAfterGold($afterGlod);
                $trdAccountHistory->save();
            }
        }
    }

    public function sendMqMessage($message)
    {
        $amqpParams = sfConfig::get("app_mabbitmq_options_shihuo");
        $connection = new AMQPConnection($amqpParams['params']['host'], $amqpParams['params']['port'], $amqpParams['params']['user'], $amqpParams['params']['pass'], $amqpParams['params']['vhost']);
        $channel = $connection->channel();
        $arguments = array(
            "x-dead-letter-exchange" => array("S", "amq.topic"),
            "x-message-ttl" => array("I", 2000),
            "x-dead-letter-routing-key" => array("S", "shihuo.shaiwu.detail")
        );
        $channel->queue_declare('shaiwu_deferred', false, true, false, false, false, $arguments);

        $msg = new AMQPMessage(json_encode($message));
        $channel->basic_publish($msg, '', 'shaiwu_deferred');

    }

    /*晒物热点值计算*/
    private  function getTrueRank(){
        $date = $this->getPublishTime();
        $hits = $this->getHits();

        $date_point = (strtotime($date) - strtotime(date('2015-01-01'))) / (86400/2);
        $click_point = log($hits,3);

        if($click_point <= 0) $click_point = 0;
        return round(($date_point+$click_point),2);
    }

    //取出内容中的图片
    private  function getContentImg(){
        $content = $this->content();
        $pattern="/<[img|IMG][^>]*?src=[\'|\"](.*?)[\'|\"][^>]*?>/";
        preg_match_all($pattern ,$content, $match);

        $img_attr = !empty($match[1]) ? $match[1] : array();

        foreach($img_attr as $key=>&$img){
            if (stristr($img, '.gif')) { //除去gif
                unset($img_attr[$key]);
                continue;
            }
            if (stristr($img, '?')) {   //除去后缀
                $img = strstr($img, '?', true);
            }
        }

        $img_attr = array_slice($img_attr, 0 , 5);
        $this->img_attr = json_encode($img_attr);

        return ;
    }
}

