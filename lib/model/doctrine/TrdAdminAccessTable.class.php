<?php

/**
 * TrdAdminAccessTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdAdminAccessTable extends Doctrine_Table
{

    private static $error = null;
    /**
     * Returns an instance of this class.
     *
     * @return object TrdAdminAccessTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdAdminAccess');
    }



    /**
     * 绑定权限
     */
    public static function batchAuthorize($addauthorize, $roleid = 0) {
        if (empty($addauthorize)) {
            self::$error = '没有需要授权的权限！';
            return false;
        }
        if (empty($roleid)) {
            if (empty($addauthorize[0]['role_id'])) {
                self::$error = '角色ID不能为空！';
                return false;
            }
            $roleid = $addauthorize[0]['role_id'];
        }
        //删除旧的权限
        self::getInstance()->createQuery()->delete()->where("role_id = ?", $roleid)->execute();
        foreach ($addauthorize as $k => $v) {
            $_access = new TrdAdminAccess();
            $_access->setRoleId($v['role_id']);
            $_access->setMenuId($v['menu_id']);
            $_access->setController($v['controller']);
            $_access->setActionName($v['action_name']);
            $_access->setChildAttr($v['child_attr']);
            $_access->save();
        }
        return true;
    }


    /**
     * 获取角色所有的权限
     */
    public static function getAccessList($role_ids) {
        $access_list =  self::getInstance()->createQuery()
            ->select('*')
            ->andWhere("role_id in (" . $role_ids . ") ")
            ->fetchArray();
        if(!empty($access_list)) {
            foreach($access_list as $k=>$v) {
                if(!empty($v['child_attr'])) {
                    $access_list[$k]['child_attr'] = unserialize($v['child_attr']);
                }
            }
        }
        return $access_list ? $access_list : array();
    }


    /**
     * 获取角色单个的权限
     */
    public static function getOneAccess($role_id,$controller,$action) {
        $accessData =  self::getInstance()->createQuery()
            ->select('*')
            ->andWhere("role_id  = ?",$role_id)
            ->andWhere('controller = ?',$controller)
            ->andWhere('action_name = ?',$action)
            ->fetchOne();
        if(!empty($accessData)) {
            $accessData = $accessData->toArray();
            if(!empty($accessData['child_attr'])) {
                $accessData['child_attr'] = unserialize($accessData['child_attr']);
            }
        }
        return $accessData ? $accessData : array();
    }


    /**
     * 判断当前菜单是否正在使用
     */
    public static function isMenuUse($menu_id) {
        $data = self::getInstance()
            ->createQuery()
            ->select('id')
            ->andwhere("menu_id = ?",$menu_id)
            ->fetchOne();
        if(empty($data)) return false;
        return true;
    }



    /**
     * 获取权限结点
     */
    public static function getRoleAccess($role_id) {
        $result = array();
        $data = self::getInstance()
            ->createQuery()
            ->select('menu_id,child_attr')
            ->andwhere("role_id = ?",$role_id)
            ->fetchArray();
        if(isset($data)) {
            foreach ($data as $k => $v) {
                $result[$v['menu_id']] = $data[$k];
                if(!empty($data[$k]['child_attr'])) {
                    $result[$v['menu_id']]['child_attr'] = unserialize($data[$k]['child_attr']);
                }
            }
        }
        return $result;
    }





    public static function getError() {
        return self::$error;
    }








}