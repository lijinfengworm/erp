<?php

/**
 * TrdOrderTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdOrderTable extends Doctrine_Table
{
    //快递类型
    //0申通 1顺丰 2EMS 3圆通 4韵达 5中通 6天天 7汇通 8宅急送 9其他
    public static $domestic_express_type  = array(
        0 => '申通',
        1 => '顺丰',
        2 => 'EMS',
        3 => '圆通',
        4 => '韵达',
        5 => '中通',
        6 => '天天',
        7 => '汇通',
        8 => '宅急送',
        28 => '其他'
    );

    /**
     * Returns an instance of this class.
     *
     * @return object TrdOrderTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdOrder');
    }

    public static function  importFormatAttr($attr,$format = 'txt') {
        if($format == 'txt') {
            $content = array();
            unset($attr['name']);
            unset($attr['price']);
            unset($attr['img']);
            $_str = '';
            $i = 0;
            foreach ($attr as $kk=>$vv){
                if($i == 0) {
                    $_str = $vv;
                } else {
                    $_str .=' '.$vv;
                }
                $i++;
            }
            return $_str;
        }
    }

    public function orders($order_number, $title, $start_time, $end_time) {
        $q = $this->createQuery('c')->orderBy('c.id desc');
        if ($order_number)
            $q->andWhere('c.order_number = ?', $order_number);
        if ($title)
            $q->andWhere('c.title LIKE ?', '%' . $title . '%');
        if ($start_time)
            $q->andWhere('c.order_time >= ?', $start_time);
        if ($end_time)
            $q->andWhere('c.order_time <= ?', $end_time);
        return $q;
    }

    public function summaryReport($order_number, $title, $start_time, $end_time) {
        $q = $this->createQuery()->select('SUM(total_price) as total_price,COUNT(*) as orders,COUNT(*) as number,source,order_number');
        $q->where('pay_status != ?','0');
        if ($order_number)
            $q->andWhere('order_number = ?', $order_number);
        if ($title)
            $q->andWhere('title LIKE ?', '%' . $title . '%');
        if ($start_time)
            $q->andWhere('order_time >= ?', $start_time);
        if ($end_time)
            $q->andWhere('order_time <= ?', $end_time);
        $q->groupBy('source');
        return $q->fetchArray();
    }
    
    public function summaryReport1($order_number, $title, $start_time, $end_time) {
        $q = $this->createQuery()->select('source,order_number,count(*) as number,business');
        $q->where('pay_status != ?','0');
        if ($order_number)
            $q->andWhere('order_number = ?', $order_number);
        if ($title)
            $q->andWhere('title LIKE ?', '%' . $title . '%');
        if ($start_time)
            $q->andWhere('order_time >= ?', $start_time);
        if ($end_time)
            $q->andWhere('order_time <= ?', $end_time);
        $q->groupBy('order_number');
        return $q->fetchArray();
    }
    /**
     * 按商城统计
     */
    public function summaryReport2($order_number, $title, $start_time, $end_time)
    {
        $q = $this->createQuery()->select('SUM(total_price) as total_price,COUNT(*) as orders,COUNT(*) as number,business,order_number');
        $q->where('pay_status != ?','0');
        if ($order_number)
            $q->andWhere('order_number = ?', $order_number);
        if ($title)
            $q->andWhere('title LIKE ?', '%' . $title . '%');
        if ($start_time)
            $q->andWhere('order_time >= ?', $start_time);
        if ($end_time)
            $q->andWhere('order_time <= ?', $end_time);
        $q->groupBy('business');
        return $q->fetchArray();
    }

    /**
     * 快速下单统计
     */
    public function summaryReport3($order_number, $title, $start_time, $end_time)
    {
        $q = $this->createQuery()->select('COUNT(*) as number,order_number,source');
        $q->where('pay_status != ?','0');
        if ($order_number)
            $q->andWhere('order_number = ?', $order_number);
        if ($title)
            $q->andWhere('title LIKE ?', '%' . $title . '%');
        if ($start_time)
            $q->andWhere('order_time >= ?', $start_time);
        if ($end_time)
            $q->andWhere('order_time <= ?', $end_time);
        $q->andWhere('mobile > ?', 0);
        $q->groupBy('source');
        return $q->fetchArray();
    }

	public function getMaxOrderNewsIds()
    {
        $info = $this->createQuery()
            ->select('count(*) AS total,news_id')
            ->andWhere('news_id > 0')
            ->groupBy("news_id")
            ->orderBy('total desc')
            ->limit("35")
            ->execute()
            ->toArray();

        $ids = array();
        foreach($info AS $key => $val)
        {
            $ids[] = $val['news_id'];
        }
        return $ids;
    }

    /*获取订单信息*/
    public  function getOrderinfo($order_number,$product_id = null){
        if(!$order_number) return '';

        $query = $this->createQuery()
            ->select('*')
            ->where('order_number = ?',$order_number);
        if($product_id) $query = $query->andWhere('product_id =?',$product_id);
        return $info = $query->fetchArray();
    }

    /*获取交易完成的订单信息*/
    public function getOrderSuccessinfo($order_number, $product_id, $goods_id, $hupu_uid){
        if(!$order_number || !$product_id || !$goods_id) {
            return false;
        }
        
        $query = $this->createQuery()
            ->where('order_number = ?', $order_number)
            ->addWhere('product_id = ?', $product_id)
            ->addWhere('gid = ?', $goods_id)
            ->andWhere('hupu_uid = ?', $hupu_uid)
            ->addWhere('status = 2')
            ->addWhere('pay_status = 1')
            ->addWhere('is_comment = 0');
        return $info = $query->execute();
    }

    /*查看某用户是否有订单*/
    public static function  isHasOrder($hupu_uid){
       $count =  self::getInstance()->createQuery()->where('hupu_uid = ?',$hupu_uid)->count();

       if($count)
           return true;
       else
           return false;
    }

}