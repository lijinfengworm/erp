<?php

/**
 * KllMarketingActivityTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class KllMarketingActivityTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object KllMarketingActivityTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('KllMarketingActivity');
    }

    public static function houtaGetActivity($offset=0 ,$limit =15)
    {
        $query = self::getInstance()->createQuery()
            ->limit($limit)
            ->offset($offset)
            ->orderBy('id desc');
        return $query->fetchArray();
    }

    public static function houtaGetActivityCount()
    {

        $query = self::getInstance()->createQuery()
            ->orderBy('id desc');
        return $query->count();
    }
    //获得正在进行的活动 
    public static function getRunningActivity($stime, $etime){
        $belongs_act = self::getInstance()->createQuery()->select('group_id')
            ->addwhere('status = ?', 3)
            ->addwhere('stime <= ?', $stime)
            ->addWhere('etime >= ?', $etime)
            ->fetchArray();
        return $belongs_act;
    }
    //获取全场活动
    public static function getMarketingAudience()
    {
        $data  = CacheModel::getCache();
        if(empty($data))
        {
            $time = time();
            $data = self::getInstance()->createQuery()->select('title,url,type,mode,scope,attr1,attr2,stime,etime,intro')
                ->where('scope = ?', 1)
                ->addwhere('status = ?', 3)
                ->addwhere('stime <= ?', $time)
                ->addWhere('etime >= ?', $time)
                ->fetchArray();
            CacheModel::setCache($data,3);
        }
        return $data;
    }

    //根据id获取活动
    public static function getMarketingByIds($ids)
    {
        if (empty($ids)) return false;
        $time = time();
        $belongs_act = self::getInstance()->createQuery()->select('title,url,type,mode,scope,attr1,attr2,stime,etime,intro')
            ->whereIn('id', (array)$ids)
            ->addwhere('status = ?', 3)
            ->addwhere('stime <= ?', $time)
            ->addWhere('etime >= ?', $time)
            ->fetchArray();
        return $belongs_act;
    }

    //是否有在线活动
    public static function isOnlineActivity()
    {
        $time = time();
        $audience = self::getInstance()->createQuery()->select('id')
            ->addwhere('status = ?', 3)
            ->addwhere('stime <= ?', $time)
            ->addWhere('etime >= ?', $time)
            ->limit(1)
            ->fetchArray();

        if($audience){
            return true;
        }else{
            return false;
        }
    }

    # 获取全场活动（缓存）
    public static function getAudienceStatus()
    {
        $data = CacheModel::getCache();
        if(empty($data))
        {
            $time = time();
            $audience = self::getInstance()->createQuery()->select('title,url,mode,scope,attr1,attr2,stime,etime,intro')
                ->where('scope = ?', 1)
                ->addwhere('status = ?', 3)
                ->addwhere('stime <= ?', $time)
                ->addWhere('etime >= ?', $time)
                ->limit(1)
                ->fetchArray();
            if(!empty($audience)){
                $data = 'yes';
            }else{
                $data = 'no';
            }
            CacheModel::setCache($data,60);
        }
        return $data;
    }

    public static function outputAcitivityTitle(array $activity)
    {
        $aIds = '';
        foreach($activity as $v)
        {
            if(!empty($v['attr1']) && !empty($v['attr2']))
            {
                if($v['mode'] == 1 || $v['mode'] == 2)
                {
                    $aIds .= "{$v['intro']},";
                }
            }
        }
        $aIds = trim($aIds,',');
        return $aIds;
    }
}