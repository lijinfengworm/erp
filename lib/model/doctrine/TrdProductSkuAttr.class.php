<?php

/**
 * TrdProductSkuAttr
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class TrdProductSkuAttr extends BaseTrdProductSkuAttr
{
    public function save(Doctrine_Connection $conn = null)
    {
        $modifiedFields = $this->getModified(true);
        parent::save($conn);

        $syncKeyArray = array('attr');
        if (!$this->isNew() && array_intersect($syncKeyArray, array_keys($modifiedFields))) {
            $old_attr = json_decode($this->getAttr(), true);
            if ($old_attr && !empty($old_attr['image'])){
                $this->syncGoods($old_attr);//同步到海淘商品库
            }
        }
        return $this->getId();
    }

    private function syncGoods($old_attr)
    {
        //更新goods表状态
        TrdHaitaoGoodsTable::updateStatusByProductId($this->getProductId());
        $product_info = TrdProductAttrTable::getInstance()->find($this->getProductId());
        $low_price = $low_gid = 0;
        $json_string = array();
        if (empty($old_attr['content'])) return;
        foreach($old_attr['content'] as $k=>$v){
            $v['stock'] = empty($v['stock']) ? 0 : $v['stock'];
            $goodsId = tradeCommon::getDaigouPrefix('', $product_info->getBusiness()) . $v['name'];
            $attr_str = array();
            $goods = TrdHaitaoGoodsTable::getInstance()->findOneByGoodsId($goodsId);
            if (!$goods) {
                $goods = new TrdHaitaoGoods();
            }
            $goods->setProductId($this->getProductId());
            $goods->setGoodsId($goodsId);
            $goods->setTitle($product_info->getTitle());

            $attr_str['ASIN'] = $v['name'];
            $attr_str['ItemAttributes'] = array(
                'Title'=>$product_info->getTitle(),
                'UPC'=>$v['name'],
                'EAN'=>'',
                'Brand'=>'Nike',
                'ProductGroup'=>'Shoes',
            );
            $attr_str['MediumImage']['URL'] = $v['img'];
            $attr_str['LargeImage']['URL'] = $v['img'];
            $attr_str['Offers']['Offer']['Merchant']['Name'] = TrdProductAttrTable::$zhifa_business;
            $attr_str['Offers']['Offer']['OfferListing']['Price'] = array(
                'Amount'=>$v['price'],
                'CurrencyCode'=>$v['code'],
                'FormattedPrice'=>'¥'.$v['price'],
            );
            $attr_str['Offers']['Offer']['OfferListing']['IsEligibleForSuperSaverShipping'] = 1;
            $attr_str['VariationAttributes']['VariationAttribute'] = array(
                0=>array('Name'=>'Size', 'Value'=>$v['Size']),
                1=>array('Name'=>'Color', 'Value'=>$v['Color']),
            );
            $attr_str['ImageSets']['ImageSet'][0]['LargeImage']['URL'] = $old_attr['image'][$v['Color']]['img_path1'];
            if ($old_attr['image'][$v['Color']]['img_path2']) $attr_str['ImageSets']['ImageSet'][1]['LargeImage']['URL'] = $old_attr['image'][$v['Color']]['img_path2'];
            if ($old_attr['image'][$v['Color']]['img_path3']) $attr_str['ImageSets']['ImageSet'][2]['LargeImage']['URL'] = $old_attr['image'][$v['Color']]['img_path3'];
            if ($old_attr['image'][$v['Color']]['img_path4']) $attr_str['ImageSets']['ImageSet'][3]['LargeImage']['URL'] = $old_attr['image'][$v['Color']]['img_path4'];
            if ($old_attr['image'][$v['Color']]['img_path5']) $attr_str['ImageSets']['ImageSet'][4]['LargeImage']['URL'] = $old_attr['image'][$v['Color']]['img_path5'];
            $goods->setCode($v['name']);
            $goods->setTotalNum($v['stock']);
            $goods->setStatus(0);
            $goods->setAttr(json_encode($attr_str));
            $goods->save();

            $old_attr['content'][$k]['gid'] = $goods->getId();
            if ($v['stock'] > 0){
                if($low_price == 0){
                    $low_gid = $goods->getId();
                    $low_price = $v['price'];
                } elseif ($v['price'] < $low_price){
                    $low_price = $v['price'];
                    $low_gid = $goods->getId();
                }
            } else {
                unset($old_attr['content'][$k]);
            }
        }
        $json_string['attr'] = $old_attr['attr'];
        $json_string['content'] = $old_attr['content'];
        $json_string['Size'] = $old_attr['Size'];
        $json_string['Color'] = $old_attr['Color'];

        if ($low_gid) {
            $product_info->setGoodsId($low_gid);
        }
        $product_info->setExchange($low_price);
        $product_info->setPrice($low_price);
        $attr = base64_encode(gzcompress(json_encode($json_string)));
        $product_info->setContent($attr);
        $product_info->setCrawlFlag(0);
        if (count($old_attr['content']) == 0){
            $product_info->setShowFlag(0);
        }else{
            $product_info->setShowFlag(1);
        }
        $product_info->setLastCrawlDate(time());
        $product_info->save();
    }
}
