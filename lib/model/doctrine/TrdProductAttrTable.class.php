<?php

/**
 * TrdProductAttrTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdProductAttrTable extends Doctrine_Table
{

    public static $SUCC_PURCHASE = 0;  //审核成功
    public static $NOT_PURCHASE = 1;  //等待审核
    public static $EDIT_PURCHASE = 2;  //打回重新编辑
    public static $REFUSE_PURCHASE = 3;  //彻底拒绝
    public static $zhifa_business = '香港仓库直发';  //香港仓库直发
    public static $zhifa_shihuo_business = '识货上海仓库直发';  //识货上海仓库直发
    public static $zhifa_ebay_business = 'ebay海外精选';  //ebay海外精选
    public static $zhifa_business_arr = array('香港仓库直发','识货上海仓库直发','ebay海外精选');
    public static $self_business_arr = array('香港仓库直发','识货上海仓库直发');//自营数组


    private static $ORDER_TYPE = array(
        't.publish_date desc',
        't.hits desc',
        'price asc',
        'price desc'
    );

    /**
     * Returns an instance of this class.
     *
     * @return object TrdProductAttrTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdProductAttr');
    }


    public static function getAuditDateString($date = '') {
        if(empty($date)) return ' - ';
        return date('Y-m-d H:i:s',$date);
    }

    public static function getAuditMessageString($message = '') {
        if(empty($message)) return ' - ';
        return $message;
    }

    public static function getPurchaseUidString($user = '') {
        if(empty($user)) return ' - ';
        return $user;
    }



    /**
     * @param $show_flag  抓取状态
     * @param string $type  显示类型
     * @return 具体抓取状态
     * About 梁天
     */
    public static function getFormatShowFlag($show_flag,$type = 'string'){
       $string = array(0=>'未抓取',1=>'已抓取');
       $html_one = array(0=>'<span class="c-red">未抓取</span>',1=>'<span class="c-green">已抓取</span>');
       $type = $$type;
       if(!empty($type[$show_flag])) return $type[$show_flag];
       return false;
    }


    /**
     * @param $show_flag  审核状态
     * @param string $type  显示类型
     * @return 具体审核状态
     * About 梁天
     */
    public static function getFormatPurchaseFlag($flag,$type = 'string'){
        $string = array(0=>'已审核',1=>'待审核',2=>'退回重新编辑',3=>'被拒绝');
        $html_one = array(0=>'<span class="c-green">已审核</span>',1=>'<span class="c-ccc">待审核</span>',
            2=>'<span class="c-blue">退回重新编辑</span>',
            3=>'<span class="c-red">被拒绝</span>');
        $type = $$type;
        if(!empty($type[$flag])) return $type[$flag];
        return false;
    }




    public static function getRootTypeString($_root_id){
        switch($_root_id){
            case 1:
                return '运动户外';
                break;
            case 2:
                return '服装服饰';
                break;
            case 3:
                return '电脑数码';
                break;
            case 4:
                return '家居生活';
                break;
            case 5:
                return '食品保健';
                break;
            case 7:
                return '其他分类';
                break;
            case 49:
                return '鞋靴';
                break;
            case 50:
                return '箱包手袋';
                break;
            case 51:
                return '饰品手表';
                break;
            case 52:
                return '办公设备';
                break;
            case 53:
                return '图书音像';
                break;
            default:
                return '未知分类';
                break;
        }
    }




    /**
     * 判断该代购是否关联有优惠新闻
     */
    public static function isCheckNews($news_id) {
        if(self::getInstance()->findOneByNewsId($news_id)) return true;
        return false;
    }



    /**
     * 通过自定义条件获取全部的数据
     * Abuout 梁天
     */
    public static function  getAllProduct($bind = array()) {
        $data = self::getInstance()->createQuery();
        //select
        if (!empty($bind['select'])){
            $data->select($bind['select']);
        } else {
            $data->select("*");
        }
        //where 简单判断  如果复杂 建议新写函数
        if(!empty($bind['where']) && count($bind['where']) > 0) {
            foreach($bind['where'] as $k=>$v) {
                $data->addWhere($v);
            }
        }
        //order
        if (!empty($bind['order'])){
            $data->orderBy($bind['order']);
        } else {
            $data->orderBy('id desc');
        }
        //limit
        if (!empty($bind['limit'])){
            $data->limit($bind['limit']);
        }

        if(!empty($bind['offset'])) {
            $data->offset($bind['offset']);
        }


        $data =  $data->fetchArray();
        if(!empty($bind['is_count'])) {
            $data = $data[0]['num'];
        }
        return $data;
    }




    public function getOneByNewsId($news_id,$field = '') {
        $info = self::getInstance()
            ->createQuery()
            ->select('*')
            ->addWhere('news_id = ?',$news_id)
            ->andWhere('status = 0')
           ->fetchOne();
        if(empty($info)) return false;
        if($is_array) {
            $info = $info->toArray();
            if (empty($field)) return $info;
            return $info[$field];
        }
        return $info;
    }



    public function getProductDetail($id){
        //$time = time();
        $objs = self::getInstance()->createQuery('t')
            ->where('t.id = ?',(int)$id)
            ->andWhere('t.status = 0')
            ->andWhere('t.show_flag = 1')
//            ->andWhere('t.start_date = 0 or (t.start_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
//            ->andWhere('t.end_date = 0 or (t.end_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
            ->fetchOne();

        return $objs;
    }
    
    public static function myListQuery() {
        $query = self::getInstance()->createQuery('m')
                ->where('m.status = 0')
                ->orderBy('m.publish_date desc');
        return $query;
    }
    
    /*
     * 更新显示状态
     */
    public static function displayIndex($id=0,$type) {
        $queryResult = self::getInstance()->createQuery('m')
                        ->update()
                        ->set('m.display', $type)
                        ->where('m.id =?', $id)
                        ->execute();
        return $queryResult;
    }
    
    /*
     * 识货海淘代购分页获取
     */
    public static function getDaigouListInfoByPage($page = 1, $pagesize = 30, $fifter_id = 0, $root_id = 0, $children_id = 0, $flag = false, $order = 0, $date = '')
    {
        $query =  self::getInstance()->createQuery('t')
                ->where('t.status = 0')
                ->andWhere('t.show_flag = 1')
                ->andWhere('t.purchase_flag = 0')
                ->limit($pagesize)
                ->orderBy('t.publish_date desc, t.hits desc');

        $query = $query->orderBy(self::$ORDER_TYPE[$order]);

        if ($date) {
            $query->andWhere('t.publish_date < ?' , date('Y-m-d H:i:s', $date));
        } else {
            $query = $query->offset(($page - 1) * $pagesize);
        }

        if ($fifter_id) {
            $query = $query->andWhere('t.id != ?', $fifter_id);
        }
        if ($root_id) {
            $query = $query->andWhere('t.root_id = ?', $root_id);
        }
        if ($children_id) {
            $query = $query->andWhere('t.children_id = ?', $children_id);
        }
        if ($flag) {
            return  $query->count();
        }
        return  $query->execute();
    }

    // app代购获取数据
    public static function getDaigouListForApp($page = 1, $pagesize = 30, $sort = 0, $r = 0)
    {
        //$time = time();
        $query = self::getInstance()->createQuery('t')
            ->where('t.status = 0')
            ->andWhere('t.show_flag = 1')
            ->andWhere('t.purchase_flag = 0')
//            ->andWhere('t.start_date = 0 or (t.start_date !=0 && t.start_date < '.$time.' && t.end_date > '.$time.')')
//            ->andWhere('t.end_date = 0 or (t.end_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
            ->offset(($page - 1) * $pagesize)
            ->limit($pagesize);
        if ($sort) {
            switch($sort) {
                case 1:
                    $query->orderBy('t.publish_date DESC, t.hits DESC');
                    break;
                case 2:
                    $query->orderBy('t.hits DESC, t.publish_date DESC');
                    break;
                case 3:
                    $query->orderBy('t.price ASC, t.hits DESC');
                    break;
                case 4:
                    $query->orderBy('t.price DESC, t.hits DESC');
                    break;
                default:
                    $query->orderBy('t.publish_date DESC, t.hits DESC');
            }
        } else {
            $query->orderBy('t.publish_date DESC, t.hits DESC');
        }
        if ($r) {
            $query->andWhere('t.root_id = ?', $r);
        }
        return $query->execute();
    }

    /*
     * 识货海淘代购列表推荐
     */
    public static function getDaigouListRecommendInfo($days =1,$limit =10){
        //$time = time();
        return self::getInstance()->createQuery('t')
                ->select('t.title,t.url,t.price,t.exchange,t.freight,t.praise,t.img_path,t.goods_id,t.hits,t.content')
                ->where('t.status = 0')
                ->andWhere('t.show_flag = 1')
                ->andWhere('t.purchase_flag = 0')
//                ->andWhere('t.start_date = 0 or (t.start_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
//                ->andWhere('t.end_date = 0 or (t.end_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
                ->andWhere('t.publish_date>= ?',date('Y-m-d H:i:s', strtotime("-$days day")))
                ->limit($limit)
                ->orderBy('t.hits desc, t.id desc')
                ->fetchArray();
    }
    /*
     * 识货海淘代购详情推荐
     */
        public static function getDaigouDetailRecommendInfo($days =1,$limit =10,$fifter_id = 0,$root_id = 0,$children_id = 0,$display= false){
        //$time = time();
        $query =  self::getInstance()->createQuery('t')
                ->select('t.title,t.url,t.price,t.exchange,t.freight,t.praise,t.img_path,t.goods_id,t.hits,t.content,t.price')
                ->where('t.status = 0')
                ->andWhere('t.show_flag = 1')
                ->andWhere('t.purchase_flag = 0')
//                ->andWhere('t.start_date = 0 or (t.start_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
//                ->andWhere('t.end_date = 0 or (t.end_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
                ->andWhere('t.publish_date>= ?',date('Y-m-d H:i:s', strtotime("-$days day")))
                ->limit($limit)
                ->orderBy('t.hits desc, t.id desc');
        if ($fifter_id) $query = $query->andWhere('t.id != ?',$fifter_id);
        if ($root_id) $query = $query->andWhere('t.root_id = ?',$root_id);
        if ($children_id) $query = $query->andWhere('t.children_id = ?',$children_id);
        if ($display) $query = $query->andWhere('t.display = ?',1);
        return  $query->fetchArray();
    }

    public static function getProductByNow($limit=3,$order="timedesc")
    {
        //$time = time();
        $query =  self::getInstance()->createQuery('t')
            ->select('*')
            ->where('t.status = 0')
            ->andWhere('t.show_flag = 1')
            ->andWhere('t.purchase_flag = 0')
//            ->andWhere('t.start_date = 0 or (t.start_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
//            ->andWhere('t.end_date = 0 or (t.end_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
            ->limit($limit);

        if($order=="timedesc")
        {
            $query->orderBy('t.start_date desc');
        }

        return $query->execute();
    }

    public static function getProductByIds($ids,$condition = array())
    {
        $objs = self::getInstance()
            ->createQuery('t')
            ->andWhere("t.id in (" . join(",", $ids) . ") ")
            ->andWhere('t.status = 0')
            ->andWhere('t.show_flag = 1');

        if(isset($condition['select']) && $condition['select']) $objs = $objs->select($condition['select']);
        if(isset($condition['order']) && $condition['order']) $objs = $objs->orderBy($condition['order']);
        if(isset($condition['not_id'])  && $condition['not_id']) $objs = $objs->andWhere("t.id not in (" . join(",", $condition['not_id']) . ") ");
        if(isset($condition['arr']) && $condition['arr'])
            $objs = $objs->fetchArray();
        else
            $objs = $objs->execute();

        return $objs;
    }

    //TODO:: For SearchService服务化
    public static function getObjByIds($ids)
    {
        $objs = self::getInstance()
            ->createQuery('t')
            ->andWhere("t.id in (" . join(",", $ids) . ") ")
            ->orderBy("FIELD(`ID`,".trim(join(",", $ids)) . ')');
        $result = $objs->execute();
        return $result;
    }


    //获取一条数据
    public static function getOneById($id,$is_toArray = false,$field = '',$select = '*') {
        $query = self::getInstance()
            ->createQuery('t')
            ->select($select)
            ->where('t.status = 0')
            ->andWhere('t.show_flag = 1')
            ->andWhere('t.purchase_flag = 0')
            ->andWhere('t.id = ?',$id);
        $data =  $query->fetchOne();
        if(empty($data)) return false;
        if($is_toArray) {
            $data =  $data->toArray();
            if(!empty($field)) return $data[$field];
            return $data;
        }
        return $data;
    }


    public static  function getProductByHits($limit=4,$search = array())
    {
        //$time = time();

        $query = self::getInstance()->createQuery('t');
        if(!empty($search['root_id']))
        {
            $query->andWhere('t.root_id = ?',$search['root_id']);
        }
        if(!empty($search['children_id']))
        {
            $query->andWhere('t.children_id = ?',$search['children_id']);
        }
        if(!empty($search['day']))
        {
            $query->andWhere('t.publish_date>= ?', date('Y-m-d H:i:s', strtotime("-{$search['day']} day")));
        }

        $query->andWhere('t.status = 0')
            ->andWhere('t.show_flag = 1')
            ->andWhere('t.purchase_flag = 0')
//            ->andWhere('t.start_date = 0 or (t.start_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
//            ->andWhere('t.end_date = 0 or (t.end_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
            ->orderBy('hits desc')
            ->limit($limit);
        if(!empty($search['array']))
        {
            return $query->fetchArray();
        }
        else
        {
            return $query->execute();
        }

    }

    /*
     * 获取信息
     * 韩晓林
    */
    public  static  function getMessage($array = array()){
        if(isset($array['limit']))
            $limit = $array['limit'];
        else
            $limit = 30;

        if(isset($array['page']))
            $num = $array['page']*$limit;
        else
            $num = 0;

        if(isset($array['order']))
            $order = $array['order'];
        else
            $order = "publish_date DESC";

        $filter = empty($array['filter']) ? true : false;
        $objs = self::getInstance()->createQuery('t')->limit($limit)->offset($num)->orderBy($order);

        if(isset($array['select'])) $objs = $objs->select($array['select']);
        if(isset($array['ids']) && $array['ids']) $objs = $objs->andwhere("t.id  in (" . rtrim(join(",", $array['ids']),',') . ") ");
        if(isset($array['day'])) $objs = $objs->andWhere('t.publish_date>= ?',date('Y-m-d H:i:s', strtotime("-{$array['day']} day")));
        if(isset($array['root_id'])) $objs = $objs->andwhere('t.root_id = ?',$array['root_id']);
        if(isset($array['children_id'])) $objs = $objs->andwhere('t.children_id = ?',$array['children_id']);
        if(isset($array['brand_id'])) $objs = $objs->andwhere('t.brand_id = ?',$array['brand_id']);
        if(isset($array['not_id'])  && $array['not_id']) $objs = $objs->andWhere("t.id not in (" . join(",", $array['not_id']) . ") ");
        if($filter){
            $objs = $objs->andWhere('t.status = 0')->andWhere('t.show_flag = 1')->andWhere('t.purchase_flag = 0');  //条件后置,尽可能过滤最多的选项
        }

        if(isset($array['arr']))
            return $objs = $objs->fetchArray();
        else
            return $objs = $objs->execute();
    }
    /**
     * M站首页获取每日必淘
     */
    public static function getProductToHome()
    {
        //$time = time();
        $query =  self::getInstance()->createQuery('t')
            ->where('t.status = 0')
            ->andWhere('t.show_flag = 1')
//            ->andWhere('t.start_date = 0 or (t.start_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
//            ->andWhere('t.end_date = 0 or (t.end_date !=0 &&  t.start_date < '.$time.' && t.end_date > '.$time.')')
            ->andWhere('t.purchase_flag = 0')
            ->limit(30)
            ->orderBy('t.publish_date desc, t.hits desc');
        return $query->execute();
    }

    // 获取每日发布数据
    public static function getDaigouListByDay()
    {
        $time = date('Y-m-d');
        $sTime = $time . ' 00:00:00';
        $eTime = $time . ' 23:59:59';
        $query = self::getInstance()->createQuery('t')
            ->where('t.status = 0')
            ->andWhere('t.show_flag = 1')
            ->andWhere('t.purchase_flag = 0')
            ->andWhere('t.publish_date >= ?', $sTime)
            ->andWhere('t.publish_date <= ?', $eTime)
            ->orderBy('t.publish_date DESC, t.hits DESC');
        return $query->execute();
    }
}