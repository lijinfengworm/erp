<?php

/**
 * KllCommentTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class KllCommentTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object KllCommentTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('KllComment');
    }

    public function getComment($product_id,$is_img,$page,$page_num = 20){
        $query = self::getInstance()->createQuery()
            ->select('id,user_id,user_name,content,imgs,tags_attr,attr,created_at')
            ->where('product_id = ?',$product_id)
            ->andWhere('status = ?',1);

        if($is_img)$query = $query->andWhere('imgs != ?','');

        $data = $query->offset(($page-1)*$page_num)
            ->limit($page_num)
            ->orderBy('created_at DESC')
            ->fetchArray();

        return $data;
    }

    public function getCommentCount($product_id,$is_img){
        $query = self::getInstance()->createQuery()
            ->where('product_id = ?',$product_id)
            ->andWhere('status = ?',1);

        if($is_img)$query = $query->andWhere('imgs != ?','');

        return $query->count();
    }

    // 获取评价列表
    public function getCommentList($pid, $hasImg = 0, $tagId = 0, $page = 1, $pageSize = 20,$uid='')
    {
        $offset = ($page - 1) * $pageSize;
        $params = array();
        $sql = 'SELECT tdc.id, tdc.user_id, tdc.user_name, tdc.content, tdc.imgs, tdc.tags_attr, tdc.attr, tdc.created_at FROM kll_comment tdc';
        if ($tagId) {
            $sql .= ' JOIN kll_comment_tags_count tdct ON tdc.id = tdct.comment_id';
        }
        $sql .= ' WHERE tdc.product_id = ? AND (tdc.status = 1 OR tdc.status = 3) AND tdc.private = 0 ';
        $params[] = $pid;
        if ($hasImg) {
            $sql .= ' AND tdc.imgs != \'\'';
        }
        if ($tagId) {
            $sql .= ' AND tdct.tag_id = ?';
            $params[] = $tagId;
        }
        if ($uid) {
            if($hasImg) {
                $sql .= ' OR (tdc.user_id = ? AND tdc.private = 1 AND tdc.product_id = ?  AND tdc.imgs != \'\')';
            } else {
                $sql .= ' OR (tdc.user_id = ? AND tdc.private = 1 AND tdc.product_id = ?)';
            }
            $params[] = $uid;
            $params[] = $pid;
        }
        $sql .= ' ORDER BY tdc.created_at DESC LIMIT ' . $pageSize . ' OFFSET ' . $offset;
        $conn = Doctrine_Manager::getInstance()->getConnection('kaluli');
        $st = $conn->execute($sql, $params);
        return $st->fetchAll(Doctrine_Core::FETCH_ASSOC);
    }

    // 获取评价列表总条数
    public function getCommentListCount($pid, $hasImg = 0, $tagId = 0,$uid)
    {
        $params = array();
        $sql = 'SELECT COUNT(1) AS num FROM kll_comment tdc';
        if ($tagId) {
            $sql .= ' JOIN kll_comment_tags_count tdct ON tdc.id = tdct.comment_id';
        }
        $sql .= ' WHERE tdc.product_id = ? AND (tdc.status = 1 OR tdc.status = 3) and tdc.private=0 ';
        $params[] = $pid;
        if ($hasImg) {
            $sql .= ' AND tdc.imgs != \'\'';
        }
        if ($tagId) {
            $sql .= ' AND tdct.tag_id = ?';
            $params[] = $tagId;
        }
        if ($uid) {
            if($hasImg) {
                $sql .= ' OR (tdc.user_id = ? AND tdc.private = 1 AND tdc.product_id = ?  AND tdc.imgs != \'\')';
            } else {
                $sql .= ' OR (tdc.user_id = ? AND tdc.private = 1 AND tdc.product_id = ?)';
            }
            $params[] = $uid;
            $params[] = $pid;
        }

        $conn = Doctrine_Manager::getInstance()->getConnection('kaluli');
        $st = $conn->execute($sql, $params);
        $res = $st->fetch(Doctrine_Core::FETCH_ASSOC);
        return $res['num'];
    }

    //后台评论查询
    public static function  getAll($bind = array()) {
        $data = self::getInstance()->createQuery();
        //select
        if (!empty($bind['select'])){
            $data->select($bind['select']);
        } else {
            $data->select("*");
        }
        //leftJoin
        if (!empty($bind['leftJoin'])){
            $data->leftJoin($bind['leftJoin']);
        }
        //where 简单判断  如果复杂 建议新写函数
        if(!empty($bind['where']) && count($bind['where']) > 0) {
            foreach($bind['where'] as $k=>$v) {
                $data->addWhere($v);
            }
        }

        //whereIn 简单判断  如果复杂 建议新写函数
        if(!empty($bind['whereIn']) && count($bind['whereIn']) > 0) {
            foreach($bind['whereIn'] as $k=>$v) {
                $data->WhereIn($k,$v);
            }
        }

        //order
        if (!empty($bind['order'])){
            $data->orderBy($bind['order']);
        } else {
            $data->orderBy('id desc');
        }
        //limit
        if (!empty($bind['limit'])){
            $data->limit($bind['limit']);
        }

        if(!empty($bind['offset'])) {
            $data->offset($bind['offset']);
        }
        if(!empty($bind['groupBY'])){
            $data->groupBy($bind['groupBY']);
        }
        $data =  $data->fetchArray();
        if(!empty($bind['is_count'])) {
            $data = $data[0]['num'];
        }
        return $data;
    }


}