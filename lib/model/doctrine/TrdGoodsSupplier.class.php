<?php

/**
 * TrdGoodsSupplier
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class TrdGoodsSupplier extends BaseTrdGoodsSupplier
{
    public function preInsert($event)
    {
        parent::postInsert($event);
        $this->updateGoodsSuppliertNum();
    }


    public function preUpdate($event)
    {
        parent::preUpdate($event);
        $oldvalue = $this->getModified(true);
        $new = $this->getModified();
        $modified = array_keys($new);

        $updateFields = array(
            'status',
            'name',
            'description',
            'url',
            'price',
        );
        if(array_intersect($updateFields,$modified)){
            $this->updateGoodsSuppliertNum();
            #更新商品动态ES
            $tmp = TrdGoodsNoticeTable::getInstance()->createQuery()->where('supplier_id =?',$this->getId())->fetchArray();
            if($new['status'] == 1)
            {
                # 下架
                $op = 'delete';
            }elseif($oldvalue['status'] == 1 && $new['status'] == 0){
                # 下架边上架
                $op = 'create';
            }else{
                $op = 'update';
            }
            if(!empty($tmp[0]['id']))
            {
                $message = array(
                    'id' => $tmp[0]['id'],
                    'type' => $op,
                    'channelType' => 'goods_notice',
                );
                $this->sendMqNotice($message);
            }
        }
    }

    /*
     *修改商品有效评论数
     **/
    private function updateGoodsSuppliertNum(){
        $c = TrdGoodsSupplierTable::getInstance()->createQuery()
            ->where('goods_id = ?', $this->goods_id)
            ->andWhere('status = ?',0)
            ->count();

        //本条
        if($this->status == 0){
            $c+=1;
        }else{
            $c-=1;
        }

        //保存
        $g = trdGoodsTable::getInstance()->find($this->goods_id);
        if($g){
            $g->setSupplierCount($c);
            $g->save();
        }
    }

    public function sendMqNotice($message)
    {
        $amqpParams = sfConfig::get("app_mabbitmq_options_shihuo");
        $connection = new AMQPConnection($amqpParams['params']['host'], $amqpParams['params']['port'], $amqpParams['params']['user'], $amqpParams['params']['pass'], $amqpParams['params']['vhost']);
        $channel = $connection->channel();
        $arguments = array(
            "x-dead-letter-exchange" => array("S", "amq.topic"),
            "x-message-ttl" => array("I", 1500),
            "x-dead-letter-routing-key" => array("S", "shihuo.goods.notice.detail")
        );
        $channel->queue_declare('trd_goods_notice_deferred', false, true, false, false, false, $arguments);

        $msg = new AMQPMessage(json_encode($message));
        $channel->basic_publish($msg, '', 'trd_goods_notice_deferred');

    }

}
