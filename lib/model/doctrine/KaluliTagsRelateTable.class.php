<?php

/**
 * KaluliTagsRelateTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class KaluliTagsRelateTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object KaluliTagsRelateTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('KaluliTagsRelate');
    }

    public static function getTagsByArticleId($id)
    {
        $tmp =  self::getInstance()->createQuery()->where('type = 2')->andWhere('pid = ?',$id)->fetchArray();
        if(empty($tmp)) return false;
        foreach($tmp as $v)
        {
            $data[] = $v['tag_id'];
        }
        return $data;
    }

    /*
    *获取标签名
   **/
    public static function getTags($type,$pid){
        $sql = "SELECT t.name,t.type FROM kll_tags_relate tr LEFT JOIN kll_tags t ON tr.tag_id = t.id  WHERE tr.type = {$type} AND `pid` = {$pid}";
        $conn = Doctrine_Manager::getInstance()->getConnection('kaluli');
        $st = $conn->execute($sql);
        $tagsArr = $st->fetchAll(Doctrine_Core::FETCH_ASSOC);
        $conn->close();

        $newTagsArr = array();
        foreach($tagsArr as $k=>$v){
            $newTagsArr[$v['type']][] = $v['name'];
        }

        return $newTagsArr;
    }

    public  static function getByTagIdToPid($tag_id,$type = 1,$_select = '*') {
        $tmp =  self::getInstance()->createQuery()
            ->select($_select)
            ->distinct('pid')
            ->where('type = 1')
            ->andWhere('tag_id = ?',$tag_id)
            ->fetchArray();
        if(empty($tmp)) return false;
        return $tmp;
    }


    public static function getTagsByItemId($id)
    {
        $tmp =  self::getInstance()->createQuery()->where('type = 1')->andWhere('pid = ?',$id)->fetchArray();
        if(empty($tmp)) return false;
        foreach($tmp as $v)
        {
            $data[] = $v['tag_id'];
        }
        return $data;
    }
}