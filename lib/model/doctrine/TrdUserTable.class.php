<?php

/**
 * TrdUserTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdUserTable extends Doctrine_Table
{
    const STATUS_NORMAL = 0;
    const STATUS_BANNED = 1;
    const STATUS_BANNED_PERMANENT = 2;
    
    /**
     * Returns an instance of this class.
     *
     * @return object TrdUserTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdUser');
    }

    public function saveToDB() {
        if (sfContext::getInstance()->getUser()->isAuthenticated()) {
            $uid = sfContext::getInstance()->getUser()->getAttribute('uid');
            $username = sfContext::getInstance()->getUser()->getAttribute('username');
            if($this->countByHupuUid($uid) == 0) {
                $TrdUser = new TrdUser();
                $TrdUser->setHupuUid($uid);
                $TrdUser->setHupuUsername($username);
                $TrdUser->save();
            }
        }
    }

    public function countByHupuUid($hupu_uid) {
        $count = self::getInstance()->createQuery()
            ->where('hupu_uid=?', $hupu_uid)
            ->count();

        return $count;
    }

    public function getByHupuUid($hupu_uid) {
        $rs = self::getInstance()->createQuery()
            ->where('hupu_uid=?', $hupu_uid)
            ->fetchOne();

        return $rs;
    }
    
    public function getAllBannedUserId()
    {
      $query = Doctrine_Query::create()
                ->select('u.id')
                ->from('TrdUser u')
                ->where('u.ban_end_time <= ?', date('Y-m-d H:i:s'))
                ->andWhere('u.status = ?', self::STATUS_BANNED);
                      
      $reqult = $query->execute(Doctrine_Core::HYDRATE_ARRAY);
      
      return $reqult;
    }
    
    public function unbanUsers()
    {      
      return Doctrine_Query::create()
              ->update('TrdUser')                
              ->set('status', self::STATUS_NORMAL)
              ->where('ban_end_time <= ?', date('Y-m-d H:i:s'))
              ->andWhere('status = ?', self::STATUS_BANNED)
              ->execute();      
    }

    public function is_ban($hupu_id) {
        $rs = $this->getByHupuUid($hupu_id);
        if($rs->getStatus() != self::STATUS_NORMAL) {
            return true;
        }

        return false;
    }
}
