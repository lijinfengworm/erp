<?php

/**
 * KaluliItemTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class KaluliItemTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object KaluliItemTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('KaluliItem');
    }

    public static function houtaGetCount($selectMap = array(),$whereIn=array())
    {
        $query = self::getInstance()->createQuery() ;
        if(!empty($selectMap)) {
            foreach ($selectMap as $v) {
                $query->andWhere($v);
            }
        }
        if(!empty($whereIn)) {
            foreach ($whereIn as $kk =>$vv) {
                $query->whereIn($kk,$vv);
            }
        }
        return $query->count();
    }

    public static function houtaGetList($selectMap=array(),$whereIn=array(),$offset=0, $limit=20)
    {
        $query = self::getInstance()->createQuery();
        if(!empty($selectMap)) {
            foreach ($selectMap as $v) {
                $query->andWhere($v);
            }
        }
        if(!empty($whereIn)) {
            foreach ($whereIn as $kk =>$vv) {
                $query->whereIn($kk,$vv);
            }
        }
         $query->orderBy('id desc')
            ->offset($offset)
            ->limit($limit);
        return $query->fetchArray();
    }

    /*
     * by ID
     * update by 李斌 增加零元购判断逻辑
     **/
    public static function getItemById($id,$isTag = false,$isZero = false)
    {
        if(!$id) return false;
        //增加0元购商品逻辑判断，未上架也能被查出
        if($isZero) {
            $res =  self::getInstance()->createQuery()
                ->select('id,title,pic,brand_id,sell_point,intro,price,discount_price,status,created_at')
                ->where('id=?',$id)
                ->fetchArray();

        } else {
            $res = self::getInstance()->createQuery()
                ->select('id,title,pic,brand_id,sell_point,intro,price,discount_price,status,created_at')
                ->where('id=?', $id)
                ->andWhere('status =?', 3)
                ->fetchArray();
        }
        if($res){
            $res = $res[0];

            $attr = kaluliItemAttrTable::getByItemId($id);

            $res['content'] = $attr->getContent();
            $res['comment_count'] = $attr->getCommentCount();
            $res['comment_imgs_count'] = $attr->getCommentImgsCount();
            $tmp = $attr->getCommentTagsCount();
            if(!empty($tmp))
            {
                $tmp = json_decode($tmp,true);
            }else{
                $tmp = array();
            }
            $res['comment_tags_count'] = $tmp;
            $res['sales_count'] = $attr->getSalesCount();
            $res['review'] = $attr->getReview();
            $res['content'] = $attr->getContent();
            $res['pic_detail'] = (array)unserialize($attr->getpicDetail());
            $res['attrs'] = unserialize($attr->getAttrs());
            if($isTag){
                $tags = kaluliTagsRelateTable::getInstance()->getTags(1,$id);
                $res['tags'] = $tags;
            }
        } else
            $res = array();

        return $res;
    }

    /*
     * by ID
     **/
    public static function getItemByIds($id,$status=1)
    {
        if(empty($id)) return false;
        if($status == 1) {
            $res = self::getInstance()->createQuery()
                ->select('id,title,pic,brand_id,sell_point,intro,price,discount_price,status,created_at')
                ->whereIn('id', $id)
                ->andWhere('status =?', 3)
                ->fetchArray();
        }else {
            $res = self::getInstance()->createQuery()
                ->select('id,title,pic,brand_id,sell_point,intro,price,discount_price,status,created_at')
                ->whereIn('id', $id)
                ->fetchArray();
        }
        return $res;
    }

    public static function getItemByBrandId($brandId) {
        if(empty($brandId)) return false;
        $res = self::getInstance()->createQuery()
            ->select('id,title,pic,brand_id,sell_point,intro,price,discount_price,status,created_at')
            ->where('brand_id = ?',$brandId)
            ->andWhere('status =?', 3)
            ->fetchArray();

        return $res;
    }

    /*
     * 获取信息
     * 韩晓林
    */
    public  static  function getMessage($array = array()){
        if(isset($array['limit']))
            $limit = $array['limit'];
        else
            $limit = 30;

        if(isset($array['page']))
            $num = $array['page']*$limit;
        else
            $num = 0;

        if(isset($array['order']))
            $order = $array['order'];
        else
            $order = "created_at DESC";

        $objs = self::getInstance()->createQuery('t')->limit($limit)->offset($num)->orderBy($order);

        if(isset($array['select'])) $objs = $objs->select($array['select']);
        if(isset($array['ids']) && !empty($array['ids'])) $objs = $objs->andwhere("t.id  in (" . rtrim(join(",", $array['ids']),',') . ") ");
        if(isset($array['day'])) $objs = $objs->andWhere('t.created_at >= ?',date('Y-m-d H:i:s', strtotime("-{$array['day']} day")));
        if(isset($array['brand_id'])) $objs = $objs->andwhere('t.brand_id = ?',$array['brand_id']);
        if(isset($array['not_id'])  && $array['not_id']) $objs = $objs->andWhere("t.id not in (" . join(",", $array['not_id']) . ") ");
        if(isset($array['status_es'])) $objs = $objs->andWhere('t.status_es = 1');

        $objs = $objs->andWhere('t.status = 3');  //条件后置,尽可能过滤最多的选项

        if(isset($array['arr']))
            return $objs = $objs->fetchArray();
        else
            return $objs = $objs->execute();
    }

    # 随机商品
    public static function getRandItem($rand=0,$num=6)
    {
        $data = CacheModel::getCache();
        if( empty($data) )
        {
            $connection = Doctrine_Manager::getInstance()->getConnection('kaluli');
            $query = "select id,brand_id,sell_point,discount_price,pic,title from kll_item where status=3 ORDER BY rand() LIMIT {$num}";
            $statement = $connection->execute($query);
            $statement->execute();
            $data = $statement->fetchAll(PDO::FETCH_ASSOC);
            if(!empty($data))
            {
                $brands = KaluliItemForm::getBrandsByDictionary();
                foreach($data as $k=>$v)
                {
                    if(!empty($brands[$v['brand_id']]))
                    {
                        $data[$k]['brand'] = $brands[$v['brand_id']];
                    }
                    else
                    {
                        unset($data[$k]);
                    }
                }
            }
            CacheModel::setCache($data,600);
        }
        return $data;
    }


    /**
     * 获取一条会员信息
     */
    public static function getOne($id,$field = '') {
        $info = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('id = ?',$id)
            ->fetchOne();
        if(empty($info)) return false;
        $info = $info->toArray();
        if(empty($field)) return $info;
        return $info[$field];
    }
     /**
     * 获取一条商品信息
     * 只获取价格
     */
    public static function getOneForPrice($id,$field = '') {
        $info = self::getInstance()
            ->createQuery()
            ->select('id, discount_price')
            ->andWhere('id = ?',$id)
            ->fetchOne();
        if(empty($info)) return false;
        return $info;
    }


    # 浏览足迹
    public static function history()
    {
        $history = json_decode(base64_decode(sfContext::getInstance()->getRequest()->getCookie('item_history')));

        if( !empty($history) && is_array($history))
        {
            $data = array();
            foreach($history as $v)
            {
                $tmp = self::getInstance()
                    ->createQuery()
                    ->where('id = ?',$v)
                    ->limit(4)
                    ->fetchArray();
                if(!empty($tmp[0]))
                {
                    $data[] = $tmp[0];
                }
            }
            return $data;
        }
        else
        {
            return null;
        }
    }


    # 客服推荐
    public static function getHotItems($num=6)
    {
        $data = CacheModel::getCache();
        if( empty($data) )
        {
            $data = self::getInstance()
                ->createQuery()
                ->orderBy('hits desc')
                ->limit($num)
                ->fetchArray();

            CacheModel::setCache($data,600);
        }
        return $data;
    }
    /*
     * 获取信息
     * kworm
     * 包括下架的商品
    */
    public  static  function getMessageOff($array = array()){

        if(isset($array['limit']))
            $limit = $array['limit'];
        else
            $limit = 30;

        if(isset($array['page']))
            $num = $array['page']*$limit;
        else
            $num = 0;

        if(isset($array['order']))
            $order = $array['order'];
        else
            $order = "created_at DESC";

        $objs = self::getInstance()->createQuery('t')->limit($limit)->offset($num)->orderBy($order);

        if(isset($array['select'])) $objs = $objs->select($array['select']);
        if(isset($array['ids']) && !empty($array['ids'])) $objs = $objs->andwhere("t.id  in (" . rtrim(join(",", $array['ids']),',') . ") ");
        if(isset($array['day'])) $objs = $objs->andWhere('t.created_at >= ?',date('Y-m-d H:i:s', strtotime("-{$array['day']} day")));
        if(isset($array['brand_id'])) $objs = $objs->andwhere('t.brand_id = ?',$array['brand_id']);
        if(isset($array['not_id'])  && $array['not_id']) $objs = $objs->andWhere("t.id not in (" . join(",", $array['not_id']) . ") ");

        // $objs = $objs->andWhere('t.status = 3');  //条件后置,尽可能过滤最多的选项
        
        if(isset($array['arr']))
            return $objs = $objs->fetchArray();
        else
            return $objs = $objs->execute();
    }

}