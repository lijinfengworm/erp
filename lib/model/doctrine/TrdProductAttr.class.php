<?php

/**
 * TrdProductAttr
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    HC
 * @subpackage model
 * @author     HoopChina.com Dev Team
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class TrdProductAttr extends BaseTrdProductAttr {

    //最后更新时间间隔
    public static $LAST_CRAWL_DATE = 3600;



    public function getTotalPrice(){
        return $this->getPrice() + $this->getFreight();
    }
    public function getClassname(){
        switch($this->getRootId()){
            case 1:
                return '运动户外';
                break;
            case 2:
                return '休闲鞋服';
                break;
            case 3:
                return '电脑数码';
                break;
            case 4:
                return '家用电器';
                break;
            case 5:
                return '食品保健';
                break;
            case 6:
                return '家居百货';
                break;
            case 7:
                return '其他分类';
                break;
            default:
                return '未知分类';
                break;
        }
    }
    public function clickAdd() {
        $this->setHits($this->getHits() + 1);
        $this->save();
    }
    public function daceClickAdd() {
        $this->setDaceHits($this->getDaceHits() + 1);
        $this->save();
    }
    public function daceBuyClickAdd() {
        $this->setDaceBuyHits($this->getDaceBuyHits() + 1);
        $this->save();
    }
    public function getDetailFreight($flag = false) {
        if ($this->getBusiness() == TrdProductAttrTable::$zhifa_shihuo_business) return 0;
        $weight =  $this->getWeight() ? $this->getWeight() : $this->getBusinessWeight();
        if($weight){
            $detailFreight = $weight*40;
            if ($weight > 1 && $weight <= 2) {
                $detailFreight += 2;
            } elseif ($weight > 2 && $weight <= 3) {
                $detailFreight += 3;
            } elseif ($weight > 3 && $weight <= 4) {
                $detailFreight += 4;
            } elseif ($weight > 4 && $weight <= 5) {
                $detailFreight += 5;
            } elseif ($weight > 5) {
                $detailFreight += 6;
            }
            if ($detailFreight<46) $detailFreight = 46;
        } else {
            $detailFreight = 0;
        }
        if($detailFreight == 0 && $flag) $detailFreight = 2015;
        return $detailFreight;
    }
    
    public function save(Doctrine_Connection $conn = null) 
    {
        $modifiedFields = $this->getModified(true);
        //同步运费
        $syncAskKeyArray1 =array('weight','business_weight');
        if($this->getFreight() !='' || array_intersect($syncAskKeyArray1,array_keys($modifiedFields)))
        {
            $this->setFreight($this->saveIntFreight());
        }
        parent::save($conn);
        //同步商品到新闻
        $syncAskKeyArray =array('news_id','show_flag','start_date','end_date','status');
        if(!$this->isNew() && array_intersect($syncAskKeyArray,array_keys($modifiedFields)))
        {
            $this->syncYouhuiInfo();
        }
        return $this->getId();
        
    }
    
    private function saveIntFreight(){
        $weight = $this->getWeight()?$this->getWeight():$this->getBusinessWeight();
        $freight = $weight*40;
        if ($weight > 1 && $weight <= 2) {
            $freight += 2;
        } elseif ($weight > 2 && $weight <= 3) {
            $freight += 3;
        } elseif ($weight > 3 && $weight <= 4) {
            $freight += 4;
        } elseif ($weight > 4 && $weight <= 5) {
            $freight += 5;
        } elseif ($weight > 5) {
            $freight += 6;
        }
        if($freight< 46) $freight = 46;
        return $freight;
    }
    
    private function syncYouhuiInfo(){
        $result = TrdNewsTable::getInstance()->createQuery()->select('*')->where('product_id = ?',$this->getId())->execute();
        if (count($result)>0){
            foreach ($result as $youhui) {
                if ($this->getStatus() == 1 || $this->getShowFlag() == 0){
                    $youhui->setProductId(0);
                    $youhui->setProductStartDate(0);
                    $youhui->setProductEndDate(0);
                    $youhui->save();
                } else {
                    $youhui->setProductStartDate($this->getStartDate());
                    $youhui->setProductEndDate($this->getEndDate());
                    $youhui->save();
                }
            }
        } 
        if($this->getNewsId()){
            $result = TrdNewsTable::getInstance()->find($this->getNewsId());
            if ($result){
                if ($this->getStatus() == 1 || $this->getShowFlag() == 0){
                    $result->setProductId(0);
                    $result->setProductStartDate(0);
                    $result->setProductEndDate(0);
                    $result->save();
                } else {
                    $result->setProductId($this->getId());
                    $result->setProductStartDate($this->getStartDate());
                    $result->setProductEndDate($this->getEndDate());
                    $result->save();
                }
            }
        }
        return true;
    }
    
    public function getFormatShowFlag(){
        if ($this->getShowFlag() == 1){
            echo '已抓取';
        } else {
            echo '未抓取';
        }
    }


    public function postInsert($event)
    {
        $message = array(
            'id' => $this->getId(),
            'type' => 'create',
            'channelType'=>'daigou'
        );
        $this->sendMqMessage($message);
        parent::postInsert($event);
    }

    public function preUpdate($event)
    {
        $new = $this->getModified();
        $modified = array_keys($new);

        $updateFields = array('title','brand_id','price','root_id','children_id','publish_date','hits','show_flag','purchase_flag','status');
        if(array_intersect($updateFields,$modified)){
            $message = array(
                'id' => $this->getId(),
                'type' => 'update',
                'channelType'=>'daigou',
                'modified'=>$modified
            );

            $this->sendMqMessage($message);
        }

        parent::preUpdate($event);
    }

    public function postDelete($event)
    {
        $message = array(
            'id' => $this->getId(),
            'type' => 'delete',
            'channelType'=>'daigou'
        );
        $this->sendMqMessage($message);
        parent::postDelete($event);
    }

    public function sendMqMessage($message)
    {
        $amqpParams = sfConfig::get("app_mabbitmq_options_shihuo");
        $connection = new AMQPConnection($amqpParams['params']['host'], $amqpParams['params']['port'],$amqpParams['params']['user'], $amqpParams['params']['pass'], $amqpParams['params']['vhost']);
        $channel = $connection->channel();
        $arguments = array(
            "x-dead-letter-exchange" => array("S", "amq.topic"),
            "x-message-ttl" => array("I", 2000),
            "x-dead-letter-routing-key" => array("S", "shihuo.product.detail")
        );
        $channel->queue_declare('daigou_deferred', false, true, false, false, false, $arguments);

        $msg = new AMQPMessage(json_encode($message));
        $channel->basic_publish($msg, '', 'daigou_deferred');
    }

    //解压缩
    public function getContent(){
        if (!is_object($this->_data['content']) && !empty($this->_data['content']) && is_null(json_decode($this->_data['content']))) {
            return gzuncompress(base64_decode($this->_data['content']));
        } else {
            return $this->_data['content'];
        }
    }
}
