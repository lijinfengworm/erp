<?php

/**
 * TrdHaitaoOrderTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdHaitaoOrderTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object TrdHaitaoOrderTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('TrdHaitaoOrder');
    }

    public function orders($order_number, $title, $start_time, $end_time) {
        $q = $this->createQuery('c')->orderBy('c.id desc');
        if ($order_number)
            $q->andWhere('c.order_number = ?', $order_number);
        if ($title)
            $q->andWhere('c.title LIKE ?', '%' . $title . '%');
        if ($start_time)
            $q->andWhere('c.order_time >= ?', $start_time);
        if ($end_time)
            $q->andWhere('c.order_time <= ?', $end_time);
        return $q;
    }

    public function summaryReport($order_number, $title, $start_time, $end_time) {
        $q = $this->createQuery()->select('SUM(total_price) as total_price,COUNT(*) as orders,SUM(number) as number,source');
        $q->where('pay_status != ?','0');
        if ($order_number)
            $q->andWhere('order_number = ?', $order_number);
        if ($title)
            $q->andWhere('title LIKE ?', '%' . $title . '%');
        if ($start_time)
            $q->andWhere('order_time >= ?', $start_time);
        if ($end_time)
            $q->andWhere('order_time <= ?', $end_time);
        $q->groupBy('source');
        return $q->fetchArray();
    }


	public function getMaxOrderNewsIds()
    {
        $info = $this->createQuery()
            ->select('count(*) AS total,news_id')
            ->andWhere('news_id > 0')
            ->groupBy("news_id")
            ->orderBy('total desc')
            ->limit("35")
            ->execute()
            ->toArray();

        $ids = array();
        foreach($info AS $key => $val)
        {
            $ids[] = $val['news_id'];
        }
        return $ids;
    }

    public static function GetNumByType($hupuUid, $type="all")
    {
        $return = array();
        if($type == "pendpay" || $type == "all")
        {
            $info = self::getInstance()
                ->createQuery()
                ->select('count(*) AS total')
                ->andWhere('hupu_uid = ?',$hupuUid)
                ->andWhere("status In (0)")
                ->fetchOne()
                ->toArray();
            $return["pendpay"] = $info['total'];
        }

        if($type == "pendsend" || $type == "all" )
        {
            $info = self::getInstance()
                ->createQuery()
                ->select('count(*) AS total')
                ->andWhere('hupu_uid = ?',$hupuUid)
                ->andWhere("status In (1,2)")
                ->fetchOne()
                ->toArray();
            $return["pendsend"] = $info['total'];
        }

        if($type == "pendreceipt" || $type == "all")
        {
            $info = self::getInstance()
                ->createQuery()
                ->select('count(*) AS total')
                ->andWhere('hupu_uid = ?',$hupuUid)
                ->andWhere("status In (3,4,5,6,11,12)")
                ->fetchOne()
                ->toArray();
            $return["pendreceipt"] = $info['total'];
        }

        if($type == "all")
        {
            $info = self::getInstance()
                ->createQuery()
                ->select('count(*) AS total')
                ->andWhere('hupu_uid = ?',$hupuUid)
                ->fetchOne()
                ->toArray();
            $return["all"] = $info['total'];
        }

        return $return;
    }

    public static function GetOrderByType($hupuUid, $type="all",$order="timedesc",$page=1,$limit=20)
    {
        $page = $page -1;
        $query = self::getInstance()
            ->createQuery()
            ->andWhere('hupu_uid = ?',$hupuUid);

        if($type == "pendpay")
        {
            $query->andWhere("status In (0)");
        }

        if($type == "pendsend")
        {
            $query->andWhere("status In (1,2)");
        }

        if($type == "pendreceipt" )
        {
            $query->andWhere("status In (3,4,5,6,11,12)");
        }

        if($order=="timedesc")
        {
            $query->orderBy('created_at desc');
        }
        $query->limit($limit);
        $query->offset($limit*$page);

        return $query->execute();
    }

    public static function getOrderByHupuUid($hupuUid,$start_time,$end_time,$limit=0,$order="timedesc")
    {
        $query = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('hupu_uid = ?',$hupuUid)
            ->andWhere("created_at > ?",$start_time)
            ->andWhere("created_at < ?",$end_time);

        if($limit)
        {
            $query->limit($limit);
        }

        if($order=="timedesc")
        {
            $query->orderBy('created_at desc');
        }
        return $query->execute();
    }

}
