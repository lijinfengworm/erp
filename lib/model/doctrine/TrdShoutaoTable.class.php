<?php

/**
 * TrdShoutaoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdShoutaoTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TrdShoutaoTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdShoutao');
    }

    public static function houtaGetCount($search = array())
    {
        $query = self::getInstance()->createQuery();
        if(!empty($search['title']))
        {
            $query->andWhere('title like \'%'.$search['title'].'%\'');
        }
        if(!empty($search['admin_id']))
        {
            $query->andWhere('admin_id = ?',$search['admin_id']);
        }
        if(!empty($search['stime']))
        {
            $query->andWhere('created_at >= ?',$search['stime']);
        }
        if(!empty($search['etime']))
        {
            $query->andWhere('created_at < ?',$search['etime']);
        }
        if(isset($search['type']) && ($search['type'] === '0' || $search['type'] === '1'))
        {
            $query->andWhere('type = ?',$search['type']);
        }
        return $query->count();
    }


    public static function houtaGetList($offset=0,$limit=20,$search = array())
    {
        $query = self::getInstance()->createQuery();
        if(!empty($search['title']))
        {
            $query->andWhere('title like \'%'.$search['title'].'%\'');
        }
        if(!empty($search['admin_id']))
        {
            $query->andWhere('admin_id = ?',$search['admin_id']);
        }
        if(!empty($search['stime']))
        {
            $query->andWhere('created_at >= ?',$search['stime']);
        }
        if(!empty($search['etime']))
        {
            $query->andWhere('created_at < ?',$search['etime']);
        }
        if(isset($search['type']) && ($search['type'] === '0' || $search['type'] === '1'))
        {
            $query->andWhere('type = ?',$search['type']);
        }
        return $query ->orderBy('id desc')
            ->offset($offset)
            ->limit($limit)->fetchArray();
    }
}