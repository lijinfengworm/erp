<?php

/**
 * TrdNoticesCountTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TrdNoticesCountTable extends Doctrine_Table
{
    private static $redis;
    /**
     * Returns an instance of this class.
     *
     * @return object TrdNoticesCountTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('TrdNoticesCount');
    }

    public static function getNoticeRedis()
    {
        if( ! (self::$redis ) )
        {
            self::$redis = sfContext::getInstance()->getDatabaseConnection('noticesRedis');
            self::$redis->select(0);
        }

        return self::$redis;
    }
    /**
     * 更新消息数
     * @param int $uid
     * @param int $type
     */
    public static function updateCount( $uid = null, $type = 0, $isClean = false )
    {
        if( empty($uid) || empty($type) ) return null;
        $user = self::getInstance()->createQuery()->where('uid =?',$uid)->fetchOne();
        if(empty($user))
        {
            $user = new TrdNoticesCount();
            $user->uid = $uid;
        }
        $column = 'type'.$type;
        if( true === $isClean )
        {
            $user->$column =  0;
        }
        else
        {
            $user->$column =  $user->$column + 1;
        }
        $user->save();

        # 更新redis缓存
        $key = "notice_count_".$uid;
        if ( true === self::getNoticeRedis()->exists($key) )
        {
            if( true === $isClean )
            {
                # 清空通知数量
                self::getNoticeRedis()->hDel($key,$column);
            }
            else
            {
                # 更新通知数量
                self::getNoticeRedis()->hSet($key,$column,$user->$column);
            }
        }

        return true;
    }

    /**
     * 获取用户消息数
     * @param int $uid
     * @return array
     */
    public static function getCount($uid = 0)
    {
        if( empty($uid) ) return null;
        $key = "notice_count_".$uid;
        $data = self::getNoticeRedis()->hGetAll($key);

        if(empty($data))
        {
            $user = self::getInstance()
                ->createQuery()
                ->select('type1,type2,type3'
                )->where('uid =?',$uid)
                ->fetchOne();

            if(!empty($user))
            {
                $data = array(
                    'type1' => $user->type1,
                    'type2' => $user->type2,
                    'type3' => $user->type3,
                );
            }
            else
            {
                # 初始化
                $count = new TrdNoticesCount();
                $count->uid = $uid;
                $count->save();
                $data = array(
                    'type1' => 0,
                    'type2' => 0,
                    'type3' => 0,
                );
            }
//            if($tmp['id']) unset($tmp['id']);
//            # 初始化redis
//            foreach($tmp as $k=>$v)
//            {
//                if( false !== strstr($k,"type") )
//                {
//                    $data[$k] = $v;
//                    self::getNoticeRedis()->hSet($key,$k,$v);
//                }
//            }
            self::getNoticeRedis()->hMset($key,$data);
            self::getNoticeRedis()->expire($key,86400*7);
        }

        return $data;
    }

}