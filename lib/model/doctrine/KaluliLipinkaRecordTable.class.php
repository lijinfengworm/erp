<?php

/**
 * KaluliLipinkaRecordTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class KaluliLipinkaRecordTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object TrdLipinkaRecordTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('KaluliLipinkaRecord');
    }


    //获取指定礼品卡的记录
    public static function getLipinkaData($_id) {
        $info = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('lipinka_id = ?',$_id)
            ->fetchArray();
        if(empty($info)) return false;
        return $info;
    }


    public static function startCreate($lipinka_id) {
        $data = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('lipinka_id = ?',$lipinka_id)
            ->execute();
        foreach($data as $k=>$v) {
            $v->setIsSuccess(1);
            $v->save();
        }
        return true;
    }

    public static function initOverdueTime($lipinka_id) {
        if(empty($lipinka_id)) return false;
        $_data =  self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('lipinka_id = ?',$lipinka_id)
            ->execute();
        foreach($_data as $k=>$v) {
            if($v->getPostponeType() ==  TrdLipinkaRecord::$POSTPONE_DYNAMIC && $v->getOverdueDay() > 0) {
                $_create_time = strtotime($v->getCreatedAt());
                $_overdueTime = $_create_time + (86400 * $v->getOverdueDay());
                $v->setOverdueTime($_overdueTime);  //设置激活到期
                $v->save();
            }
        }
        return true;
    }


    //删除指定记录
    public static function del_old($lipinka_id) {
        $data = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('lipinka_id = ?',$lipinka_id)
            ->execute();
        return  $data->delete();
    }



    //获取所有马上要开始生成的记录
    public static function  getStartRecordData() {
        $data = self::getInstance()
            ->createQuery()
            ->select('*')
            ->andWhere('is_success = ?',1)
            ->fetchArray();
        if(empty($data)) return false;
        //算出每张面额
        foreach($data as $k=>$v) {
            $data[$k]['price'] = (int) $v['amount'] / $v['num'];
            if(!empty($v['accept_uids'])) {
                $data[$k]['accept_uids'] = json_decode($v['accept_uids'],true);
            }
        }
        return $data;
    }


}